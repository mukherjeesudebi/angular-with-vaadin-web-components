{"ast":null,"code":"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n  properties: {\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function () {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n  _scrollTargetChanged: function (scrollTarget, isAttached) {\n    var eventTarget;\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n      this.scrollTarget = domHost && domHost.$ ? domHost.$[scrollTarget] : dom(this.ownerDocument).querySelector('#' + scrollTarget);\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset : this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset : this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function (leftOrOptions, top) {\n    var left;\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth : this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight : this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function () {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n  _toggleScrollListener: function (yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function (yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n};","map":{"version":3,"names":["dom","IronScrollTargetBehavior","properties","scrollTarget","type","HTMLElement","value","_defaultScrollTarget","observers","_shouldHaveListener","_scrollTargetChanged","isAttached","eventTarget","_oldScrollTarget","_toggleScrollListener","_doc","domHost","$","ownerDocument","querySelector","_isValidScrollTarget","_scrollHandler","scrollHandler","documentElement","_scrollTop","window","pageYOffset","scrollTop","_scrollLeft","pageXOffset","scrollLeft","top","scrollTo","left","scroll","leftOrOptions","_scrollTargetWidth","innerWidth","offsetWidth","_scrollTargetHeight","innerHeight","offsetHeight","yes","_boundScrollHandler","bind","addEventListener","removeEventListener","toggleScrollListener"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}