{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js'; // used in type annotations\n/* eslint-enable no-unused-vars */\n\nconst p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nconst normalizedMatchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport const matchesSelector = function (node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nclass DomApiNative {\n  /**\n   * @param {Node} node Node for which to create a Polymer.dom helper object.\n   */\n  constructor(node) {\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  observeNodes(callback) {\n    return new FlattenedNodesObserver( /** @type {!HTMLElement} */this.node, callback);\n  }\n\n  /**\n   * Disconnects an observer previously created via `observeNodes`\n   *\n   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n   *   to disconnect.\n   * @return {void}\n   * @override\n   */\n  unobserveNodes(observerHandle) {\n    observerHandle.disconnect();\n  }\n\n  /**\n   * Provided as a backwards-compatible API only.  This method does nothing.\n   * @return {void}\n   */\n  notifyObserver() {}\n\n  /**\n   * Returns true if the provided node is contained with this element's\n   * light-DOM children or shadow root, including any nested shadow roots\n   * of children therein.\n   *\n   * @param {Node} node Node to test\n   * @return {boolean} Returns true if the given `node` is contained within\n   *   this element's light or shadow DOM.\n   * @override\n   */\n  deepContains(node) {\n    if (wrap(this.node).contains(node)) {\n      return true;\n    }\n    let n = node;\n    let doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this.node) {\n      // use logical parentnode, or native ShadowRoot host\n      n = wrap(n).parentNode || wrap(n).host;\n    }\n    return n === this.node;\n  }\n\n  /**\n   * Returns the root node of this node.  Equivalent to `getRootNode()`.\n   *\n   * @return {Node} Top most element in the dom tree in which the node\n   * exists. If the node is connected to a document this is either a\n   * shadowRoot or the document; otherwise, it may be the node\n   * itself or a node or document fragment containing it.\n   * @override\n   */\n  getOwnerRoot() {\n    return wrap(this.node).getRootNode();\n  }\n\n  /**\n   * For slot elements, returns the nodes assigned to the slot; otherwise\n   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n   *\n   * @return {!Array<!Node>} Array of assigned nodes\n   * @override\n   */\n  getDistributedNodes() {\n    return this.node.localName === 'slot' ? wrap(this.node).assignedNodes({\n      flatten: true\n    }) : [];\n  }\n\n  /**\n   * Returns an array of all slots this element was distributed to.\n   *\n   * @return {!Array<!HTMLSlotElement>} Description\n   * @override\n   */\n  getDestinationInsertionPoints() {\n    let ip$ = [];\n    let n = wrap(this.node).assignedSlot;\n    while (n) {\n      ip$.push(n);\n      n = wrap(n).assignedSlot;\n    }\n    return ip$;\n  }\n\n  /**\n   * Calls `importNode` on the `ownerDocument` for this node.\n   *\n   * @param {!Node} node Node to import\n   * @param {boolean} deep True if the node should be cloned deeply during\n   *   import\n   * @return {Node} Clone of given node imported to this owner document\n   */\n  importNode(node, deep) {\n    let doc = this.node instanceof Document ? this.node : this.node.ownerDocument;\n    return wrap(doc).importNode(node, deep);\n  }\n\n  /**\n   * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n   * nodes assigned to child slots.\n   * @override\n   */\n  getEffectiveChildNodes() {\n    return FlattenedNodesObserver.getFlattenedNodes( /** @type {!HTMLElement} */this.node);\n  }\n\n  /**\n   * Returns a filtered list of flattened child elements for this element based\n   * on the given selector.\n   *\n   * @param {string} selector Selector to filter nodes against\n   * @return {!Array<!HTMLElement>} List of flattened child elements\n   * @override\n   */\n  queryDistributedElements(selector) {\n    let c$ = this.getEffectiveChildNodes();\n    let list = [];\n    for (let i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {\n      if (c.nodeType === Node.ELEMENT_NODE && matchesSelector(c, selector)) {\n        list.push(c);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * For shadow roots, returns the currently focused element within this\n   * shadow root.\n   *\n   * return {Node|undefined} Currently focused element\n   * @override\n   */\n  get activeElement() {\n    let node = this.node;\n    return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n  }\n}\nfunction forwardMethods(proto, methods) {\n  for (let i = 0; i < methods.length; i++) {\n    let method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */function () {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  }\n}\n\nfunction forwardReadOnlyProperties(proto, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function () {\n        const domApi = /** @type {DomApiNative} */this;\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  }\n}\nfunction forwardProperties(proto, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function () {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function (value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  }\n}\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport class EventApi {\n  constructor(event) {\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  get rootTarget() {\n    return this.path[0];\n  }\n\n  /**\n   * Returns the local (re-targeted) target for this event.\n   *\n   * @return {!EventTarget} The local (re-targeted) target for this event.\n   */\n  get localTarget() {\n    return this.event.target;\n  }\n\n  /**\n   * Returns the `composedPath` for this event.\n   * @return {!Array<!EventTarget>} The nodes this event propagated through\n   */\n  get path() {\n    return this.event.composedPath();\n  }\n}\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\nlet DomApiImpl = DomApiNative;\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  class Wrapper extends window['ShadyDOM']['Wrapper'] {}\n\n  // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach(prop => {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, ['classList']);\n  DomApiImpl = Wrapper;\n  Object.defineProperties(EventApi.prototype, {\n    localTarget: {\n      get() {\n        return this.event.currentTarget;\n      },\n      configurable: true\n    },\n    path: {\n      get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n} else {\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, ['cloneNode', 'appendChild', 'insertBefore', 'removeChild', 'replaceChild', 'setAttribute', 'removeAttribute', 'querySelector', 'querySelectorAll']);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, ['parentNode', 'firstChild', 'lastChild', 'nextSibling', 'previousSibling', 'firstElementChild', 'lastElementChild', 'nextElementSibling', 'previousElementSibling', 'childNodes', 'children', 'classList']);\n  forwardProperties(DomApiNative.prototype, ['textContent', 'innerHTML']);\n}\nexport const DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport const dom = function (obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */obj;\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */obj;\n  }\n  let helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl( /** @type {Node} */obj);\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};","map":{"version":3,"names":["wrap","FlattenedNodesObserver","flush","enqueueDebouncer","addDebouncer","Debouncer","p","Element","prototype","normalizedMatchesSelector","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","node","selector","call","DomApiNative","constructor","observeNodes","callback","unobserveNodes","observerHandle","disconnect","notifyObserver","deepContains","contains","n","doc","ownerDocument","parentNode","host","getOwnerRoot","getRootNode","getDistributedNodes","localName","assignedNodes","flatten","getDestinationInsertionPoints","ip$","assignedSlot","push","importNode","deep","Document","getEffectiveChildNodes","getFlattenedNodes","queryDistributedElements","c$","list","i","l","length","c","nodeType","Node","ELEMENT_NODE","activeElement","_activeElement","undefined","forwardMethods","proto","methods","method","apply","arguments","forwardReadOnlyProperties","properties","name","Object","defineProperty","get","domApi","configurable","forwardProperties","set","value","EventApi","event","rootTarget","path","localTarget","target","composedPath","cloneNode","appendChild","insertBefore","removeChild","replaceChild","setAttribute","removeAttribute","querySelector","querySelectorAll","firstChild","lastChild","nextSibling","previousSibling","firstElementChild","lastElementChild","nextElementSibling","previousElementSibling","childNodes","children","classList","textContent","innerHTML","DomApiImpl","window","Wrapper","getOwnPropertyNames","forEach","prop","defineProperties","currentTarget","DomApi","dom","obj","document","helper","Event"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@polymer/polymer/lib/legacy/polymer.dom.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\n\nconst p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nconst normalizedMatchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport const matchesSelector = function(node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nclass DomApiNative {\n\n  /**\n   * @param {Node} node Node for which to create a Polymer.dom helper object.\n   */\n  constructor(node) {\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  observeNodes(callback) {\n    return new FlattenedNodesObserver(\n        /** @type {!HTMLElement} */(this.node), callback);\n  }\n\n  /**\n   * Disconnects an observer previously created via `observeNodes`\n   *\n   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n   *   to disconnect.\n   * @return {void}\n   * @override\n   */\n  unobserveNodes(observerHandle) {\n    observerHandle.disconnect();\n  }\n\n  /**\n   * Provided as a backwards-compatible API only.  This method does nothing.\n   * @return {void}\n   */\n  notifyObserver() {}\n\n  /**\n   * Returns true if the provided node is contained with this element's\n   * light-DOM children or shadow root, including any nested shadow roots\n   * of children therein.\n   *\n   * @param {Node} node Node to test\n   * @return {boolean} Returns true if the given `node` is contained within\n   *   this element's light or shadow DOM.\n   * @override\n   */\n  deepContains(node) {\n    if (wrap(this.node).contains(node)) {\n      return true;\n    }\n    let n = node;\n    let doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this.node) {\n      // use logical parentnode, or native ShadowRoot host\n      n = wrap(n).parentNode || wrap(n).host;\n    }\n    return n === this.node;\n  }\n\n  /**\n   * Returns the root node of this node.  Equivalent to `getRootNode()`.\n   *\n   * @return {Node} Top most element in the dom tree in which the node\n   * exists. If the node is connected to a document this is either a\n   * shadowRoot or the document; otherwise, it may be the node\n   * itself or a node or document fragment containing it.\n   * @override\n   */\n  getOwnerRoot() {\n    return wrap(this.node).getRootNode();\n  }\n\n  /**\n   * For slot elements, returns the nodes assigned to the slot; otherwise\n   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n   *\n   * @return {!Array<!Node>} Array of assigned nodes\n   * @override\n   */\n  getDistributedNodes() {\n    return (this.node.localName === 'slot') ?\n      wrap(this.node).assignedNodes({flatten: true}) :\n      [];\n  }\n\n  /**\n   * Returns an array of all slots this element was distributed to.\n   *\n   * @return {!Array<!HTMLSlotElement>} Description\n   * @override\n   */\n  getDestinationInsertionPoints() {\n    let ip$ = [];\n    let n = wrap(this.node).assignedSlot;\n    while (n) {\n      ip$.push(n);\n      n = wrap(n).assignedSlot;\n    }\n    return ip$;\n  }\n\n  /**\n   * Calls `importNode` on the `ownerDocument` for this node.\n   *\n   * @param {!Node} node Node to import\n   * @param {boolean} deep True if the node should be cloned deeply during\n   *   import\n   * @return {Node} Clone of given node imported to this owner document\n   */\n  importNode(node, deep) {\n    let doc = this.node instanceof Document ? this.node :\n      this.node.ownerDocument;\n    return wrap(doc).importNode(node, deep);\n  }\n\n  /**\n   * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n   * nodes assigned to child slots.\n   * @override\n   */\n  getEffectiveChildNodes() {\n    return FlattenedNodesObserver.getFlattenedNodes(\n        /** @type {!HTMLElement} */ (this.node));\n  }\n\n  /**\n   * Returns a filtered list of flattened child elements for this element based\n   * on the given selector.\n   *\n   * @param {string} selector Selector to filter nodes against\n   * @return {!Array<!HTMLElement>} List of flattened child elements\n   * @override\n   */\n  queryDistributedElements(selector) {\n    let c$ = this.getEffectiveChildNodes();\n    let list = [];\n    for (let i=0, l=c$.length, c; (i<l) && (c=c$[i]); i++) {\n      if ((c.nodeType === Node.ELEMENT_NODE) &&\n          matchesSelector(c, selector)) {\n        list.push(c);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * For shadow roots, returns the currently focused element within this\n   * shadow root.\n   *\n   * return {Node|undefined} Currently focused element\n   * @override\n   */\n  get activeElement() {\n    let node = this.node;\n    return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n  }\n}\n\nfunction forwardMethods(proto, methods) {\n  for (let i=0; i < methods.length; i++) {\n    let method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */ function() {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  }\n}\n\nfunction forwardReadOnlyProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function() {\n        const domApi = /** @type {DomApiNative} */(this);\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  }\n}\n\nfunction forwardProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function() {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function(value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  }\n}\n\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport class EventApi {\n  constructor(event) {\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  get rootTarget() {\n    return this.path[0];\n  }\n\n  /**\n   * Returns the local (re-targeted) target for this event.\n   *\n   * @return {!EventTarget} The local (re-targeted) target for this event.\n   */\n  get localTarget() {\n    return this.event.target;\n  }\n\n  /**\n   * Returns the `composedPath` for this event.\n   * @return {!Array<!EventTarget>} The nodes this event propagated through\n   */\n  get path() {\n    return this.event.composedPath();\n  }\n}\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\n\nlet DomApiImpl = DomApiNative;\n\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  class Wrapper extends window['ShadyDOM']['Wrapper'] {}\n\n  // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach((prop) => {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, [\n    'classList'\n  ]);\n\n  DomApiImpl = Wrapper;\n\n  Object.defineProperties(EventApi.prototype, {\n\n    localTarget: {\n      get() {\n        return this.event.currentTarget;\n      },\n      configurable: true\n    },\n\n    path: {\n      get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n\n} else {\n\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, [\n    'cloneNode', 'appendChild', 'insertBefore', 'removeChild',\n    'replaceChild', 'setAttribute', 'removeAttribute',\n    'querySelector', 'querySelectorAll'\n  ]);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, [\n    'parentNode', 'firstChild', 'lastChild',\n    'nextSibling', 'previousSibling', 'firstElementChild',\n    'lastElementChild', 'nextElementSibling', 'previousElementSibling',\n    'childNodes', 'children', 'classList'\n  ]);\n\n  forwardProperties(DomApiNative.prototype, [\n    'textContent', 'innerHTML'\n  ]);\n}\n\nexport const DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport const dom = function(obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */(obj);\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */(obj);\n  }\n  let helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl(/** @type {Node} */(obj));\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};\n"],"mappings":"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MAAM;EAC1B;;EAEA;AACF;AACA;AACA;EACE,IAAIF,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACF,KAAK,CAACK,YAAY,CAAC,CAAC;EAClC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACAlE,YAAY,CAACX,SAAS,CAAC8E,SAAS;AAChC;AACA;AACA;AACA;AACA;AACAnE,YAAY,CAACX,SAAS,CAAC+E,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACApE,YAAY,CAACX,SAAS,CAACgF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACArE,YAAY,CAACX,SAAS,CAACiF,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACAtE,YAAY,CAACX,SAAS,CAACkF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACAvE,YAAY,CAACX,SAAS,CAACmF,YAAY;AACnC;AACA;AACA;AACA;AACA;AACAxE,YAAY,CAACX,SAAS,CAACoF,eAAe;AACtC;AACA;AACA;AACA;AACA;AACAzE,YAAY,CAACX,SAAS,CAACqF,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA1E,YAAY,CAACX,SAAS,CAACsF,gBAAgB;;AAEvC;AACA3E,YAAY,CAACX,SAAS,CAACwB,UAAU;AACjC;AACAb,YAAY,CAACX,SAAS,CAACuF,UAAU;AACjC;AACA5E,YAAY,CAACX,SAAS,CAACwF,SAAS;AAChC;AACA7E,YAAY,CAACX,SAAS,CAACyF,WAAW;AAClC;AACA9E,YAAY,CAACX,SAAS,CAAC0F,eAAe;AACtC;AACA/E,YAAY,CAACX,SAAS,CAAC2F,iBAAiB;AACxC;AACAhF,YAAY,CAACX,SAAS,CAAC4F,gBAAgB;AACvC;AACAjF,YAAY,CAACX,SAAS,CAAC6F,kBAAkB;AACzC;AACAlF,YAAY,CAACX,SAAS,CAAC8F,sBAAsB;AAC7C;AACAnF,YAAY,CAACX,SAAS,CAAC+F,UAAU;AACjC;AACApF,YAAY,CAACX,SAAS,CAACgG,QAAQ;AAC/B;AACArF,YAAY,CAACX,SAAS,CAACiG,SAAS;;AAEhC;AACAtF,YAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}