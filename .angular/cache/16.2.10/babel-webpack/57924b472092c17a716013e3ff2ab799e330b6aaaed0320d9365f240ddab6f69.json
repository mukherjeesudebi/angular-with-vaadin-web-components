{"ast":null,"code":"/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { Templatizer } from './vaadin-grid-templatizer.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = superClass => class ColumnBaseMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When set to true, the column is user-resizable.\n       * @default false\n       */\n      resizable: {\n        type: Boolean,\n        value: function () {\n          if (this.localName === 'vaadin-grid-column-group') {\n            return;\n          }\n          const parent = this.parentNode;\n          if (parent && parent.localName === 'vaadin-grid-column-group') {\n            return parent.resizable || false;\n          } else {\n            return false;\n          }\n        }\n      },\n      _headerTemplate: {\n        type: Object\n      },\n      _footerTemplate: {\n        type: Object\n      },\n      /**\n       * When true, the column is frozen. When a column inside of a column group is frozen,\n       * all of the sibling columns inside the group will get frozen also.\n       */\n      frozen: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * When set to true, the cells for this column are hidden.\n       */\n      hidden: {\n        type: Boolean\n      },\n      /**\n       * Text content to display in the header cell of the column.\n       */\n      header: {\n        type: String\n      },\n      /**\n       * Aligns the columns cell content horizontally.\n       * Supported values: \"start\", \"center\" and \"end\".\n       */\n      textAlign: {\n        type: String\n      },\n      _lastFrozen: {\n        type: Boolean,\n        value: false\n      },\n      _order: Number,\n      _reorderStatus: Boolean,\n      _emptyCells: Array,\n      _headerCell: Object,\n      _footerCell: Object,\n      _grid: Object,\n      /**\n       * Custom function for rendering the header content.\n       * Receives two arguments:\n       *\n       * - `root` The header cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      headerRenderer: Function,\n      /**\n       * Custom function for rendering the footer content.\n       * Receives two arguments:\n       *\n       * - `root` The footer cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      footerRenderer: Function\n    };\n  }\n  static get observers() {\n    return ['_widthChanged(width, _headerCell, _footerCell, _cells.*)', '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)', '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)', '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)', '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)', '_orderChanged(_order, _headerCell, _footerCell, _cells.*)', '_lastFrozenChanged(_lastFrozen)', '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)', '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)', '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)', '_resizableChanged(resizable, _headerCell)', '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)', '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n    this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n    this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n    this._templateObserver.flush();\n    if (!this._bodyTemplate) {\n      // The observer might not have triggered if the tag is empty. Run manually.\n      this._templateObserver.callback();\n    }\n    requestAnimationFrame(() => {\n      this._allCells.forEach(cell => {\n        if (!cell._content.parentNode) {\n          this._grid && this._grid.appendChild(cell._content);\n        }\n      });\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    requestAnimationFrame(() => {\n      if (!this._findHostGrid()) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n    });\n    this._gridValue = undefined;\n  }\n  _findHostGrid() {\n    let el = this;\n    // Custom elements extending grid must have a specific localName\n    while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n      el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n    }\n    return el || undefined;\n  }\n  get _grid() {\n    if (!this._gridValue) {\n      this._gridValue = this._findHostGrid();\n    }\n    return this._gridValue;\n  }\n  get _allCells() {\n    return [].concat(this._cells || []).concat(this._emptyCells || []).concat(this._headerCell).concat(this._footerCell).filter(cell => cell);\n  }\n  constructor() {\n    super();\n    this._templateObserver = new FlattenedNodesObserver(this, info => {\n      this._headerTemplate = this._prepareHeaderTemplate();\n      this._footerTemplate = this._prepareFooterTemplate();\n      this._bodyTemplate = this._prepareBodyTemplate();\n    });\n  }\n  _prepareHeaderTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n  }\n  _prepareFooterTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n  }\n  _prepareBodyTemplate() {\n    return this._prepareTemplatizer(this._findTemplate() || null);\n  }\n  _prepareTemplatizer(template, instanceProps) {\n    if (template && !template.templatizer) {\n      const templatizer = new Templatizer();\n      templatizer._grid = this._grid;\n      templatizer.dataHost = this.dataHost;\n      templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n      templatizer.template = template;\n      template.templatizer = templatizer;\n    }\n    return template;\n  }\n  _renderHeaderAndFooter() {\n    if (this.headerRenderer) {\n      this.__runRenderer(this.headerRenderer, this._headerCell);\n    }\n    if (this.footerRenderer) {\n      this.__runRenderer(this.footerRenderer, this._footerCell);\n    }\n  }\n  __runRenderer(renderer, cell, rowData) {\n    const args = [cell._content, this];\n    if (rowData && rowData.item) {\n      args.push(rowData);\n    }\n    renderer.apply(this, args);\n  }\n  __setColumnTemplateOrRenderer(template, renderer, cells) {\n    if (template && renderer) {\n      throw new Error('You should only use either a renderer or a template');\n    }\n    cells.forEach(cell => {\n      const model = this._grid.__getRowModel(cell.parentElement);\n      if (renderer) {\n        cell._renderer = renderer;\n        if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n          this.__runRenderer(renderer, cell, model);\n        }\n      } else if (cell._template !== template) {\n        cell._template = template;\n        cell._content.innerHTML = '';\n        template.templatizer._grid = template.templatizer._grid || this._grid;\n        const inst = template.templatizer.createInstance();\n        cell._content.appendChild(inst.root);\n        cell._instance = inst;\n        if (model.item) {\n          cell._instance.setProperties(model);\n        }\n      }\n    });\n  }\n  _setBodyTemplateOrRenderer(template, renderer, cells, splices) {\n    if ((template || renderer) && cells) {\n      this.__setColumnTemplateOrRenderer(template, renderer, cells);\n    }\n  }\n  _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n    if ((headerTemplate || headerRenderer) && headerCell) {\n      this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n    }\n  }\n  _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n    if ((footerTemplate || footerRenderer) && footerCell) {\n      this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n      this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n    }\n  }\n  _selectFirstTemplate(header = false, footer = false) {\n    return FlattenedNodesObserver.getFlattenedNodes(this).filter(node => node.localName === 'template' && node.classList.contains('header') === header && node.classList.contains('footer') === footer)[0];\n  }\n  _findTemplate(header, footer) {\n    const template = this._selectFirstTemplate(header, footer);\n    if (template) {\n      if (this.dataHost) {\n        // set dataHost to the context where template has been defined\n        template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n      }\n    }\n    return template;\n  }\n  _flexGrowChanged(flexGrow, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('flexGrow');\n    }\n    this._allCells.forEach(cell => cell.style.flexGrow = flexGrow);\n  }\n  _orderChanged(order, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.style.order = order);\n  }\n  _widthChanged(width, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('width');\n    }\n    this._allCells.forEach(cell => cell.style.width = width);\n\n    // Force a reflow to workaround browser issues causing double scrollbars to grid\n    // https://github.com/vaadin/vaadin-grid/issues/1586\n    if (this._grid && this._grid.__forceReflow) {\n      this._grid.__forceReflow();\n    }\n  }\n  _frozenChanged(frozen, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('frozen', frozen);\n    }\n    this._allCells.forEach(cell => this._toggleAttribute('frozen', frozen, cell));\n    this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n  }\n  _lastFrozenChanged(lastFrozen) {\n    this._allCells.forEach(cell => this._toggleAttribute('last-frozen', lastFrozen, cell));\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._lastFrozen = lastFrozen;\n    }\n  }\n  _pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate) {\n    const hasHeaderText = header !== undefined;\n    if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n      this.__setTextContent(headerCell._content, header);\n    }\n    if (path && cells.value) {\n      if (!renderer && !bodyTemplate) {\n        const pathRenderer = (root, owner, {\n          item\n        }) => this.__setTextContent(root, this.get(path, item));\n        this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n      }\n      if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n        this.__setTextContent(headerCell._content, this._generateHeader(path));\n      }\n    }\n    if (headerCell) {\n      this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n    }\n  }\n  __setTextContent(node, textContent) {\n    node.textContent !== textContent && (node.textContent = textContent);\n  }\n  _generateHeader(path) {\n    return path.substr(path.lastIndexOf('.') + 1).replace(/([A-Z])/g, '-$1').toLowerCase().replace(/-/g, ' ').replace(/^./, match => match.toUpperCase());\n  }\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n  _reorderStatusChanged(reorderStatus, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.setAttribute('reorder-status', reorderStatus));\n  }\n  _resizableChanged(resizable, headerCell) {\n    if (resizable === undefined || headerCell === undefined) {\n      return;\n    }\n    if (headerCell) {\n      [headerCell].concat(this._emptyCells).forEach(cell => {\n        if (cell) {\n          const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n          if (existingHandle) {\n            cell.removeChild(existingHandle);\n          }\n          if (resizable) {\n            const handle = document.createElement('div');\n            handle.setAttribute('part', 'resize-handle');\n            cell.appendChild(handle);\n          }\n        }\n      });\n    }\n  }\n  _textAlignChanged(textAlign, _cells, _headerCell, _footerCell) {\n    if (textAlign === undefined) {\n      return;\n    }\n    if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n      console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n      return;\n    }\n    let textAlignFallback;\n    if (getComputedStyle(this._grid).direction === 'ltr') {\n      if (textAlign === 'start') {\n        textAlignFallback = 'left';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'right';\n      }\n    } else {\n      if (textAlign === 'start') {\n        textAlignFallback = 'right';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'left';\n      }\n    }\n    this._allCells.forEach(cell => {\n      cell._content.style.textAlign = textAlign;\n      if (getComputedStyle(cell._content).textAlign !== textAlign) {\n        cell._content.style.textAlign = textAlignFallback;\n      }\n    });\n  }\n  _hiddenChanged(hidden, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('hidden', hidden);\n    }\n    this._allCells.forEach(cell => this._toggleAttribute('hidden', hidden, cell));\n    if (!!hidden !== !!this._previousHidden && this._grid) {\n      this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n      this._grid.notifyResize && this._grid.notifyResize();\n      this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n    }\n    this._previousHidden = hidden;\n  }\n};\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @memberof Vaadin\n * @mixes Vaadin.Grid.ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(PolymerElement) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      renderer: Function,\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n      _bodyTemplate: {\n        type: Object\n      },\n      _cells: Array\n    };\n  }\n}\ncustomElements.define(GridColumnElement.is, GridColumnElement);\nexport { GridColumnElement };","map":{"version":3,"names":["PolymerElement","FlattenedNodesObserver","Templatizer","ColumnBaseMixin","superClass","properties","resizable","type","Boolean","value","localName","parent","parentNode","_headerTemplate","Object","_footerTemplate","frozen","hidden","header","String","textAlign","_lastFrozen","_order","Number","_reorderStatus","_emptyCells","Array","_headerCell","_footerCell","_grid","headerRenderer","Function","footerRenderer","observers","connectedCallback","_bodyTemplate","templatizer","_templateObserver","flush","callback","requestAnimationFrame","_allCells","forEach","cell","_content","appendChild","disconnectedCallback","_findHostGrid","removeChild","_gridValue","undefined","el","test","assignedSlot","concat","_cells","filter","constructor","info","_prepareHeaderTemplate","_prepareFooterTemplate","_prepareBodyTemplate","_prepareTemplatizer","_findTemplate","template","instanceProps","dataHost","_instanceProps","_renderHeaderAndFooter","__runRenderer","renderer","rowData","args","item","push","apply","__setColumnTemplateOrRenderer","cells","Error","model","__getRowModel","parentElement","_renderer","_template","innerHTML","inst","createInstance","root","_instance","setProperties","_setBodyTemplateOrRenderer","splices","_setHeaderTemplateOrRenderer","headerTemplate","headerCell","_setFooterTemplateOrRenderer","footerTemplate","footerCell","__updateHeaderFooterRowVisibility","_selectFirstTemplate","footer","getFlattenedNodes","node","classList","contains","_rootDataHost","_flexGrowChanged","flexGrow","_columnPropChanged","style","_orderChanged","order","_widthChanged","width","__forceReflow","_frozenChanged","_toggleAttribute","_frozenCellsChanged","_lastFrozenChanged","lastFrozen","_pathOrHeaderChanged","path","bodyTemplate","hasHeaderText","__setTextContent","pathRenderer","owner","get","_generateHeader","textContent","substr","lastIndexOf","replace","toLowerCase","match","toUpperCase","name","bool","hasAttribute","setAttribute","removeAttribute","_reorderStatusChanged","reorderStatus","_resizableChanged","existingHandle","querySelector","handle","document","createElement","_textAlignChanged","indexOf","console","warn","textAlignFallback","getComputedStyle","direction","_hiddenChanged","_previousHidden","_updateLastFrozen","notifyResize","_resetKeyboardNavigation","GridColumnElement","is","autoWidth","customElements","define"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { Templatizer } from './vaadin-grid-templatizer.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = superClass => class ColumnBaseMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When set to true, the column is user-resizable.\n       * @default false\n       */\n      resizable: {\n        type: Boolean,\n        value: function() {\n          if (this.localName === 'vaadin-grid-column-group') {\n            return;\n          }\n\n          const parent = this.parentNode;\n          if (parent && parent.localName === 'vaadin-grid-column-group') {\n            return parent.resizable || false;\n          } else {\n            return false;\n          }\n        }\n      },\n\n      _headerTemplate: {\n        type: Object\n      },\n\n      _footerTemplate: {\n        type: Object\n      },\n\n      /**\n       * When true, the column is frozen. When a column inside of a column group is frozen,\n       * all of the sibling columns inside the group will get frozen also.\n       */\n      frozen: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * When set to true, the cells for this column are hidden.\n       */\n      hidden: {\n        type: Boolean\n      },\n\n      /**\n       * Text content to display in the header cell of the column.\n       */\n      header: {\n        type: String\n      },\n\n      /**\n       * Aligns the columns cell content horizontally.\n       * Supported values: \"start\", \"center\" and \"end\".\n       */\n      textAlign: {\n        type: String\n      },\n\n      _lastFrozen: {\n        type: Boolean,\n        value: false\n      },\n\n      _order: Number,\n\n      _reorderStatus: Boolean,\n\n      _emptyCells: Array,\n\n      _headerCell: Object,\n\n      _footerCell: Object,\n\n      _grid: Object,\n\n      /**\n       * Custom function for rendering the header content.\n       * Receives two arguments:\n       *\n       * - `root` The header cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      headerRenderer: Function,\n\n      /**\n       * Custom function for rendering the footer content.\n       * Receives two arguments:\n       *\n       * - `root` The footer cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       */\n      footerRenderer: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n      '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n      '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n      '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)',\n      '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n      '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n      '_lastFrozenChanged(_lastFrozen)',\n      '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)',\n      '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)',\n      '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)',\n      '_resizableChanged(resizable, _headerCell)',\n      '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n      '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n    this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n    this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n\n    this._templateObserver.flush();\n    if (!this._bodyTemplate) {\n      // The observer might not have triggered if the tag is empty. Run manually.\n      this._templateObserver.callback();\n    }\n\n    requestAnimationFrame(() => {\n      this._allCells.forEach(cell => {\n        if (!cell._content.parentNode) {\n          this._grid && this._grid.appendChild(cell._content);\n        }\n      });\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    requestAnimationFrame(() => {\n      if (!this._findHostGrid()) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n    });\n\n    this._gridValue = undefined;\n  }\n\n  _findHostGrid() {\n    let el = this;\n    // Custom elements extending grid must have a specific localName\n    while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n      el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n    }\n    return el || undefined;\n  }\n\n  get _grid() {\n    if (!this._gridValue) {\n      this._gridValue = this._findHostGrid();\n    }\n    return this._gridValue;\n  }\n\n  get _allCells() {\n    return []\n      .concat(this._cells || [])\n      .concat(this._emptyCells || [])\n      .concat(this._headerCell)\n      .concat(this._footerCell)\n      .filter(cell => cell);\n  }\n\n  constructor() {\n    super();\n\n    this._templateObserver = new FlattenedNodesObserver(this, info => {\n      this._headerTemplate = this._prepareHeaderTemplate();\n      this._footerTemplate = this._prepareFooterTemplate();\n      this._bodyTemplate = this._prepareBodyTemplate();\n    });\n  }\n\n  _prepareHeaderTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n  }\n\n  _prepareFooterTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n  }\n\n  _prepareBodyTemplate() {\n    return this._prepareTemplatizer(this._findTemplate() || null);\n  }\n\n  _prepareTemplatizer(template, instanceProps) {\n    if (template && !template.templatizer) {\n      const templatizer = new Templatizer();\n      templatizer._grid = this._grid;\n      templatizer.dataHost = this.dataHost;\n      templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n      templatizer.template = template;\n      template.templatizer = templatizer;\n    }\n\n    return template;\n  }\n\n  _renderHeaderAndFooter() {\n    if (this.headerRenderer) {\n      this.__runRenderer(this.headerRenderer, this._headerCell);\n    }\n    if (this.footerRenderer) {\n      this.__runRenderer(this.footerRenderer, this._footerCell);\n    }\n  }\n\n  __runRenderer(renderer, cell, rowData) {\n    const args = [cell._content, this];\n    if (rowData && rowData.item) {\n      args.push(rowData);\n    }\n    renderer.apply(this, args);\n  }\n\n  __setColumnTemplateOrRenderer(template, renderer, cells) {\n    if (template && renderer) {\n      throw new Error('You should only use either a renderer or a template');\n    }\n\n    cells.forEach(cell => {\n      const model = this._grid.__getRowModel(cell.parentElement);\n\n      if (renderer) {\n        cell._renderer = renderer;\n\n        if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n          this.__runRenderer(renderer, cell, model);\n        }\n      } else if (cell._template !== template) {\n        cell._template = template;\n\n        cell._content.innerHTML = '';\n        template.templatizer._grid = template.templatizer._grid || this._grid;\n        const inst = template.templatizer.createInstance();\n        cell._content.appendChild(inst.root);\n        cell._instance = inst;\n        if (model.item) {\n          cell._instance.setProperties(model);\n        }\n      }\n    });\n  }\n\n  _setBodyTemplateOrRenderer(template, renderer, cells, splices) {\n    if ((template || renderer) && cells) {\n      this.__setColumnTemplateOrRenderer(template, renderer, cells);\n    }\n  }\n\n  _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n    if ((headerTemplate || headerRenderer) && headerCell) {\n      this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n    }\n  }\n\n  _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n    if ((footerTemplate || footerRenderer) && footerCell) {\n      this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n      this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n    }\n  }\n\n  _selectFirstTemplate(header = false, footer = false) {\n    return FlattenedNodesObserver.getFlattenedNodes(this)\n      .filter(node =>\n        node.localName === 'template'\n        && node.classList.contains('header') === header\n        && node.classList.contains('footer') === footer\n      )[0];\n  }\n\n  _findTemplate(header, footer) {\n    const template = this._selectFirstTemplate(header, footer);\n    if (template) {\n      if (this.dataHost) {\n        // set dataHost to the context where template has been defined\n        template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n      }\n    }\n    return template;\n  }\n\n  _flexGrowChanged(flexGrow, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('flexGrow');\n    }\n\n    this._allCells.forEach(cell => cell.style.flexGrow = flexGrow);\n  }\n\n  _orderChanged(order, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.style.order = order);\n  }\n\n  _widthChanged(width, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('width');\n    }\n\n    this._allCells.forEach(cell => cell.style.width = width);\n\n    // Force a reflow to workaround browser issues causing double scrollbars to grid\n    // https://github.com/vaadin/vaadin-grid/issues/1586\n    if (this._grid && this._grid.__forceReflow) {\n      this._grid.__forceReflow();\n    }\n  }\n\n  _frozenChanged(frozen, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('frozen', frozen);\n    }\n\n    this._allCells.forEach(cell => this._toggleAttribute('frozen', frozen, cell));\n\n    this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n  }\n\n  _lastFrozenChanged(lastFrozen) {\n    this._allCells.forEach(cell => this._toggleAttribute('last-frozen', lastFrozen, cell));\n\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._lastFrozen = lastFrozen;\n    }\n  }\n\n  _pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate) {\n    const hasHeaderText = header !== undefined;\n    if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n      this.__setTextContent(headerCell._content, header);\n    }\n\n    if (path && cells.value) {\n      if (!renderer && !bodyTemplate) {\n        const pathRenderer = (root, owner, {item}) => this.__setTextContent(root, this.get(path, item));\n        this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n      }\n\n      if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n        this.__setTextContent(headerCell._content, this._generateHeader(path));\n      }\n    }\n\n    if (headerCell) {\n      this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n    }\n  }\n\n  __setTextContent(node, textContent) {\n    node.textContent !== textContent && (node.textContent = textContent);\n  }\n\n  _generateHeader(path) {\n    return path\n      .substr(path.lastIndexOf('.') + 1)\n      .replace(/([A-Z])/g, '-$1').toLowerCase()\n      .replace(/-/g, ' ')\n      .replace(/^./, match => match.toUpperCase());\n  }\n\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  _reorderStatusChanged(reorderStatus, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.setAttribute('reorder-status', reorderStatus));\n  }\n\n  _resizableChanged(resizable, headerCell) {\n    if (resizable === undefined || headerCell === undefined) {\n      return;\n    }\n\n    if (headerCell) {\n      [headerCell].concat(this._emptyCells).forEach(cell => {\n        if (cell) {\n          const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n          if (existingHandle) {\n            cell.removeChild(existingHandle);\n          }\n\n          if (resizable) {\n            const handle = document.createElement('div');\n            handle.setAttribute('part', 'resize-handle');\n            cell.appendChild(handle);\n          }\n        }\n      });\n    }\n  }\n\n  _textAlignChanged(textAlign, _cells, _headerCell, _footerCell) {\n    if (textAlign === undefined) {\n      return;\n    }\n    if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n      console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n      return;\n    }\n\n    let textAlignFallback;\n    if (getComputedStyle(this._grid).direction === 'ltr') {\n      if (textAlign === 'start') {\n        textAlignFallback = 'left';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'right';\n      }\n    } else {\n      if (textAlign === 'start') {\n        textAlignFallback = 'right';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'left';\n      }\n    }\n\n    this._allCells.forEach(cell => {\n      cell._content.style.textAlign = textAlign;\n      if (getComputedStyle(cell._content).textAlign !== textAlign) {\n        cell._content.style.textAlign = textAlignFallback;\n      }\n    });\n  }\n\n  _hiddenChanged(hidden, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('hidden', hidden);\n    }\n\n    this._allCells.forEach(cell => this._toggleAttribute('hidden', hidden, cell));\n\n    if (!!hidden !== !!this._previousHidden && this._grid) {\n      this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n      this._grid.notifyResize && this._grid.notifyResize();\n      this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n    }\n    this._previousHidden = hidden;\n  }\n\n};\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @memberof Vaadin\n * @mixes Vaadin.Grid.ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(PolymerElement) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       *   - `rowData.expanded` Sublevel toggle state.\n       *   - `rowData.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `rowData.selected` Selected state.\n       */\n      renderer: Function,\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n\n      _bodyTemplate: {\n        type: Object\n      },\n\n      _cells: Array\n\n    };\n  }\n\n}\n\ncustomElements.define(GridColumnElement.is, GridColumnElement);\nexport { GridColumnElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}