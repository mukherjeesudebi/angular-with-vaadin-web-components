{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { getNormalizedScrollLeft, setNormalizedScrollLeft } from '@vaadin/component-base/src/dir-utils.js';\nimport { getFlattenedElements } from '@vaadin/component-base/src/dom-utils.js';\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\nimport { KeyboardDirectionMixin } from './keyboard-direction-mixin.js';\n\n/**\n * A mixin for list elements, facilitating navigation and selection of items.\n *\n * @polymerMixin\n * @mixes KeyboardDirectionMixin\n */\nexport const ListMixin = superClass => class ListMixinClass extends KeyboardDirectionMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Used for mixin detection because `instanceof` does not work with mixins.\n       * @type {boolean}\n       */\n      _hasVaadinListMixin: {\n        value: true\n      },\n      /**\n       * If true, the user cannot interact with this element.\n       * When the element is disabled, the selected item is\n       * not updated when `selected` property is changed.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * The index of the item selected in the items array.\n       * Note: Not updated when used in `multiple` selection mode.\n       */\n      selected: {\n        type: Number,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * Define how items are disposed in the dom.\n       * Possible values are: `horizontal|vertical`.\n       * It also changes navigation keys from left/right to up/down.\n       * @type {!ListOrientation}\n       */\n      orientation: {\n        type: String,\n        reflectToAttribute: true,\n        value: ''\n      },\n      /**\n       * The list of items from which a selection can be made.\n       * It is populated from the elements passed to the light DOM,\n       * and updated dynamically when adding or removing items.\n       *\n       * The item elements must implement `Vaadin.ItemMixin`.\n       *\n       * Note: unlike `<vaadin-combo-box>`, this property is read-only,\n       * so if you want to provide items by iterating array of data,\n       * you have to use `dom-repeat` and place it to the light DOM.\n       * @type {!Array<!Element> | undefined}\n       */\n      items: {\n        type: Array,\n        readOnly: true,\n        notify: true\n      },\n      /**\n       * The search buffer for the keyboard selection feature.\n       * @private\n       */\n      _searchBuf: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n  static get observers() {\n    return ['_enhanceItems(items, orientation, selected, disabled)'];\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get _isRTL() {\n    return !this._vertical && this.getAttribute('dir') === 'rtl';\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    // Returning scroller element of the component\n    console.warn(`Please implement the '_scrollerElement' property in <${this.localName}>`);\n    return this;\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  get _vertical() {\n    return this.orientation !== 'horizontal';\n  }\n  focus() {\n    // In initialization (e.g vaadin-select) observer might not been run yet.\n    if (this._observer) {\n      this._observer.flush();\n    }\n    const firstItem = this.querySelector('[tabindex=\"0\"]') || (this.items ? this.items[0] : null);\n    this._focusItem(firstItem);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('click', e => this._onClick(e));\n    const slot = this.shadowRoot.querySelector('slot:not([name])');\n    this._observer = new SlotObserver(slot, () => {\n      this._setItems(this._filterItems(getFlattenedElements(this)));\n    });\n  }\n\n  /**\n   * Override method inherited from `KeyboardDirectionMixin`\n   * to use the stored list of item elements.\n   *\n   * @return {Element[]}\n   * @protected\n   * @override\n   */\n  _getItems() {\n    return this.items;\n  }\n\n  /** @private */\n  _enhanceItems(items, orientation, selected, disabled) {\n    if (!disabled) {\n      if (items) {\n        this.setAttribute('aria-orientation', orientation || 'vertical');\n        items.forEach(item => {\n          if (orientation) {\n            item.setAttribute('orientation', orientation);\n          } else {\n            item.removeAttribute('orientation');\n          }\n        });\n        this._setFocusable(selected || 0);\n        const itemToSelect = items[selected];\n        items.forEach(item => {\n          item.selected = item === itemToSelect;\n        });\n        if (itemToSelect && !itemToSelect.disabled) {\n          this._scrollToItem(selected);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} array\n   * @return {!Array<!Element>}\n   * @protected\n   */\n  _filterItems(array) {\n    return array.filter(e => e._hasVaadinItemMixin);\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   * @protected\n   */\n  _onClick(event) {\n    if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\n      return;\n    }\n    const item = this._filterItems(event.composedPath())[0];\n    let idx;\n    if (item && !item.disabled && (idx = this.items.indexOf(item)) >= 0) {\n      this.selected = idx;\n    }\n  }\n\n  /**\n   * @param {number} currentIdx\n   * @param {string} key\n   * @return {number}\n   * @protected\n   */\n  _searchKey(currentIdx, key) {\n    this._searchReset = Debouncer.debounce(this._searchReset, timeOut.after(500), () => {\n      this._searchBuf = '';\n    });\n    this._searchBuf += key.toLowerCase();\n    if (!this.items.some(item => this.__isMatchingKey(item))) {\n      this._searchBuf = key.toLowerCase();\n    }\n    const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\n    return this._getAvailableIndex(this.items, idx, 1, item => this.__isMatchingKey(item) && getComputedStyle(item).display !== 'none');\n  }\n\n  /** @private */\n  __isMatchingKey(item) {\n    return item.textContent.replace(/[^\\p{L}\\p{Nd}]/gu, '').toLowerCase().startsWith(this._searchBuf);\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`\n   * to search items by key.\n   *\n   * @param {!KeyboardEvent} event\n   * @protected\n   * @override\n   */\n  _onKeyDown(event) {\n    if (event.metaKey || event.ctrlKey) {\n      return;\n    }\n    const key = event.key;\n    const currentIdx = this.items.indexOf(this.focused);\n    if (/[a-zA-Z0-9]/u.test(key) && key.length === 1) {\n      const idx = this._searchKey(currentIdx, key);\n      if (idx >= 0) {\n        this._focus(idx);\n      }\n      return;\n    }\n    super._onKeyDown(event);\n  }\n\n  /**\n   * @param {!Element} item\n   * @return {boolean}\n   * @protected\n   */\n  _isItemHidden(item) {\n    return getComputedStyle(item).display === 'none';\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _setFocusable(idx) {\n    idx = this._getAvailableIndex(this.items, idx, 1);\n    const item = this.items[idx];\n    this.items.forEach(e => {\n      e.tabIndex = e === item ? 0 : -1;\n    });\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _focus(idx) {\n    this.items.forEach((e, index) => {\n      e.focused = index === idx;\n    });\n    this._setFocusable(idx);\n    this._scrollToItem(idx);\n    super._focus(idx);\n  }\n\n  /**\n   * Scroll the container to have the next item by the edge of the viewport.\n   * @param {number} idx\n   * @protected\n   */\n  _scrollToItem(idx) {\n    const item = this.items[idx];\n    if (!item) {\n      return;\n    }\n    const props = this._vertical ? ['top', 'bottom'] : this._isRTL ? ['right', 'left'] : ['left', 'right'];\n    const scrollerRect = this._scrollerElement.getBoundingClientRect();\n    const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\n    const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\n    let scrollDistance = 0;\n    if (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]] || this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]]) {\n      scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\n    } else if (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]] || this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]]) {\n      scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\n    }\n    this._scroll(scrollDistance);\n  }\n\n  /**\n   * @param {number} pixels\n   * @protected\n   */\n  _scroll(pixels) {\n    if (this._vertical) {\n      this._scrollerElement.scrollTop += pixels;\n    } else {\n      const dir = this.getAttribute('dir') || 'ltr';\n      const scrollLeft = getNormalizedScrollLeft(this._scrollerElement, dir) + pixels;\n      setNormalizedScrollLeft(this._scrollerElement, dir, scrollLeft);\n    }\n  }\n\n  /**\n   * Fired when the selection is changed.\n   * Not fired when used in `multiple` selection mode.\n   *\n   * @event selected-changed\n   * @param {Object} detail\n   * @param {Object} detail.value the index of the item selected in the items array.\n   */\n};","map":{"version":3,"names":["timeOut","Debouncer","getNormalizedScrollLeft","setNormalizedScrollLeft","getFlattenedElements","SlotObserver","KeyboardDirectionMixin","ListMixin","superClass","ListMixinClass","properties","_hasVaadinListMixin","value","disabled","type","Boolean","reflectToAttribute","selected","Number","notify","orientation","String","items","Array","readOnly","_searchBuf","observers","_isRTL","_vertical","getAttribute","_scrollerElement","console","warn","localName","focus","_observer","flush","firstItem","querySelector","_focusItem","ready","addEventListener","e","_onClick","slot","shadowRoot","_setItems","_filterItems","_getItems","_enhanceItems","setAttribute","forEach","item","removeAttribute","_setFocusable","itemToSelect","_scrollToItem","array","filter","_hasVaadinItemMixin","event","metaKey","shiftKey","ctrlKey","defaultPrevented","composedPath","idx","indexOf","_searchKey","currentIdx","key","_searchReset","debounce","after","toLowerCase","some","__isMatchingKey","length","_getAvailableIndex","getComputedStyle","display","textContent","replace","startsWith","_onKeyDown","focused","test","_focus","_isItemHidden","tabIndex","index","props","scrollerRect","getBoundingClientRect","nextItemRect","prevItemRect","scrollDistance","_scroll","pixels","scrollTop","dir","scrollLeft"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/a11y-base/src/list-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { getNormalizedScrollLeft, setNormalizedScrollLeft } from '@vaadin/component-base/src/dir-utils.js';\nimport { getFlattenedElements } from '@vaadin/component-base/src/dom-utils.js';\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\nimport { KeyboardDirectionMixin } from './keyboard-direction-mixin.js';\n\n/**\n * A mixin for list elements, facilitating navigation and selection of items.\n *\n * @polymerMixin\n * @mixes KeyboardDirectionMixin\n */\nexport const ListMixin = (superClass) =>\n  class ListMixinClass extends KeyboardDirectionMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Used for mixin detection because `instanceof` does not work with mixins.\n         * @type {boolean}\n         */\n        _hasVaadinListMixin: {\n          value: true,\n        },\n\n        /**\n         * If true, the user cannot interact with this element.\n         * When the element is disabled, the selected item is\n         * not updated when `selected` property is changed.\n         */\n        disabled: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The index of the item selected in the items array.\n         * Note: Not updated when used in `multiple` selection mode.\n         */\n        selected: {\n          type: Number,\n          reflectToAttribute: true,\n          notify: true,\n        },\n\n        /**\n         * Define how items are disposed in the dom.\n         * Possible values are: `horizontal|vertical`.\n         * It also changes navigation keys from left/right to up/down.\n         * @type {!ListOrientation}\n         */\n        orientation: {\n          type: String,\n          reflectToAttribute: true,\n          value: '',\n        },\n\n        /**\n         * The list of items from which a selection can be made.\n         * It is populated from the elements passed to the light DOM,\n         * and updated dynamically when adding or removing items.\n         *\n         * The item elements must implement `Vaadin.ItemMixin`.\n         *\n         * Note: unlike `<vaadin-combo-box>`, this property is read-only,\n         * so if you want to provide items by iterating array of data,\n         * you have to use `dom-repeat` and place it to the light DOM.\n         * @type {!Array<!Element> | undefined}\n         */\n        items: {\n          type: Array,\n          readOnly: true,\n          notify: true,\n        },\n\n        /**\n         * The search buffer for the keyboard selection feature.\n         * @private\n         */\n        _searchBuf: {\n          type: String,\n          value: '',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_enhanceItems(items, orientation, selected, disabled)'];\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get _isRTL() {\n      return !this._vertical && this.getAttribute('dir') === 'rtl';\n    }\n\n    /**\n     * @return {!HTMLElement}\n     * @protected\n     */\n    get _scrollerElement() {\n      // Returning scroller element of the component\n      console.warn(`Please implement the '_scrollerElement' property in <${this.localName}>`);\n      return this;\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get _vertical() {\n      return this.orientation !== 'horizontal';\n    }\n\n    focus() {\n      // In initialization (e.g vaadin-select) observer might not been run yet.\n      if (this._observer) {\n        this._observer.flush();\n      }\n      const firstItem = this.querySelector('[tabindex=\"0\"]') || (this.items ? this.items[0] : null);\n      this._focusItem(firstItem);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addEventListener('click', (e) => this._onClick(e));\n\n      const slot = this.shadowRoot.querySelector('slot:not([name])');\n      this._observer = new SlotObserver(slot, () => {\n        this._setItems(this._filterItems(getFlattenedElements(this)));\n      });\n    }\n\n    /**\n     * Override method inherited from `KeyboardDirectionMixin`\n     * to use the stored list of item elements.\n     *\n     * @return {Element[]}\n     * @protected\n     * @override\n     */\n    _getItems() {\n      return this.items;\n    }\n\n    /** @private */\n    _enhanceItems(items, orientation, selected, disabled) {\n      if (!disabled) {\n        if (items) {\n          this.setAttribute('aria-orientation', orientation || 'vertical');\n          items.forEach((item) => {\n            if (orientation) {\n              item.setAttribute('orientation', orientation);\n            } else {\n              item.removeAttribute('orientation');\n            }\n          });\n\n          this._setFocusable(selected || 0);\n\n          const itemToSelect = items[selected];\n          items.forEach((item) => {\n            item.selected = item === itemToSelect;\n          });\n          if (itemToSelect && !itemToSelect.disabled) {\n            this._scrollToItem(selected);\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {!Array<!Element>} array\n     * @return {!Array<!Element>}\n     * @protected\n     */\n    _filterItems(array) {\n      return array.filter((e) => e._hasVaadinItemMixin);\n    }\n\n    /**\n     * @param {!MouseEvent} event\n     * @protected\n     */\n    _onClick(event) {\n      if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\n        return;\n      }\n\n      const item = this._filterItems(event.composedPath())[0];\n      let idx;\n      if (item && !item.disabled && (idx = this.items.indexOf(item)) >= 0) {\n        this.selected = idx;\n      }\n    }\n\n    /**\n     * @param {number} currentIdx\n     * @param {string} key\n     * @return {number}\n     * @protected\n     */\n    _searchKey(currentIdx, key) {\n      this._searchReset = Debouncer.debounce(this._searchReset, timeOut.after(500), () => {\n        this._searchBuf = '';\n      });\n      this._searchBuf += key.toLowerCase();\n\n      if (!this.items.some((item) => this.__isMatchingKey(item))) {\n        this._searchBuf = key.toLowerCase();\n      }\n\n      const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\n      return this._getAvailableIndex(\n        this.items,\n        idx,\n        1,\n        (item) => this.__isMatchingKey(item) && getComputedStyle(item).display !== 'none',\n      );\n    }\n\n    /** @private */\n    __isMatchingKey(item) {\n      return item.textContent\n        .replace(/[^\\p{L}\\p{Nd}]/gu, '')\n        .toLowerCase()\n        .startsWith(this._searchBuf);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`\n     * to search items by key.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      if (event.metaKey || event.ctrlKey) {\n        return;\n      }\n\n      const key = event.key;\n\n      const currentIdx = this.items.indexOf(this.focused);\n      if (/[a-zA-Z0-9]/u.test(key) && key.length === 1) {\n        const idx = this._searchKey(currentIdx, key);\n        if (idx >= 0) {\n          this._focus(idx);\n        }\n        return;\n      }\n\n      super._onKeyDown(event);\n    }\n\n    /**\n     * @param {!Element} item\n     * @return {boolean}\n     * @protected\n     */\n    _isItemHidden(item) {\n      return getComputedStyle(item).display === 'none';\n    }\n\n    /**\n     * @param {number} idx\n     * @protected\n     */\n    _setFocusable(idx) {\n      idx = this._getAvailableIndex(this.items, idx, 1);\n      const item = this.items[idx];\n      this.items.forEach((e) => {\n        e.tabIndex = e === item ? 0 : -1;\n      });\n    }\n\n    /**\n     * @param {number} idx\n     * @protected\n     */\n    _focus(idx) {\n      this.items.forEach((e, index) => {\n        e.focused = index === idx;\n      });\n      this._setFocusable(idx);\n      this._scrollToItem(idx);\n      super._focus(idx);\n    }\n\n    /**\n     * Scroll the container to have the next item by the edge of the viewport.\n     * @param {number} idx\n     * @protected\n     */\n    _scrollToItem(idx) {\n      const item = this.items[idx];\n      if (!item) {\n        return;\n      }\n\n      const props = this._vertical ? ['top', 'bottom'] : this._isRTL ? ['right', 'left'] : ['left', 'right'];\n\n      const scrollerRect = this._scrollerElement.getBoundingClientRect();\n      const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\n      const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\n\n      let scrollDistance = 0;\n      if (\n        (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]]) ||\n        (this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]])\n      ) {\n        scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\n      } else if (\n        (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]]) ||\n        (this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]])\n      ) {\n        scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\n      }\n\n      this._scroll(scrollDistance);\n    }\n\n    /**\n     * @param {number} pixels\n     * @protected\n     */\n    _scroll(pixels) {\n      if (this._vertical) {\n        this._scrollerElement.scrollTop += pixels;\n      } else {\n        const dir = this.getAttribute('dir') || 'ltr';\n        const scrollLeft = getNormalizedScrollLeft(this._scrollerElement, dir) + pixels;\n        setNormalizedScrollLeft(this._scrollerElement, dir, scrollLeft);\n      }\n    }\n\n    /**\n     * Fired when the selection is changed.\n     * Not fired when used in `multiple` selection mode.\n     *\n     * @event selected-changed\n     * @param {Object} detail\n     * @param {Object} detail.value the index of the item selected in the items array.\n     */\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}