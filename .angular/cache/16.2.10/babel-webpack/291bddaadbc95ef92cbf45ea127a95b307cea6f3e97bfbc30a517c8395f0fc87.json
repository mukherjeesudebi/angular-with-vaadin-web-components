{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { isKeyboardActive } from './focus-utils.js';\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport const FocusMixin = dedupingMixin(superclass => class FocusMixinClass extends superclass {\n  /**\n   * @protected\n   * @return {boolean}\n   */\n  get _keyboardActive() {\n    return isKeyboardActive();\n  }\n\n  /** @protected */\n  ready() {\n    this.addEventListener('focusin', e => {\n      if (this._shouldSetFocus(e)) {\n        this._setFocused(true);\n      }\n    });\n    this.addEventListener('focusout', e => {\n      if (this._shouldRemoveFocus(e)) {\n        this._setFocused(false);\n      }\n    });\n\n    // In super.ready() other 'focusin' and 'focusout' listeners might be\n    // added, so we call it after our own ones to ensure they execute first.\n    // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n    // input field on iOS after \"Done\" is pressed.\n    super.ready();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('focused')) {\n      this._setFocused(false);\n    }\n  }\n\n  /**\n   * Override to change how focused and focus-ring attributes are set.\n   *\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    this.toggleAttribute('focused', focused);\n\n    // Focus-ring is true when the element was focused from the keyboard.\n    // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n    this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n  }\n\n  /**\n   * Override to define if the field receives focus based on the event.\n   *\n   * @param {FocusEvent} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetFocus(_event) {\n    return true;\n  }\n\n  /**\n   * Override to define if the field loses focus based on the event.\n   *\n   * @param {FocusEvent} _event\n   * @return {boolean}\n   * @protected\n   */\n  _shouldRemoveFocus(_event) {\n    return true;\n  }\n});","map":{"version":3,"names":["dedupingMixin","isKeyboardActive","FocusMixin","superclass","FocusMixinClass","_keyboardActive","ready","addEventListener","e","_shouldSetFocus","_setFocused","_shouldRemoveFocus","disconnectedCallback","hasAttribute","focused","toggleAttribute","_event"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/a11y-base/src/focus-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { isKeyboardActive } from './focus-utils.js';\n\n/**\n * A mixin to handle `focused` and `focus-ring` attributes based on focus.\n *\n * @polymerMixin\n */\nexport const FocusMixin = dedupingMixin(\n  (superclass) =>\n    class FocusMixinClass extends superclass {\n      /**\n       * @protected\n       * @return {boolean}\n       */\n      get _keyboardActive() {\n        return isKeyboardActive();\n      }\n\n      /** @protected */\n      ready() {\n        this.addEventListener('focusin', (e) => {\n          if (this._shouldSetFocus(e)) {\n            this._setFocused(true);\n          }\n        });\n\n        this.addEventListener('focusout', (e) => {\n          if (this._shouldRemoveFocus(e)) {\n            this._setFocused(false);\n          }\n        });\n\n        // In super.ready() other 'focusin' and 'focusout' listeners might be\n        // added, so we call it after our own ones to ensure they execute first.\n        // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n        // input field on iOS after \"Done\" is pressed.\n        super.ready();\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n\n        // In non-Chrome browsers, blur does not fire on the element when it is disconnected.\n        // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n        if (this.hasAttribute('focused')) {\n          this._setFocused(false);\n        }\n      }\n\n      /**\n       * Override to change how focused and focus-ring attributes are set.\n       *\n       * @param {boolean} focused\n       * @protected\n       */\n      _setFocused(focused) {\n        this.toggleAttribute('focused', focused);\n\n        // Focus-ring is true when the element was focused from the keyboard.\n        // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n        this.toggleAttribute('focus-ring', focused && this._keyboardActive);\n      }\n\n      /**\n       * Override to define if the field receives focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetFocus(_event) {\n        return true;\n      }\n\n      /**\n       * Override to define if the field loses focus based on the event.\n       *\n       * @param {FocusEvent} _event\n       * @return {boolean}\n       * @protected\n       */\n      _shouldRemoveFocus(_event) {\n        return true;\n      }\n    },\n);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;AACnE,SAASC,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGF,aAAa,CACpCG,UAAU,IACT,MAAMC,eAAe,SAASD,UAAU,CAAC;EACvC;AACN;AACA;AACA;EACM,IAAIE,eAAeA,CAAA,EAAG;IACpB,OAAOJ,gBAAgB,CAAC,CAAC;EAC3B;;EAEA;EACAK,KAAKA,CAAA,EAAG;IACN,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MACtC,IAAI,IAAI,CAACC,eAAe,CAACD,CAAC,CAAC,EAAE;QAC3B,IAAI,CAACE,WAAW,CAAC,IAAI,CAAC;MACxB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,gBAAgB,CAAC,UAAU,EAAGC,CAAC,IAAK;MACvC,IAAI,IAAI,CAACG,kBAAkB,CAACH,CAAC,CAAC,EAAE;QAC9B,IAAI,CAACE,WAAW,CAAC,KAAK,CAAC;MACzB;IACF,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA,KAAK,CAACJ,KAAK,CAAC,CAAC;EACf;;EAEA;EACAM,oBAAoBA,CAAA,EAAG;IACrB,KAAK,CAACA,oBAAoB,CAAC,CAAC;;IAE5B;IACA;IACA,IAAI,IAAI,CAACC,YAAY,CAAC,SAAS,CAAC,EAAE;MAChC,IAAI,CAACH,WAAW,CAAC,KAAK,CAAC;IACzB;EACF;;EAEA;AACN;AACA;AACA;AACA;AACA;EACMA,WAAWA,CAACI,OAAO,EAAE;IACnB,IAAI,CAACC,eAAe,CAAC,SAAS,EAAED,OAAO,CAAC;;IAExC;IACA;IACA,IAAI,CAACC,eAAe,CAAC,YAAY,EAAED,OAAO,IAAI,IAAI,CAACT,eAAe,CAAC;EACrE;;EAEA;AACN;AACA;AACA;AACA;AACA;AACA;EACMI,eAAeA,CAACO,MAAM,EAAE;IACtB,OAAO,IAAI;EACb;;EAEA;AACN;AACA;AACA;AACA;AACA;AACA;EACML,kBAAkBA,CAACK,MAAM,EAAE;IACzB,OAAO,IAAI;EACb;AACF,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}