{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(superclass => class ValidateMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * Set to true when the field is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Validates the field and sets the `invalid` property based on the result.\n   *\n   * The method fires a `validated` event with the result of the validation.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    const isValid = this.checkValidity();\n    this._setInvalid(!isValid);\n    this.dispatchEvent(new CustomEvent('validated', {\n      detail: {\n        valid: isValid\n      }\n    }));\n    return isValid;\n  }\n\n  /**\n   * Returns true if the field value satisfies all constraints (if any).\n   *\n   * @return {boolean}\n   */\n  checkValidity() {\n    return !this.required || !!this.value;\n  }\n\n  /**\n   * @param {boolean} invalid\n   * @protected\n   */\n  _setInvalid(invalid) {\n    if (this._shouldSetInvalid(invalid)) {\n      this.invalid = invalid;\n    }\n  }\n\n  /**\n   * Override this method to define whether the given `invalid` state should be set.\n   *\n   * @param {boolean} _invalid\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetInvalid(_invalid) {\n    return true;\n  }\n\n  /**\n   * Fired whenever the field is validated.\n   *\n   * @event validated\n   * @param {Object} detail\n   * @param {boolean} detail.valid the result of the validation.\n   */\n});","map":{"version":3,"names":["dedupingMixin","ValidateMixin","superclass","ValidateMixinClass","properties","invalid","type","Boolean","reflectToAttribute","notify","value","required","validate","isValid","checkValidity","_setInvalid","dispatchEvent","CustomEvent","detail","valid","_shouldSetInvalid","_invalid"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/field-base/src/validate-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        const isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', { detail: { valid: isValid } }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n      _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    },\n);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;;AAEnE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGD,aAAa,CACvCE,UAAU,IACT,MAAMC,kBAAkB,SAASD,UAAU,CAAC;EAC1C,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACV;AACA;MACUC,OAAO,EAAE;QACPC,IAAI,EAAEC,OAAO;QACbC,kBAAkB,EAAE,IAAI;QACxBC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE;MACT,CAAC;MAED;AACV;AACA;MACUC,QAAQ,EAAE;QACRL,IAAI,EAAEC,OAAO;QACbC,kBAAkB,EAAE;MACtB;IACF,CAAC;EACH;;EAEA;AACN;AACA;AACA;AACA;AACA;AACA;EACMI,QAAQA,CAAA,EAAG;IACT,MAAMC,OAAO,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IACpC,IAAI,CAACC,WAAW,CAAC,CAACF,OAAO,CAAC;IAC1B,IAAI,CAACG,aAAa,CAAC,IAAIC,WAAW,CAAC,WAAW,EAAE;MAAEC,MAAM,EAAE;QAAEC,KAAK,EAAEN;MAAQ;IAAE,CAAC,CAAC,CAAC;IAChF,OAAOA,OAAO;EAChB;;EAEA;AACN;AACA;AACA;AACA;EACMC,aAAaA,CAAA,EAAG;IACd,OAAO,CAAC,IAAI,CAACH,QAAQ,IAAI,CAAC,CAAC,IAAI,CAACD,KAAK;EACvC;;EAEA;AACN;AACA;AACA;EACMK,WAAWA,CAACV,OAAO,EAAE;IACnB,IAAI,IAAI,CAACe,iBAAiB,CAACf,OAAO,CAAC,EAAE;MACnC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB;EACF;;EAEA;AACN;AACA;AACA;AACA;AACA;AACA;EACMe,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,OAAO,IAAI;EACb;;EAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACI,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}