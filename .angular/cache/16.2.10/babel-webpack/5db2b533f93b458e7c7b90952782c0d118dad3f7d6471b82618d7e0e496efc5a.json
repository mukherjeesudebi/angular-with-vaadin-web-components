{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = superClass => class ActiveItemMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The item user has last interacted with. Turns to `null` after user deactivates\n       * the item by re-interacting with the currently active item.\n       */\n      activeItem: {\n        type: Object,\n        notify: true,\n        value: null\n      }\n    };\n  }\n  ready() {\n    super.ready();\n    this.$.scroller.addEventListener('click', this._onClick.bind(this));\n    this.addEventListener('cell-activate', this._activateItem.bind(this));\n  }\n  _activateItem(e) {\n    const model = e.detail.model;\n    const clickedItem = model ? model.item : null;\n    if (clickedItem) {\n      this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n    }\n  }\n\n  // we need to listen to click instead of tap because on mobile safari, the\n  // document.activeElement has not been updated (focus has not been shifted)\n  // yet at the point when tap event is being executed.\n  _onClick(e) {\n    if (e.defaultPrevented) {\n      // Something has handled this click already, e. g., <vaadin-grid-sorter>\n      return;\n    }\n    const path = e.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n    if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n      return;\n    }\n    const cellContent = cell._content;\n    const activeElement = this.getRootNode().activeElement;\n    const cellContentHasFocus = cellContent.contains(activeElement) && (\n    // MSIE bug: flex children receive focus. Make type & attributes check.\n    !this._ie || this._isFocusable(activeElement));\n    if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {\n        detail: {\n          model: this.__getRowModel(cell.parentElement)\n        }\n      }));\n    }\n  }\n  _isFocusable(target) {\n    if (!target.parentNode) {\n      return false;\n    }\n    const focusables = Array.from(target.parentNode.querySelectorAll('[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]')).filter(element => element.getAttribute('part') !== 'cell body-cell');\n    const isFocusableElement = focusables.indexOf(target) !== -1;\n    return !target.disabled && isFocusableElement;\n  }\n};","map":{"version":3,"names":["ActiveItemMixin","superClass","properties","activeItem","type","Object","notify","value","ready","$","scroller","addEventListener","_onClick","bind","_activateItem","e","model","detail","clickedItem","item","_itemsEqual","defaultPrevented","path","composedPath","cell","indexOf","table","getAttribute","cellContent","_content","activeElement","getRootNode","cellContentHasFocus","contains","_ie","_isFocusable","target","dispatchEvent","CustomEvent","__getRowModel","parentElement","parentNode","focusables","Array","from","querySelectorAll","filter","element","isFocusableElement","disabled"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-active-item-mixin.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = superClass => class ActiveItemMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * The item user has last interacted with. Turns to `null` after user deactivates\n       * the item by re-interacting with the currently active item.\n       */\n      activeItem: {\n        type: Object,\n        notify: true,\n        value: null\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this.$.scroller.addEventListener('click', this._onClick.bind(this));\n    this.addEventListener('cell-activate', this._activateItem.bind(this));\n  }\n\n  _activateItem(e) {\n    const model = e.detail.model;\n    const clickedItem = model ? model.item : null;\n\n    if (clickedItem) {\n      this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n    }\n  }\n\n  // we need to listen to click instead of tap because on mobile safari, the\n  // document.activeElement has not been updated (focus has not been shifted)\n  // yet at the point when tap event is being executed.\n  _onClick(e) {\n    if (e.defaultPrevented) {\n      // Something has handled this click already, e. g., <vaadin-grid-sorter>\n      return;\n    }\n\n    const path = e.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n    if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n      return;\n    }\n    const cellContent = cell._content;\n\n    const activeElement = this.getRootNode().activeElement;\n    const cellContentHasFocus = cellContent.contains(activeElement) &&\n      // MSIE bug: flex children receive focus. Make type & attributes check.\n      (!this._ie || this._isFocusable(activeElement));\n    if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {detail: {\n        model: this.__getRowModel(cell.parentElement)\n      }}));\n    }\n  }\n\n  _isFocusable(target) {\n    if (!target.parentNode) {\n      return false;\n    }\n    const focusables = Array.from(target.parentNode\n      .querySelectorAll('[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]'))\n      .filter(element => element.getAttribute('part') !== 'cell body-cell');\n\n    const isFocusableElement = focusables.indexOf(target) !== -1;\n    return !target.disabled && isFocusableElement;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}