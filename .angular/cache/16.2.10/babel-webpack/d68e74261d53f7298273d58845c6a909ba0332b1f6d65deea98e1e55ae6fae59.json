{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isElementHidden } from '@vaadin/a11y-base/src/focus-utils.js';\nimport { TabindexMixin } from '@vaadin/a11y-base/src/tabindex-mixin.js';\nimport { animationFrame, microTask } from '@vaadin/component-base/src/async.js';\nimport { isAndroid, isChrome, isFirefox, isIOS, isSafari, isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { getClosestElement } from '@vaadin/component-base/src/dom-utils.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport { getBodyRowCells, iterateChildren, iterateRowCells, updateBooleanRowStates, updateCellsPart } from './vaadin-grid-helpers.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\n\n/**\n * A mixin providing common grid functionality.\n *\n * @polymerMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n */\nexport const GridMixin = superClass => class extends DataProviderMixin(ArrayDataProviderMixin(DynamicColumnsMixin(ActiveItemMixin(ScrollMixin(SelectionMixin(SortMixin(RowDetailsMixin(KeyboardNavigationMixin(A11yMixin(FilterMixin(ColumnReorderingMixin(ColumnResizingMixin(EventContextMixin(DragAndDropMixin(StylingMixin(TabindexMixin(superClass))))))))))))))))) {\n  static get observers() {\n    return ['_columnTreeChanged(_columnTree, _columnTree.*)', '_effectiveSizeChanged(_effectiveSize, __virtualizer, _hasData, _columnTree)'];\n  }\n  static get properties() {\n    return {\n      /** @private */\n      _safari: {\n        type: Boolean,\n        value: isSafari\n      },\n      /** @private */\n      _ios: {\n        type: Boolean,\n        value: isIOS\n      },\n      /** @private */\n      _firefox: {\n        type: Boolean,\n        value: isFirefox\n      },\n      /** @private */\n      _android: {\n        type: Boolean,\n        value: isAndroid\n      },\n      /** @private */\n      _touchDevice: {\n        type: Boolean,\n        value: isTouch\n      },\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       * @attr {boolean} all-rows-visible\n       * @type {boolean}\n       */\n      allRowsVisible: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /** @private */\n      __pendingRecalculateColumnWidths: {\n        type: Boolean,\n        value: true\n      },\n      /** @private */\n      isAttached: {\n        value: false\n      },\n      /**\n       * An internal property that is mainly used by `vaadin-template-renderer`\n       * to identify grid elements.\n       *\n       * @private\n       */\n      __gridElement: {\n        type: Boolean,\n        value: true\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  /** @private */\n  get _firstVisibleIndex() {\n    const firstVisibleItem = this.__getFirstVisibleItem();\n    return firstVisibleItem ? firstVisibleItem.index : undefined;\n  }\n\n  /** @private */\n  get _lastVisibleIndex() {\n    const lastVisibleItem = this.__getLastVisibleItem();\n    return lastVisibleItem ? lastVisibleItem.index : undefined;\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.isAttached = true;\n    this.recalculateColumnWidths();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.isAttached = false;\n    this._hideTooltip(true);\n  }\n\n  /** @private */\n  __getFirstVisibleItem() {\n    return this._getRenderedRows().find(row => this._isInViewport(row));\n  }\n\n  /** @private */\n  __getLastVisibleItem() {\n    return this._getRenderedRows().reverse().find(row => this._isInViewport(row));\n  }\n\n  /** @private */\n  _isInViewport(item) {\n    const scrollTargetRect = this.$.table.getBoundingClientRect();\n    const itemRect = item.getBoundingClientRect();\n    const headerHeight = this.$.header.getBoundingClientRect().height;\n    const footerHeight = this.$.footer.getBoundingClientRect().height;\n    return itemRect.bottom > scrollTargetRect.top + headerHeight && itemRect.top < scrollTargetRect.bottom - footerHeight;\n  }\n\n  /** @private */\n  _getRenderedRows() {\n    return Array.from(this.$.items.children).filter(item => !item.hidden).sort((a, b) => a.index - b.index);\n  }\n\n  /** @protected */\n  _getRowContainingNode(node) {\n    const content = getClosestElement('vaadin-grid-cell-content', node);\n    if (!content) {\n      return;\n    }\n    const cell = content.assignedSlot.parentElement;\n    return cell.parentElement;\n  }\n\n  /** @protected */\n  _isItemAssignedToRow(item, row) {\n    const model = this.__getRowModel(row);\n    return this.getItemId(item) === this.getItemId(model.item);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.__virtualizer = new Virtualizer({\n      createElements: this._createScrollerRows.bind(this),\n      updateElement: this._updateScrollerItem.bind(this),\n      scrollContainer: this.$.items,\n      scrollTarget: this.$.table,\n      reorderElements: true\n    });\n    new ResizeObserver(() => setTimeout(() => {\n      this.__updateFooterPositioning();\n      this.__updateColumnsBodyContentHidden();\n      this.__tryToRecalculateColumnWidthsIfPending();\n    })).observe(this.$.table);\n    processTemplates(this);\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n    this._tooltipController.setManual(true);\n  }\n\n  /** @private */\n  __getBodyCellCoordinates(cell) {\n    if (this.$.items.contains(cell) && cell.localName === 'td') {\n      return {\n        item: cell.parentElement._item,\n        column: cell._column\n      };\n    }\n  }\n\n  /** @private */\n  __focusBodyCell({\n    item,\n    column\n  }) {\n    const row = this._getRenderedRows().find(row => row._item === item);\n    const cell = row && [...row.children].find(cell => cell._column === column);\n    if (cell) {\n      cell.focus();\n    }\n  }\n\n  /** @protected */\n  _focusFirstVisibleRow() {\n    const row = this.__getFirstVisibleItem();\n    this.__rowFocusMode = true;\n    row.focus();\n  }\n\n  /** @private */\n  _effectiveSizeChanged(effectiveSize, virtualizer, hasData, columnTree) {\n    if (virtualizer && hasData && columnTree) {\n      // Changing the virtualizer size may result in the row with focus getting hidden\n      const cell = this.shadowRoot.activeElement;\n      const cellCoordinates = this.__getBodyCellCoordinates(cell);\n      const previousSize = virtualizer.size || 0;\n      virtualizer.size = effectiveSize;\n\n      // Request an update for the previous last row to have the \"last\" state removed\n      virtualizer.update(previousSize - 1, previousSize - 1);\n      if (effectiveSize < previousSize) {\n        // Size was decreased, so the new last row requires an explicit update\n        virtualizer.update(effectiveSize - 1, effectiveSize - 1);\n      }\n\n      // If the focused cell's parent row got hidden by the size change, focus the corresponding new cell\n      if (cellCoordinates && cell.parentElement.hidden) {\n        this.__focusBodyCell(cellCoordinates);\n      }\n\n      // Make sure the body has a tabbable element\n      this._resetKeyboardNavigation();\n    }\n  }\n\n  /** @private */\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter(row => row.clientHeight).length;\n  }\n\n  /** @private */\n  __getIntrinsicWidth(col) {\n    if (!this.__intrinsicWidthCache.has(col)) {\n      this.__calculateAndCacheIntrinsicWidths([col]);\n    }\n    return this.__intrinsicWidthCache.get(col);\n  }\n\n  /** @private */\n  __getDistributedWidth(col, innerColumn) {\n    if (col == null || col === this) {\n      return 0;\n    }\n    const columnWidth = Math.max(this.__getIntrinsicWidth(col), this.__getDistributedWidth((col.assignedSlot || col).parentElement, col));\n\n    // We're processing a regular grid-column and not a grid-column-group\n    if (!innerColumn) {\n      return columnWidth;\n    }\n\n    // At the end, the width of each vaadin-grid-column-group is determined by the sum of the width of its children.\n    // Here we determine how much space the vaadin-grid-column-group actually needs to render properly and then we distribute that space\n    // to its children, so when we actually do the summation it will be rendered properly.\n    // Check out vaadin-grid-column-group:_updateFlexAndWidth\n    const columnGroup = col;\n    const columnGroupWidth = columnWidth;\n    const sumOfWidthOfAllChildColumns = columnGroup._visibleChildColumns.map(col => this.__getIntrinsicWidth(col)).reduce((sum, curr) => sum + curr, 0);\n    const extraNecessarySpaceForGridColumnGroup = Math.max(0, columnGroupWidth - sumOfWidthOfAllChildColumns);\n\n    // The distribution of the extra necessary space is done according to the intrinsic width of each child column.\n    // Lets say we need 100 pixels of extra space for the grid-column-group to render properly\n    // it has two grid-column children, |100px|300px| in total 400px\n    // the first column gets 25px of the additional space (100/400)*100 = 25\n    // the second column gets the 75px of the additional space (300/400)*100 = 75\n    const proportionOfExtraSpace = this.__getIntrinsicWidth(innerColumn) / sumOfWidthOfAllChildColumns;\n    const shareOfInnerColumnFromNecessaryExtraSpace = proportionOfExtraSpace * extraNecessarySpaceForGridColumnGroup;\n    return this.__getIntrinsicWidth(innerColumn) + shareOfInnerColumnFromNecessaryExtraSpace;\n  }\n\n  /**\n   * @param {!Array<!GridColumn>} cols the columns to auto size based on their content width\n   * @private\n   */\n  _recalculateColumnWidths(cols) {\n    // Flush to make sure DOM is up-to-date when measuring the column widths\n    this.__virtualizer.flush();\n    [...this.$.header.children, ...this.$.footer.children].forEach(row => {\n      if (row.__debounceUpdateHeaderFooterRowVisibility) {\n        row.__debounceUpdateHeaderFooterRowVisibility.flush();\n      }\n    });\n\n    // Flush to account for any changes to the visibility of the columns\n    if (this._debouncerHiddenChanged) {\n      this._debouncerHiddenChanged.flush();\n    }\n    this.__intrinsicWidthCache = new Map();\n    // Cache the viewport rows to avoid unnecessary reflows while measuring the column widths\n    const fvi = this._firstVisibleIndex;\n    const lvi = this._lastVisibleIndex;\n    this.__viewportRowsCache = this._getRenderedRows().filter(row => row.index >= fvi && row.index <= lvi);\n\n    // Pre-cache the intrinsic width of each column\n    this.__calculateAndCacheIntrinsicWidths(cols);\n    cols.forEach(col => {\n      col.width = `${this.__getDistributedWidth(col)}px`;\n    });\n  }\n\n  /**\n   * Toggles the cell content for the given column to use or not use auto width.\n   *\n   * While content for all the column cells uses auto width (instead of the default 100%),\n   * their offsetWidth can be used to calculate the collective intrinsic width of the column.\n   *\n   * @private\n   */\n  __setVisibleCellContentAutoWidth(col, autoWidth) {\n    col._allCells.filter(cell => {\n      if (this.$.items.contains(cell)) {\n        return this.__viewportRowsCache.includes(cell.parentElement);\n      }\n      return true;\n    }).forEach(cell => {\n      cell.__measuringAutoWidth = autoWidth;\n      cell._content.style.width = autoWidth ? 'auto' : '';\n      cell._content.style.position = autoWidth ? 'absolute' : '';\n    });\n  }\n\n  /**\n   * Returns the maximum intrinsic width of the cell content in the given column.\n   * Only cells which are marked for measuring auto width are considered.\n   *\n   * @private\n   */\n  __getAutoWidthCellsMaxWidth(col) {\n    // Note: _allCells only contains cells which are currently rendered in DOM\n    return col._allCells.reduce((width, cell) => {\n      // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n      return cell.__measuringAutoWidth ? Math.max(width, cell._content.offsetWidth + 1) : width;\n    }, 0);\n  }\n\n  /**\n   * Calculates and caches the intrinsic width of each given column.\n   *\n   * @private\n   */\n  __calculateAndCacheIntrinsicWidths(cols) {\n    // Make all the columns use auto width at once before measuring to\n    // avoid reflows in between the measurements\n    cols.forEach(col => this.__setVisibleCellContentAutoWidth(col, true));\n    // Measure and cache\n    cols.forEach(col => {\n      const width = this.__getAutoWidthCellsMaxWidth(col);\n      this.__intrinsicWidthCache.set(col, width);\n    });\n    // Reset the columns to use 100% width\n    cols.forEach(col => this.__setVisibleCellContentAutoWidth(col, false));\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n\n    if (isElementHidden(this) || this._cache.isLoading()) {\n      this.__pendingRecalculateColumnWidths = true;\n      return;\n    }\n    const cols = this._getColumns().filter(col => !col.hidden && col.autoWidth);\n    this._recalculateColumnWidths(cols);\n  }\n\n  /** @private */\n  __tryToRecalculateColumnWidthsIfPending() {\n    if (this.__pendingRecalculateColumnWidths && !isElementHidden(this) && !this._cache.isLoading() && this.__hasRowsWithClientHeight()) {\n      this.__pendingRecalculateColumnWidths = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _onDataProviderPageLoaded() {\n    super._onDataProviderPageLoaded();\n    this.__tryToRecalculateColumnWidthsIfPending();\n  }\n\n  /** @private */\n  _createScrollerRows(count) {\n    const rows = [];\n    for (let i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      row.setAttribute('tabindex', '-1');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach(c => c.isConnected && c.notifyPath && c.notifyPath('_cells.*', c._cells));\n    }\n    this.__afterCreateScrollerRowsDebouncer = Debouncer.debounce(this.__afterCreateScrollerRowsDebouncer, animationFrame, () => {\n      this._afterScroll();\n      this.__tryToRecalculateColumnWidthsIfPending();\n    });\n    return rows;\n  }\n\n  /** @private */\n  _createCell(tagName, column) {\n    const contentId = this._contentIndex = this._contentIndex + 1 || 0;\n    const slotName = `vaadin-grid-cell-content-${contentId}`;\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    // For now we only support tooltip on desktop\n    if (!isAndroid && !isIOS) {\n      cell.addEventListener('mouseenter', event => {\n        if (!this.$.scroller.hasAttribute('scrolling')) {\n          this._showTooltip(event);\n        }\n      });\n      cell.addEventListener('mouseleave', () => {\n        this._hideTooltip();\n      });\n      cell.addEventListener('mousedown', () => {\n        this._hideTooltip(true);\n      });\n    }\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    if (column && column._focusButtonMode) {\n      const div = document.createElement('div');\n      div.setAttribute('role', 'button');\n      div.setAttribute('tabindex', '-1');\n      cell.appendChild(div);\n\n      // Patch `focus()` to use the button\n      cell._focusButton = div;\n      cell.focus = function () {\n        cell._focusButton.focus();\n      };\n      div.appendChild(slot);\n    } else {\n      cell.setAttribute('tabindex', '-1');\n      cell.appendChild(slot);\n    }\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (isChrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = event => {\n          // If focus is on element within the cell content - respect it, do not change\n          const contentContainsFocusedElement = cellContent.contains(this.getRootNode().activeElement);\n          // Only focus if mouse is released on cell content itself\n          const mouseUpWithinCell = event.composedPath().includes(cellContent);\n          if (!contentContainsFocusedElement && mouseUpWithinCell) {\n            cell.focus();\n          }\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n    return cell;\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {!Array<!GridColumn>} columns\n   * @param {?string} section\n   * @param {boolean} isColumnRow\n   * @param {boolean} noNotify\n   * @protected\n   */\n  _updateRow(row, columns, section = 'body', isColumnRow = false, noNotify = false) {\n    const contentsFragment = document.createDocumentFragment();\n    iterateRowCells(row, cell => {\n      cell._vacant = true;\n    });\n    row.innerHTML = '';\n    if (section === 'body') {\n      // Clear the cached cell references\n      row.__cells = [];\n      row.__detailsCell = null;\n    }\n    columns.filter(column => !column.hidden).forEach((column, index, cols) => {\n      let cell;\n      if (section === 'body') {\n        // Body\n        if (!column._cells) {\n          column._cells = [];\n        }\n        cell = column._cells.find(cell => cell._vacant);\n        if (!cell) {\n          cell = this._createCell('td', column);\n          column._cells.push(cell);\n        }\n        cell.setAttribute('part', 'cell body-cell');\n        cell.__parentRow = row;\n        // Cache the cell reference\n        row.__cells.push(cell);\n        if (!column._bodyContentHidden) {\n          row.appendChild(cell);\n        }\n        if (row === this.$.sizer) {\n          column._sizerCell = cell;\n        }\n        if (index === cols.length - 1 && this.rowDetailsRenderer) {\n          // Add details cell as last cell to body rows\n          if (!this._detailsCells) {\n            this._detailsCells = [];\n          }\n          const detailsCell = this._detailsCells.find(cell => cell._vacant) || this._createCell('td');\n          if (this._detailsCells.indexOf(detailsCell) === -1) {\n            this._detailsCells.push(detailsCell);\n          }\n          if (!detailsCell._content.parentElement) {\n            contentsFragment.appendChild(detailsCell._content);\n          }\n          this._configureDetailsCell(detailsCell);\n          row.appendChild(detailsCell);\n          // Cache the details cell reference\n          row.__detailsCell = detailsCell;\n          this._a11ySetRowDetailsCell(row, detailsCell);\n          detailsCell._vacant = false;\n        }\n        if (column.notifyPath && !noNotify) {\n          column.notifyPath('_cells.*', column._cells);\n        }\n      } else {\n        // Header & footer\n        const tagName = section === 'header' ? 'th' : 'td';\n        if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n          cell = column[`_${section}Cell`] || this._createCell(tagName);\n          cell._column = column;\n          row.appendChild(cell);\n          column[`_${section}Cell`] = cell;\n        } else {\n          if (!column._emptyCells) {\n            column._emptyCells = [];\n          }\n          cell = column._emptyCells.find(cell => cell._vacant) || this._createCell(tagName);\n          cell._column = column;\n          row.appendChild(cell);\n          if (column._emptyCells.indexOf(cell) === -1) {\n            column._emptyCells.push(cell);\n          }\n        }\n        cell.setAttribute('part', `cell ${section}-cell`);\n      }\n      if (!cell._content.parentElement) {\n        contentsFragment.appendChild(cell._content);\n      }\n      cell._vacant = false;\n      cell._column = column;\n    });\n    if (section !== 'body') {\n      this.__debounceUpdateHeaderFooterRowVisibility(row);\n    }\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __debounceUpdateHeaderFooterRowVisibility(row) {\n    row.__debounceUpdateHeaderFooterRowVisibility = Debouncer.debounce(row.__debounceUpdateHeaderFooterRowVisibility, microTask, () => this.__updateHeaderFooterRowVisibility(row));\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n    const visibleRowCells = Array.from(row.children).filter(cell => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer) {\n          // The cell is the header cell of a column that has a header renderer\n          // -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else if (column.footerRenderer) {\n        // The cell is the footer cell of a column that has a footer renderer\n        // -> row should be visible\n        return true;\n      }\n      return false;\n    });\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n    }\n\n    // Make sure the section has a tabbable element\n    this._resetKeyboardNavigation();\n  }\n\n  /** @private */\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n    if (!this._columnTree) {\n      return;\n    }\n    this._updateRowOrderParts(row, index);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  /** @private */\n  _columnTreeChanged(columnTree) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n    this.__updateColumnsBodyContentHidden();\n  }\n\n  /** @private */\n  _updateRowOrderParts(row, index = row.index) {\n    updateBooleanRowStates(row, {\n      first: index === 0,\n      last: index === this._effectiveSize - 1,\n      odd: index % 2 !== 0,\n      even: index % 2 === 0\n    });\n  }\n\n  /** @private */\n  _updateRowStateParts(row, {\n    expanded,\n    selected,\n    detailsOpened\n  }) {\n    updateBooleanRowStates(row, {\n      expanded,\n      selected,\n      'details-opened': detailsOpened\n    });\n  }\n\n  /**\n   * @param {!Array<!GridColumn>} columnTree\n   * @protected\n   */\n  _renderColumnTree(columnTree) {\n    iterateChildren(this.$.items, row => {\n      this._updateRow(row, columnTree[columnTree.length - 1], 'body', false, true);\n      const model = this.__getRowModel(row);\n      this._updateRowOrderParts(row);\n      this._updateRowStateParts(row, model);\n      this._filterDragAndDrop(row, model);\n    });\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      headerRow.setAttribute('tabindex', '-1');\n      this.$.header.appendChild(headerRow);\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      footerRow.setAttribute('tabindex', '-1');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n    iterateChildren(this.$.header, (headerRow, index, rows) => {\n      this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1);\n      const cells = getBodyRowCells(headerRow);\n      updateCellsPart(cells, 'first-header-row-cell', index === 0);\n      updateCellsPart(cells, 'last-header-row-cell', index === rows.length - 1);\n    });\n    iterateChildren(this.$.footer, (footerRow, index, rows) => {\n      this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0);\n      const cells = getBodyRowCells(footerRow);\n      updateCellsPart(cells, 'first-footer-row-cell', index === 0);\n      updateCellsPart(cells, 'last-footer-row-cell', index === rows.length - 1);\n    });\n\n    // Sizer rows\n    this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n    this.__updateFooterPositioning();\n    this.generateCellClassNames();\n    this.generateCellPartNames();\n    this.__updateHeaderAndFooter();\n  }\n\n  /** @private */\n  __updateFooterPositioning() {\n    // TODO: fixed in Firefox 99, remove when we can drop Firefox ESR 91 support\n    if (this._firefox && parseFloat(navigator.userAgent.match(/Firefox\\/(\\d{2,3}.\\d)/u)[1]) < 99) {\n      // Sticky (or translated) footer in a flexbox host doesn't get included in\n      // the scroll height calculation on FF. This is a workaround for the issue.\n      this.$.items.style.paddingBottom = 0;\n      if (!this.allRowsVisible) {\n        this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {GridItem} item\n   * @protected\n   */\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n    this._toggleDetailsCell(row, model.detailsOpened);\n    this._a11yUpdateRowLevel(row, model.level);\n    this._a11yUpdateRowSelected(row, model.selected);\n    this._updateRowStateParts(row, model);\n    this._generateCellClassNames(row, model);\n    this._generateCellPartNames(row, model);\n    this._filterDragAndDrop(row, model);\n    iterateChildren(row, cell => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      }\n    });\n    this._updateDetailsCellHeight(row);\n    this._a11yUpdateRowExpanded(row, model.expanded);\n  }\n\n  /** @private */\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this.__updateFooterPositioning();\n    this.__updateHorizontalScrollPosition();\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      e.stopPropagation();\n      this.__tryToRecalculateColumnWidthsIfPending();\n      requestAnimationFrame(() => {\n        this.__scrollToPendingIndexes();\n      });\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @return {!GridItemModel}\n   * @protected\n   */\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened: !!this.rowDetailsRenderer && this._isDetailsOpened(row._item)\n    };\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _showTooltip(event) {\n    // Check if there is a slotted vaadin-tooltip element.\n    const tooltip = this._tooltipController.node;\n    if (tooltip && tooltip.isConnected) {\n      this._tooltipController.setTarget(event.target);\n      this._tooltipController.setContext(this.getEventContext(event));\n\n      // Trigger opening using the corresponding delay.\n      tooltip._stateController.open({\n        focus: event.type === 'focusin',\n        hover: event.type === 'mouseenter'\n      });\n    }\n  }\n\n  /** @protected */\n  _hideTooltip(immediate) {\n    const tooltip = this._tooltipController.node;\n    if (tooltip) {\n      tooltip._stateController.close(immediate);\n    }\n  }\n\n  /**\n   * Requests an update for the content of cells.\n   *\n   * While performing the update, the following renderers are invoked:\n   * - `Grid.rowDetailsRenderer`\n   * - `GridColumn.renderer`\n   * - `GridColumn.headerRenderer`\n   * - `GridColumn.footerRenderer`\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    // Header and footer renderers\n    this.__updateHeaderAndFooter();\n\n    // Body and row details renderers\n    this.__updateVisibleRows();\n  }\n\n  /** @private */\n  __updateHeaderAndFooter() {\n    (this._columnTree || []).forEach(level => {\n      level.forEach(column => {\n        if (column._renderHeaderAndFooter) {\n          column._renderHeaderAndFooter();\n        }\n      });\n    });\n  }\n\n  /** @protected */\n  __updateVisibleRows(start, end) {\n    if (this.__virtualizer) {\n      this.__virtualizer.update(start, end);\n    }\n  }\n};","map":{"version":3,"names":["isElementHidden","TabindexMixin","animationFrame","microTask","isAndroid","isChrome","isFirefox","isIOS","isSafari","isTouch","Debouncer","getClosestElement","processTemplates","TooltipController","Virtualizer","A11yMixin","ActiveItemMixin","ArrayDataProviderMixin","ColumnReorderingMixin","ColumnResizingMixin","DataProviderMixin","DragAndDropMixin","DynamicColumnsMixin","EventContextMixin","FilterMixin","getBodyRowCells","iterateChildren","iterateRowCells","updateBooleanRowStates","updateCellsPart","KeyboardNavigationMixin","RowDetailsMixin","ScrollMixin","SelectionMixin","SortMixin","StylingMixin","GridMixin","superClass","observers","properties","_safari","type","Boolean","value","_ios","_firefox","_android","_touchDevice","allRowsVisible","reflectToAttribute","__pendingRecalculateColumnWidths","isAttached","__gridElement","constructor","addEventListener","_onAnimationEnd","_firstVisibleIndex","firstVisibleItem","__getFirstVisibleItem","index","undefined","_lastVisibleIndex","lastVisibleItem","__getLastVisibleItem","connectedCallback","recalculateColumnWidths","disconnectedCallback","_hideTooltip","_getRenderedRows","find","row","_isInViewport","reverse","item","scrollTargetRect","$","table","getBoundingClientRect","itemRect","headerHeight","header","height","footerHeight","footer","bottom","top","Array","from","items","children","filter","hidden","sort","a","b","_getRowContainingNode","node","content","cell","assignedSlot","parentElement","_isItemAssignedToRow","model","__getRowModel","getItemId","ready","__virtualizer","createElements","_createScrollerRows","bind","updateElement","_updateScrollerItem","scrollContainer","scrollTarget","reorderElements","ResizeObserver","setTimeout","__updateFooterPositioning","__updateColumnsBodyContentHidden","__tryToRecalculateColumnWidthsIfPending","observe","_tooltipController","addController","setManual","__getBodyCellCoordinates","contains","localName","_item","column","_column","__focusBodyCell","focus","_focusFirstVisibleRow","__rowFocusMode","_effectiveSizeChanged","effectiveSize","virtualizer","hasData","columnTree","shadowRoot","activeElement","cellCoordinates","previousSize","size","update","_resetKeyboardNavigation","__hasRowsWithClientHeight","clientHeight","length","__getIntrinsicWidth","col","__intrinsicWidthCache","has","__calculateAndCacheIntrinsicWidths","get","__getDistributedWidth","innerColumn","columnWidth","Math","max","columnGroup","columnGroupWidth","sumOfWidthOfAllChildColumns","_visibleChildColumns","map","reduce","sum","curr","extraNecessarySpaceForGridColumnGroup","proportionOfExtraSpace","shareOfInnerColumnFromNecessaryExtraSpace","_recalculateColumnWidths","cols","flush","forEach","__debounceUpdateHeaderFooterRowVisibility","_debouncerHiddenChanged","Map","fvi","lvi","__viewportRowsCache","width","__setVisibleCellContentAutoWidth","autoWidth","_allCells","includes","__measuringAutoWidth","_content","style","position","__getAutoWidthCellsMaxWidth","offsetWidth","set","_columnTree","_cache","isLoading","_getColumns","_onDataProviderPageLoaded","count","rows","i","document","createElement","setAttribute","_updateRow","push","c","isConnected","notifyPath","_cells","__afterCreateScrollerRowsDebouncer","debounce","_afterScroll","_createCell","tagName","contentId","_contentIndex","slotName","cellContent","id","replace","event","scroller","hasAttribute","_showTooltip","slot","_focusButtonMode","div","appendChild","_focusButton","mouseUpListener","contentContainsFocusedElement","getRootNode","mouseUpWithinCell","composedPath","removeEventListener","columns","section","isColumnRow","noNotify","contentsFragment","createDocumentFragment","_vacant","innerHTML","__cells","__detailsCell","__parentRow","_bodyContentHidden","sizer","_sizerCell","rowDetailsRenderer","_detailsCells","detailsCell","indexOf","_configureDetailsCell","_a11ySetRowDetailsCell","_emptyCells","_frozenCellsChanged","_updateFirstAndLastColumnForRow","__updateHeaderFooterRowVisibility","visibleRowCells","headerRenderer","path","footerRenderer","_preventScrollerRotatingCellFocus","_updateRowOrderParts","_a11yUpdateRowRowindex","_getItem","_columnTreeChanged","_renderColumnTree","first","last","_effectiveSize","odd","even","_updateRowStateParts","expanded","selected","detailsOpened","_filterDragAndDrop","headerRow","footerRow","removeChild","firstElementChild","cells","_resizeHandler","_updateFirstAndLastColumn","_a11yUpdateHeaderRows","_a11yUpdateFooterRows","generateCellClassNames","generateCellPartNames","__updateHeaderAndFooter","parseFloat","navigator","userAgent","match","paddingBottom","offsetHeight","_updateItem","_toggleDetailsCell","_a11yUpdateRowLevel","level","_a11yUpdateRowSelected","_generateCellClassNames","_generateCellPartNames","_renderer","owner","call","_updateDetailsCellHeight","_a11yUpdateRowExpanded","_updateDetailsCellHeights","__updateHorizontalScrollPosition","e","animationName","stopPropagation","requestAnimationFrame","__scrollToPendingIndexes","_getIndexLevel","_isExpanded","_isSelected","_isDetailsOpened","tooltip","setTarget","target","setContext","getEventContext","_stateController","open","hover","immediate","close","requestContentUpdate","__updateVisibleRows","_renderHeaderAndFooter","start","end"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/grid/src/vaadin-grid-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isElementHidden } from '@vaadin/a11y-base/src/focus-utils.js';\nimport { TabindexMixin } from '@vaadin/a11y-base/src/tabindex-mixin.js';\nimport { animationFrame, microTask } from '@vaadin/component-base/src/async.js';\nimport { isAndroid, isChrome, isFirefox, isIOS, isSafari, isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { getClosestElement } from '@vaadin/component-base/src/dom-utils.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport {\n  getBodyRowCells,\n  iterateChildren,\n  iterateRowCells,\n  updateBooleanRowStates,\n  updateCellsPart,\n} from './vaadin-grid-helpers.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\n\n/**\n * A mixin providing common grid functionality.\n *\n * @polymerMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n */\nexport const GridMixin = (superClass) =>\n  class extends DataProviderMixin(\n    ArrayDataProviderMixin(\n      DynamicColumnsMixin(\n        ActiveItemMixin(\n          ScrollMixin(\n            SelectionMixin(\n              SortMixin(\n                RowDetailsMixin(\n                  KeyboardNavigationMixin(\n                    A11yMixin(\n                      FilterMixin(\n                        ColumnReorderingMixin(\n                          ColumnResizingMixin(\n                            EventContextMixin(DragAndDropMixin(StylingMixin(TabindexMixin(superClass)))),\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n  ) {\n    static get observers() {\n      return [\n        '_columnTreeChanged(_columnTree, _columnTree.*)',\n        '_effectiveSizeChanged(_effectiveSize, __virtualizer, _hasData, _columnTree)',\n      ];\n    }\n\n    static get properties() {\n      return {\n        /** @private */\n        _safari: {\n          type: Boolean,\n          value: isSafari,\n        },\n\n        /** @private */\n        _ios: {\n          type: Boolean,\n          value: isIOS,\n        },\n\n        /** @private */\n        _firefox: {\n          type: Boolean,\n          value: isFirefox,\n        },\n\n        /** @private */\n        _android: {\n          type: Boolean,\n          value: isAndroid,\n        },\n\n        /** @private */\n        _touchDevice: {\n          type: Boolean,\n          value: isTouch,\n        },\n\n        /**\n         * If true, the grid's height is defined by its rows.\n         *\n         * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n         * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n         * @attr {boolean} all-rows-visible\n         * @type {boolean}\n         */\n        allRowsVisible: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /** @private */\n        __pendingRecalculateColumnWidths: {\n          type: Boolean,\n          value: true,\n        },\n\n        /** @private */\n        isAttached: {\n          value: false,\n        },\n\n        /**\n         * An internal property that is mainly used by `vaadin-template-renderer`\n         * to identify grid elements.\n         *\n         * @private\n         */\n        __gridElement: {\n          type: Boolean,\n          value: true,\n        },\n      };\n    }\n\n    constructor() {\n      super();\n      this.addEventListener('animationend', this._onAnimationEnd);\n    }\n\n    /** @private */\n    get _firstVisibleIndex() {\n      const firstVisibleItem = this.__getFirstVisibleItem();\n      return firstVisibleItem ? firstVisibleItem.index : undefined;\n    }\n\n    /** @private */\n    get _lastVisibleIndex() {\n      const lastVisibleItem = this.__getLastVisibleItem();\n      return lastVisibleItem ? lastVisibleItem.index : undefined;\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n      this.isAttached = true;\n      this.recalculateColumnWidths();\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.isAttached = false;\n      this._hideTooltip(true);\n    }\n\n    /** @private */\n    __getFirstVisibleItem() {\n      return this._getRenderedRows().find((row) => this._isInViewport(row));\n    }\n\n    /** @private */\n    __getLastVisibleItem() {\n      return this._getRenderedRows()\n        .reverse()\n        .find((row) => this._isInViewport(row));\n    }\n\n    /** @private */\n    _isInViewport(item) {\n      const scrollTargetRect = this.$.table.getBoundingClientRect();\n      const itemRect = item.getBoundingClientRect();\n      const headerHeight = this.$.header.getBoundingClientRect().height;\n      const footerHeight = this.$.footer.getBoundingClientRect().height;\n      return (\n        itemRect.bottom > scrollTargetRect.top + headerHeight && itemRect.top < scrollTargetRect.bottom - footerHeight\n      );\n    }\n\n    /** @private */\n    _getRenderedRows() {\n      return Array.from(this.$.items.children)\n        .filter((item) => !item.hidden)\n        .sort((a, b) => a.index - b.index);\n    }\n\n    /** @protected */\n    _getRowContainingNode(node) {\n      const content = getClosestElement('vaadin-grid-cell-content', node);\n      if (!content) {\n        return;\n      }\n\n      const cell = content.assignedSlot.parentElement;\n      return cell.parentElement;\n    }\n\n    /** @protected */\n    _isItemAssignedToRow(item, row) {\n      const model = this.__getRowModel(row);\n      return this.getItemId(item) === this.getItemId(model.item);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.__virtualizer = new Virtualizer({\n        createElements: this._createScrollerRows.bind(this),\n        updateElement: this._updateScrollerItem.bind(this),\n        scrollContainer: this.$.items,\n        scrollTarget: this.$.table,\n        reorderElements: true,\n      });\n\n      new ResizeObserver(() =>\n        setTimeout(() => {\n          this.__updateFooterPositioning();\n          this.__updateColumnsBodyContentHidden();\n          this.__tryToRecalculateColumnWidthsIfPending();\n        }),\n      ).observe(this.$.table);\n\n      processTemplates(this);\n\n      this._tooltipController = new TooltipController(this);\n      this.addController(this._tooltipController);\n      this._tooltipController.setManual(true);\n    }\n\n    /** @private */\n    __getBodyCellCoordinates(cell) {\n      if (this.$.items.contains(cell) && cell.localName === 'td') {\n        return {\n          item: cell.parentElement._item,\n          column: cell._column,\n        };\n      }\n    }\n\n    /** @private */\n    __focusBodyCell({ item, column }) {\n      const row = this._getRenderedRows().find((row) => row._item === item);\n      const cell = row && [...row.children].find((cell) => cell._column === column);\n      if (cell) {\n        cell.focus();\n      }\n    }\n\n    /** @protected */\n    _focusFirstVisibleRow() {\n      const row = this.__getFirstVisibleItem();\n      this.__rowFocusMode = true;\n      row.focus();\n    }\n\n    /** @private */\n    _effectiveSizeChanged(effectiveSize, virtualizer, hasData, columnTree) {\n      if (virtualizer && hasData && columnTree) {\n        // Changing the virtualizer size may result in the row with focus getting hidden\n        const cell = this.shadowRoot.activeElement;\n        const cellCoordinates = this.__getBodyCellCoordinates(cell);\n\n        const previousSize = virtualizer.size || 0;\n        virtualizer.size = effectiveSize;\n\n        // Request an update for the previous last row to have the \"last\" state removed\n        virtualizer.update(previousSize - 1, previousSize - 1);\n        if (effectiveSize < previousSize) {\n          // Size was decreased, so the new last row requires an explicit update\n          virtualizer.update(effectiveSize - 1, effectiveSize - 1);\n        }\n\n        // If the focused cell's parent row got hidden by the size change, focus the corresponding new cell\n        if (cellCoordinates && cell.parentElement.hidden) {\n          this.__focusBodyCell(cellCoordinates);\n        }\n\n        // Make sure the body has a tabbable element\n        this._resetKeyboardNavigation();\n      }\n    }\n\n    /** @private */\n    __hasRowsWithClientHeight() {\n      return !!Array.from(this.$.items.children).filter((row) => row.clientHeight).length;\n    }\n\n    /** @private */\n    __getIntrinsicWidth(col) {\n      if (!this.__intrinsicWidthCache.has(col)) {\n        this.__calculateAndCacheIntrinsicWidths([col]);\n      }\n      return this.__intrinsicWidthCache.get(col);\n    }\n\n    /** @private */\n    __getDistributedWidth(col, innerColumn) {\n      if (col == null || col === this) {\n        return 0;\n      }\n\n      const columnWidth = Math.max(\n        this.__getIntrinsicWidth(col),\n        this.__getDistributedWidth((col.assignedSlot || col).parentElement, col),\n      );\n\n      // We're processing a regular grid-column and not a grid-column-group\n      if (!innerColumn) {\n        return columnWidth;\n      }\n\n      // At the end, the width of each vaadin-grid-column-group is determined by the sum of the width of its children.\n      // Here we determine how much space the vaadin-grid-column-group actually needs to render properly and then we distribute that space\n      // to its children, so when we actually do the summation it will be rendered properly.\n      // Check out vaadin-grid-column-group:_updateFlexAndWidth\n      const columnGroup = col;\n      const columnGroupWidth = columnWidth;\n      const sumOfWidthOfAllChildColumns = columnGroup._visibleChildColumns\n        .map((col) => this.__getIntrinsicWidth(col))\n        .reduce((sum, curr) => sum + curr, 0);\n\n      const extraNecessarySpaceForGridColumnGroup = Math.max(0, columnGroupWidth - sumOfWidthOfAllChildColumns);\n\n      // The distribution of the extra necessary space is done according to the intrinsic width of each child column.\n      // Lets say we need 100 pixels of extra space for the grid-column-group to render properly\n      // it has two grid-column children, |100px|300px| in total 400px\n      // the first column gets 25px of the additional space (100/400)*100 = 25\n      // the second column gets the 75px of the additional space (300/400)*100 = 75\n      const proportionOfExtraSpace = this.__getIntrinsicWidth(innerColumn) / sumOfWidthOfAllChildColumns;\n      const shareOfInnerColumnFromNecessaryExtraSpace = proportionOfExtraSpace * extraNecessarySpaceForGridColumnGroup;\n\n      return this.__getIntrinsicWidth(innerColumn) + shareOfInnerColumnFromNecessaryExtraSpace;\n    }\n\n    /**\n     * @param {!Array<!GridColumn>} cols the columns to auto size based on their content width\n     * @private\n     */\n    _recalculateColumnWidths(cols) {\n      // Flush to make sure DOM is up-to-date when measuring the column widths\n      this.__virtualizer.flush();\n      [...this.$.header.children, ...this.$.footer.children].forEach((row) => {\n        if (row.__debounceUpdateHeaderFooterRowVisibility) {\n          row.__debounceUpdateHeaderFooterRowVisibility.flush();\n        }\n      });\n\n      // Flush to account for any changes to the visibility of the columns\n      if (this._debouncerHiddenChanged) {\n        this._debouncerHiddenChanged.flush();\n      }\n\n      this.__intrinsicWidthCache = new Map();\n      // Cache the viewport rows to avoid unnecessary reflows while measuring the column widths\n      const fvi = this._firstVisibleIndex;\n      const lvi = this._lastVisibleIndex;\n      this.__viewportRowsCache = this._getRenderedRows().filter((row) => row.index >= fvi && row.index <= lvi);\n\n      // Pre-cache the intrinsic width of each column\n      this.__calculateAndCacheIntrinsicWidths(cols);\n\n      cols.forEach((col) => {\n        col.width = `${this.__getDistributedWidth(col)}px`;\n      });\n    }\n\n    /**\n     * Toggles the cell content for the given column to use or not use auto width.\n     *\n     * While content for all the column cells uses auto width (instead of the default 100%),\n     * their offsetWidth can be used to calculate the collective intrinsic width of the column.\n     *\n     * @private\n     */\n    __setVisibleCellContentAutoWidth(col, autoWidth) {\n      col._allCells\n        .filter((cell) => {\n          if (this.$.items.contains(cell)) {\n            return this.__viewportRowsCache.includes(cell.parentElement);\n          }\n          return true;\n        })\n        .forEach((cell) => {\n          cell.__measuringAutoWidth = autoWidth;\n          cell._content.style.width = autoWidth ? 'auto' : '';\n          cell._content.style.position = autoWidth ? 'absolute' : '';\n        });\n    }\n\n    /**\n     * Returns the maximum intrinsic width of the cell content in the given column.\n     * Only cells which are marked for measuring auto width are considered.\n     *\n     * @private\n     */\n    __getAutoWidthCellsMaxWidth(col) {\n      // Note: _allCells only contains cells which are currently rendered in DOM\n      return col._allCells.reduce((width, cell) => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        return cell.__measuringAutoWidth ? Math.max(width, cell._content.offsetWidth + 1) : width;\n      }, 0);\n    }\n\n    /**\n     * Calculates and caches the intrinsic width of each given column.\n     *\n     * @private\n     */\n    __calculateAndCacheIntrinsicWidths(cols) {\n      // Make all the columns use auto width at once before measuring to\n      // avoid reflows in between the measurements\n      cols.forEach((col) => this.__setVisibleCellContentAutoWidth(col, true));\n      // Measure and cache\n      cols.forEach((col) => {\n        const width = this.__getAutoWidthCellsMaxWidth(col);\n        this.__intrinsicWidthCache.set(col, width);\n      });\n      // Reset the columns to use 100% width\n      cols.forEach((col) => this.__setVisibleCellContentAutoWidth(col, false));\n    }\n\n    /**\n     * Updates the `width` of all columns which have `autoWidth` set to `true`.\n     */\n    recalculateColumnWidths() {\n      if (!this._columnTree) {\n        return; // No columns\n      }\n      if (isElementHidden(this) || this._cache.isLoading()) {\n        this.__pendingRecalculateColumnWidths = true;\n        return;\n      }\n      const cols = this._getColumns().filter((col) => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n    }\n\n    /** @private */\n    __tryToRecalculateColumnWidthsIfPending() {\n      if (\n        this.__pendingRecalculateColumnWidths &&\n        !isElementHidden(this) &&\n        !this._cache.isLoading() &&\n        this.__hasRowsWithClientHeight()\n      ) {\n        this.__pendingRecalculateColumnWidths = false;\n        this.recalculateColumnWidths();\n      }\n    }\n\n    /**\n     * @protected\n     * @override\n     */\n    _onDataProviderPageLoaded() {\n      super._onDataProviderPageLoaded();\n      this.__tryToRecalculateColumnWidthsIfPending();\n    }\n\n    /** @private */\n    _createScrollerRows(count) {\n      const rows = [];\n      for (let i = 0; i < count; i++) {\n        const row = document.createElement('tr');\n        row.setAttribute('part', 'row');\n        row.setAttribute('role', 'row');\n        row.setAttribute('tabindex', '-1');\n        if (this._columnTree) {\n          this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n        }\n        rows.push(row);\n      }\n\n      if (this._columnTree) {\n        this._columnTree[this._columnTree.length - 1].forEach(\n          (c) => c.isConnected && c.notifyPath && c.notifyPath('_cells.*', c._cells),\n        );\n      }\n\n      this.__afterCreateScrollerRowsDebouncer = Debouncer.debounce(\n        this.__afterCreateScrollerRowsDebouncer,\n        animationFrame,\n        () => {\n          this._afterScroll();\n          this.__tryToRecalculateColumnWidthsIfPending();\n        },\n      );\n      return rows;\n    }\n\n    /** @private */\n    _createCell(tagName, column) {\n      const contentId = (this._contentIndex = this._contentIndex + 1 || 0);\n      const slotName = `vaadin-grid-cell-content-${contentId}`;\n\n      const cellContent = document.createElement('vaadin-grid-cell-content');\n      cellContent.setAttribute('slot', slotName);\n\n      const cell = document.createElement(tagName);\n      cell.id = slotName.replace('-content-', '-');\n      cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n      // For now we only support tooltip on desktop\n      if (!isAndroid && !isIOS) {\n        cell.addEventListener('mouseenter', (event) => {\n          if (!this.$.scroller.hasAttribute('scrolling')) {\n            this._showTooltip(event);\n          }\n        });\n\n        cell.addEventListener('mouseleave', () => {\n          this._hideTooltip();\n        });\n\n        cell.addEventListener('mousedown', () => {\n          this._hideTooltip(true);\n        });\n      }\n\n      const slot = document.createElement('slot');\n      slot.setAttribute('name', slotName);\n\n      if (column && column._focusButtonMode) {\n        const div = document.createElement('div');\n        div.setAttribute('role', 'button');\n        div.setAttribute('tabindex', '-1');\n        cell.appendChild(div);\n\n        // Patch `focus()` to use the button\n        cell._focusButton = div;\n        cell.focus = function () {\n          cell._focusButton.focus();\n        };\n\n        div.appendChild(slot);\n      } else {\n        cell.setAttribute('tabindex', '-1');\n        cell.appendChild(slot);\n      }\n\n      cell._content = cellContent;\n\n      // With native Shadow DOM, mousedown on slotted element does not focus\n      // focusable slot wrapper, that is why cells are not focused with\n      // mousedown. Workaround: listen for mousedown and focus manually.\n      cellContent.addEventListener('mousedown', () => {\n        if (isChrome) {\n          // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n          const mouseUpListener = (event) => {\n            // If focus is on element within the cell content - respect it, do not change\n            const contentContainsFocusedElement = cellContent.contains(this.getRootNode().activeElement);\n            // Only focus if mouse is released on cell content itself\n            const mouseUpWithinCell = event.composedPath().includes(cellContent);\n            if (!contentContainsFocusedElement && mouseUpWithinCell) {\n              cell.focus();\n            }\n            document.removeEventListener('mouseup', mouseUpListener, true);\n          };\n          document.addEventListener('mouseup', mouseUpListener, true);\n        } else {\n          // Focus on mouseup, on the other hand, removes selection on Safari.\n          // Watch out sync focus removal issue, only async focus works here.\n          setTimeout(() => {\n            if (!cellContent.contains(this.getRootNode().activeElement)) {\n              cell.focus();\n            }\n          });\n        }\n      });\n\n      return cell;\n    }\n\n    /**\n     * @param {!HTMLTableRowElement} row\n     * @param {!Array<!GridColumn>} columns\n     * @param {?string} section\n     * @param {boolean} isColumnRow\n     * @param {boolean} noNotify\n     * @protected\n     */\n    _updateRow(row, columns, section = 'body', isColumnRow = false, noNotify = false) {\n      const contentsFragment = document.createDocumentFragment();\n\n      iterateRowCells(row, (cell) => {\n        cell._vacant = true;\n      });\n      row.innerHTML = '';\n      if (section === 'body') {\n        // Clear the cached cell references\n        row.__cells = [];\n        row.__detailsCell = null;\n      }\n\n      columns\n        .filter((column) => !column.hidden)\n        .forEach((column, index, cols) => {\n          let cell;\n\n          if (section === 'body') {\n            // Body\n            if (!column._cells) {\n              column._cells = [];\n            }\n            cell = column._cells.find((cell) => cell._vacant);\n            if (!cell) {\n              cell = this._createCell('td', column);\n              column._cells.push(cell);\n            }\n            cell.setAttribute('part', 'cell body-cell');\n            cell.__parentRow = row;\n            // Cache the cell reference\n            row.__cells.push(cell);\n            if (!column._bodyContentHidden) {\n              row.appendChild(cell);\n            }\n\n            if (row === this.$.sizer) {\n              column._sizerCell = cell;\n            }\n\n            if (index === cols.length - 1 && this.rowDetailsRenderer) {\n              // Add details cell as last cell to body rows\n              if (!this._detailsCells) {\n                this._detailsCells = [];\n              }\n              const detailsCell = this._detailsCells.find((cell) => cell._vacant) || this._createCell('td');\n              if (this._detailsCells.indexOf(detailsCell) === -1) {\n                this._detailsCells.push(detailsCell);\n              }\n              if (!detailsCell._content.parentElement) {\n                contentsFragment.appendChild(detailsCell._content);\n              }\n              this._configureDetailsCell(detailsCell);\n              row.appendChild(detailsCell);\n              // Cache the details cell reference\n              row.__detailsCell = detailsCell;\n              this._a11ySetRowDetailsCell(row, detailsCell);\n              detailsCell._vacant = false;\n            }\n\n            if (column.notifyPath && !noNotify) {\n              column.notifyPath('_cells.*', column._cells);\n            }\n          } else {\n            // Header & footer\n            const tagName = section === 'header' ? 'th' : 'td';\n            if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n              cell = column[`_${section}Cell`] || this._createCell(tagName);\n              cell._column = column;\n              row.appendChild(cell);\n              column[`_${section}Cell`] = cell;\n            } else {\n              if (!column._emptyCells) {\n                column._emptyCells = [];\n              }\n              cell = column._emptyCells.find((cell) => cell._vacant) || this._createCell(tagName);\n              cell._column = column;\n              row.appendChild(cell);\n              if (column._emptyCells.indexOf(cell) === -1) {\n                column._emptyCells.push(cell);\n              }\n            }\n            cell.setAttribute('part', `cell ${section}-cell`);\n          }\n\n          if (!cell._content.parentElement) {\n            contentsFragment.appendChild(cell._content);\n          }\n          cell._vacant = false;\n          cell._column = column;\n        });\n\n      if (section !== 'body') {\n        this.__debounceUpdateHeaderFooterRowVisibility(row);\n      }\n\n      // Might be empty if only cache was used\n      this.appendChild(contentsFragment);\n\n      this._frozenCellsChanged();\n      this._updateFirstAndLastColumnForRow(row);\n    }\n\n    /**\n     * @param {HTMLTableRowElement} row\n     * @protected\n     */\n    __debounceUpdateHeaderFooterRowVisibility(row) {\n      row.__debounceUpdateHeaderFooterRowVisibility = Debouncer.debounce(\n        row.__debounceUpdateHeaderFooterRowVisibility,\n        microTask,\n        () => this.__updateHeaderFooterRowVisibility(row),\n      );\n    }\n\n    /**\n     * @param {HTMLTableRowElement} row\n     * @protected\n     */\n    __updateHeaderFooterRowVisibility(row) {\n      if (!row) {\n        return;\n      }\n\n      const visibleRowCells = Array.from(row.children).filter((cell) => {\n        const column = cell._column;\n        if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n          // The cell is an \"empty cell\"  -> doesn't block hiding the row\n          return false;\n        }\n        if (row.parentElement === this.$.header) {\n          if (column.headerRenderer) {\n            // The cell is the header cell of a column that has a header renderer\n            // -> row should be visible\n            return true;\n          }\n          if (column.header === null) {\n            // The column header is explicilty set to null -> doesn't block hiding the row\n            return false;\n          }\n          if (column.path || column.header !== undefined) {\n            // The column has an explicit non-null header or a path that generates a header\n            // -> row should be visible\n            return true;\n          }\n        } else if (column.footerRenderer) {\n          // The cell is the footer cell of a column that has a footer renderer\n          // -> row should be visible\n          return true;\n        }\n        return false;\n      });\n\n      if (row.hidden !== !visibleRowCells.length) {\n        row.hidden = !visibleRowCells.length;\n      }\n\n      // Make sure the section has a tabbable element\n      this._resetKeyboardNavigation();\n    }\n\n    /** @private */\n    _updateScrollerItem(row, index) {\n      this._preventScrollerRotatingCellFocus(row, index);\n\n      if (!this._columnTree) {\n        return;\n      }\n\n      this._updateRowOrderParts(row, index);\n\n      this._a11yUpdateRowRowindex(row, index);\n      this._getItem(index, row);\n    }\n\n    /** @private */\n    _columnTreeChanged(columnTree) {\n      this._renderColumnTree(columnTree);\n      this.recalculateColumnWidths();\n      this.__updateColumnsBodyContentHidden();\n    }\n\n    /** @private */\n    _updateRowOrderParts(row, index = row.index) {\n      updateBooleanRowStates(row, {\n        first: index === 0,\n        last: index === this._effectiveSize - 1,\n        odd: index % 2 !== 0,\n        even: index % 2 === 0,\n      });\n    }\n\n    /** @private */\n    _updateRowStateParts(row, { expanded, selected, detailsOpened }) {\n      updateBooleanRowStates(row, {\n        expanded,\n        selected,\n        'details-opened': detailsOpened,\n      });\n    }\n\n    /**\n     * @param {!Array<!GridColumn>} columnTree\n     * @protected\n     */\n    _renderColumnTree(columnTree) {\n      iterateChildren(this.$.items, (row) => {\n        this._updateRow(row, columnTree[columnTree.length - 1], 'body', false, true);\n\n        const model = this.__getRowModel(row);\n        this._updateRowOrderParts(row);\n        this._updateRowStateParts(row, model);\n        this._filterDragAndDrop(row, model);\n      });\n\n      while (this.$.header.children.length < columnTree.length) {\n        const headerRow = document.createElement('tr');\n        headerRow.setAttribute('part', 'row');\n        headerRow.setAttribute('role', 'row');\n        headerRow.setAttribute('tabindex', '-1');\n        this.$.header.appendChild(headerRow);\n\n        const footerRow = document.createElement('tr');\n        footerRow.setAttribute('part', 'row');\n        footerRow.setAttribute('role', 'row');\n        footerRow.setAttribute('tabindex', '-1');\n        this.$.footer.appendChild(footerRow);\n      }\n      while (this.$.header.children.length > columnTree.length) {\n        this.$.header.removeChild(this.$.header.firstElementChild);\n        this.$.footer.removeChild(this.$.footer.firstElementChild);\n      }\n\n      iterateChildren(this.$.header, (headerRow, index, rows) => {\n        this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1);\n\n        const cells = getBodyRowCells(headerRow);\n        updateCellsPart(cells, 'first-header-row-cell', index === 0);\n        updateCellsPart(cells, 'last-header-row-cell', index === rows.length - 1);\n      });\n\n      iterateChildren(this.$.footer, (footerRow, index, rows) => {\n        this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0);\n\n        const cells = getBodyRowCells(footerRow);\n        updateCellsPart(cells, 'first-footer-row-cell', index === 0);\n        updateCellsPart(cells, 'last-footer-row-cell', index === rows.length - 1);\n      });\n\n      // Sizer rows\n      this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n\n      this._resizeHandler();\n      this._frozenCellsChanged();\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n      this._a11yUpdateHeaderRows();\n      this._a11yUpdateFooterRows();\n      this.__updateFooterPositioning();\n      this.generateCellClassNames();\n      this.generateCellPartNames();\n      this.__updateHeaderAndFooter();\n    }\n\n    /** @private */\n    __updateFooterPositioning() {\n      // TODO: fixed in Firefox 99, remove when we can drop Firefox ESR 91 support\n      if (this._firefox && parseFloat(navigator.userAgent.match(/Firefox\\/(\\d{2,3}.\\d)/u)[1]) < 99) {\n        // Sticky (or translated) footer in a flexbox host doesn't get included in\n        // the scroll height calculation on FF. This is a workaround for the issue.\n        this.$.items.style.paddingBottom = 0;\n        if (!this.allRowsVisible) {\n          this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n        }\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {GridItem} item\n     * @protected\n     */\n    _updateItem(row, item) {\n      row._item = item;\n      const model = this.__getRowModel(row);\n\n      this._toggleDetailsCell(row, model.detailsOpened);\n\n      this._a11yUpdateRowLevel(row, model.level);\n      this._a11yUpdateRowSelected(row, model.selected);\n\n      this._updateRowStateParts(row, model);\n\n      this._generateCellClassNames(row, model);\n      this._generateCellPartNames(row, model);\n      this._filterDragAndDrop(row, model);\n\n      iterateChildren(row, (cell) => {\n        if (cell._renderer) {\n          const owner = cell._column || this;\n          cell._renderer.call(owner, cell._content, owner, model);\n        }\n      });\n\n      this._updateDetailsCellHeight(row);\n\n      this._a11yUpdateRowExpanded(row, model.expanded);\n    }\n\n    /** @private */\n    _resizeHandler() {\n      this._updateDetailsCellHeights();\n      this.__updateFooterPositioning();\n      this.__updateHorizontalScrollPosition();\n    }\n\n    /** @private */\n    _onAnimationEnd(e) {\n      // ShadyCSS applies scoping suffixes to animation names\n      if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n        e.stopPropagation();\n        this.__tryToRecalculateColumnWidthsIfPending();\n\n        requestAnimationFrame(() => {\n          this.__scrollToPendingIndexes();\n        });\n      }\n    }\n\n    /**\n     * @param {!HTMLTableRowElement} row\n     * @return {!GridItemModel}\n     * @protected\n     */\n    __getRowModel(row) {\n      return {\n        index: row.index,\n        item: row._item,\n        level: this._getIndexLevel(row.index),\n        expanded: this._isExpanded(row._item),\n        selected: this._isSelected(row._item),\n        detailsOpened: !!this.rowDetailsRenderer && this._isDetailsOpened(row._item),\n      };\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _showTooltip(event) {\n      // Check if there is a slotted vaadin-tooltip element.\n      const tooltip = this._tooltipController.node;\n      if (tooltip && tooltip.isConnected) {\n        this._tooltipController.setTarget(event.target);\n        this._tooltipController.setContext(this.getEventContext(event));\n\n        // Trigger opening using the corresponding delay.\n        tooltip._stateController.open({\n          focus: event.type === 'focusin',\n          hover: event.type === 'mouseenter',\n        });\n      }\n    }\n\n    /** @protected */\n    _hideTooltip(immediate) {\n      const tooltip = this._tooltipController.node;\n      if (tooltip) {\n        tooltip._stateController.close(immediate);\n      }\n    }\n\n    /**\n     * Requests an update for the content of cells.\n     *\n     * While performing the update, the following renderers are invoked:\n     * - `Grid.rowDetailsRenderer`\n     * - `GridColumn.renderer`\n     * - `GridColumn.headerRenderer`\n     * - `GridColumn.footerRenderer`\n     *\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n     */\n    requestContentUpdate() {\n      // Header and footer renderers\n      this.__updateHeaderAndFooter();\n\n      // Body and row details renderers\n      this.__updateVisibleRows();\n    }\n\n    /** @private */\n    __updateHeaderAndFooter() {\n      (this._columnTree || []).forEach((level) => {\n        level.forEach((column) => {\n          if (column._renderHeaderAndFooter) {\n            column._renderHeaderAndFooter();\n          }\n        });\n      });\n    }\n\n    /** @protected */\n    __updateVisibleRows(start, end) {\n      if (this.__virtualizer) {\n        this.__virtualizer.update(start, end);\n      }\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}