{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Templatizer } from './vaadin-grid-templatizer.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = superClass => class RowDetailsMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * An array containing references to items with open row details.\n       */\n      detailsOpenedItems: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n      _rowDetailsTemplate: Object,\n      /**\n       * Custom function for rendering the content of the row details.\n       * Receives three arguments:\n       *\n       * - `root` The row details content DOM element. Append your content to it.\n       * - `grid` The `<vaadin-grid>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       */\n      rowDetailsRenderer: Function,\n      _detailsCells: {\n        type: Array\n      }\n    };\n  }\n  static get observers() {\n    return ['_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)', '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'];\n  }\n  _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n    if (rowDetailsTemplate && rowDetailsRenderer) {\n      throw new Error('You should only use either a renderer or a template for row details');\n    }\n    if (rowDetailsTemplate || rowDetailsRenderer) {\n      if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n        var templatizer = new Templatizer();\n        templatizer._grid = this;\n        templatizer.dataHost = this.dataHost;\n        templatizer.template = rowDetailsTemplate;\n        rowDetailsTemplate.templatizer = templatizer;\n      }\n      if (this._columnTree) {\n        // Only update the rows if the column tree has already been initialized\n        Array.from(this.$.items.children).forEach(row => {\n          if (!row.querySelector('[part~=details-cell]')) {\n            this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n            this._a11yUpdateRowDetailsOpened(row, false);\n          }\n          // Clear any old template instances\n          delete row.querySelector('[part~=details-cell]')._instance;\n        });\n      }\n      if (this.detailsOpenedItems.length) {\n        Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n        this._update();\n      }\n    }\n  }\n  _detailsOpenedItemsChanged(changeRecord, rowDetailsTemplate, rowDetailsRenderer) {\n    if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n      // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n      return;\n    }\n    Array.from(this.$.items.children).forEach(row => {\n      this._toggleDetailsCell(row, row._item);\n      this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n    });\n  }\n  _configureDetailsCell(cell) {\n    cell.setAttribute('part', 'cell details-cell');\n    // Freeze the details cell, so that it does not scroll horizontally\n    // with the normal cells. This way it looks less weird.\n    this._toggleAttribute('frozen', true, cell);\n  }\n  _toggleDetailsCell(row, item) {\n    const cell = row.querySelector('[part~=\"details-cell\"]');\n    if (!cell) {\n      return;\n    }\n    const detailsHidden = !this._isDetailsOpened(item);\n    const hiddenChanged = !!cell.hidden !== detailsHidden;\n    if (!cell._instance && !cell._renderer || cell.hidden !== detailsHidden) {\n      cell.hidden = detailsHidden;\n      if (detailsHidden) {\n        row.style.removeProperty('padding-bottom');\n      } else {\n        if (this.rowDetailsRenderer) {\n          cell._renderer = this.rowDetailsRenderer;\n          cell._renderer.call(this, cell._content, this, {\n            index: row.index,\n            item: item\n          });\n        } else if (this._rowDetailsTemplate && !cell._instance) {\n          // Stamp the template\n          cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n          cell._content.innerHTML = '';\n          cell._content.appendChild(cell._instance.root);\n          this._updateItem(row, item);\n        }\n        flush();\n        row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n        requestAnimationFrame(() => this.notifyResize());\n      }\n    }\n    if (hiddenChanged) {\n      this._updateMetrics();\n      this._positionItems();\n    }\n  }\n  _updateDetailsCellHeights() {\n    Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach(cell => {\n      cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n    });\n  }\n  _isDetailsOpened(item) {\n    return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n  }\n\n  /**\n   * Open the details row of a given item.\n   */\n  openItemDetails(item) {\n    if (!this._isDetailsOpened(item)) {\n      this.push('detailsOpenedItems', item);\n    }\n  }\n\n  /**\n   * Close the details row of a given item.\n   */\n  closeItemDetails(item) {\n    if (this._isDetailsOpened(item)) {\n      this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n    }\n  }\n  _detailsOpenedInstanceChangedCallback(instance, value) {\n    if (super._detailsOpenedInstanceChangedCallback) {\n      super._detailsOpenedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.openItemDetails(instance.item);\n    } else {\n      this.closeItemDetails(instance.item);\n    }\n  }\n};","map":{"version":3,"names":["Templatizer","flush","RowDetailsMixin","superClass","properties","detailsOpenedItems","type","Array","value","_rowDetailsTemplate","Object","rowDetailsRenderer","Function","_detailsCells","observers","_rowDetailsTemplateOrRendererChanged","rowDetailsTemplate","Error","templatizer","_grid","dataHost","template","_columnTree","from","$","items","children","forEach","row","querySelector","_updateRow","length","_a11yUpdateRowDetailsOpened","_instance","_toggleDetailsCell","_update","_detailsOpenedItemsChanged","changeRecord","path","_item","_isDetailsOpened","_configureDetailsCell","cell","setAttribute","_toggleAttribute","item","detailsHidden","hiddenChanged","hidden","_renderer","style","removeProperty","call","_content","index","createInstance","innerHTML","appendChild","root","_updateItem","setProperty","offsetHeight","requestAnimationFrame","notifyResize","_updateMetrics","_positionItems","_updateDetailsCellHeights","querySelectorAll","parentElement","_getItemIndexInArray","openItemDetails","push","closeItemDetails","splice","_detailsOpenedInstanceChangedCallback","instance"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-row-details-mixin.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Templatizer } from './vaadin-grid-templatizer.js';\n\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = superClass => class RowDetailsMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * An array containing references to items with open row details.\n       */\n      detailsOpenedItems: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _rowDetailsTemplate: Object,\n\n      /**\n       * Custom function for rendering the content of the row details.\n       * Receives three arguments:\n       *\n       * - `root` The row details content DOM element. Append your content to it.\n       * - `grid` The `<vaadin-grid>` element.\n       * - `rowData` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `rowData.index` The index of the item.\n       *   - `rowData.item` The item.\n       */\n      rowDetailsRenderer: Function,\n\n      _detailsCells: {\n        type: Array,\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)',\n      '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'\n    ];\n  }\n\n  _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n    if (rowDetailsTemplate && rowDetailsRenderer) {\n      throw new Error('You should only use either a renderer or a template for row details');\n    }\n    if (rowDetailsTemplate || rowDetailsRenderer) {\n      if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n        var templatizer = new Templatizer();\n        templatizer._grid = this;\n        templatizer.dataHost = this.dataHost;\n        templatizer.template = rowDetailsTemplate;\n        rowDetailsTemplate.templatizer = templatizer;\n      }\n\n      if (this._columnTree) {\n        // Only update the rows if the column tree has already been initialized\n        Array.from(this.$.items.children).forEach(row => {\n          if (!row.querySelector('[part~=details-cell]')) {\n            this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n            this._a11yUpdateRowDetailsOpened(row, false);\n          }\n          // Clear any old template instances\n          delete row.querySelector('[part~=details-cell]')._instance;\n        });\n      }\n\n      if (this.detailsOpenedItems.length) {\n        Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n        this._update();\n      }\n    }\n  }\n\n  _detailsOpenedItemsChanged(changeRecord, rowDetailsTemplate, rowDetailsRenderer) {\n    if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n      // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n      return;\n    }\n    Array.from(this.$.items.children).forEach(row => {\n      this._toggleDetailsCell(row, row._item);\n      this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n    });\n  }\n\n  _configureDetailsCell(cell) {\n    cell.setAttribute('part', 'cell details-cell');\n    // Freeze the details cell, so that it does not scroll horizontally\n    // with the normal cells. This way it looks less weird.\n    this._toggleAttribute('frozen', true, cell);\n  }\n\n  _toggleDetailsCell(row, item) {\n    const cell = row.querySelector('[part~=\"details-cell\"]');\n    if (!cell) {\n      return;\n    }\n    const detailsHidden = !this._isDetailsOpened(item);\n    const hiddenChanged = !!cell.hidden !== detailsHidden;\n\n    if (!cell._instance && !cell._renderer || cell.hidden !== detailsHidden) {\n      cell.hidden = detailsHidden;\n      if (detailsHidden) {\n        row.style.removeProperty('padding-bottom');\n      } else {\n        if (this.rowDetailsRenderer) {\n          cell._renderer = this.rowDetailsRenderer;\n          cell._renderer.call(this, cell._content, this, {index: row.index, item: item});\n        } else if (this._rowDetailsTemplate && !cell._instance) {\n          // Stamp the template\n          cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n          cell._content.innerHTML = '';\n          cell._content.appendChild(cell._instance.root);\n          this._updateItem(row, item);\n        }\n\n        flush();\n        row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n\n        requestAnimationFrame(() => this.notifyResize());\n      }\n    }\n    if (hiddenChanged) {\n      this._updateMetrics();\n      this._positionItems();\n    }\n  }\n\n  _updateDetailsCellHeights() {\n    Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach(cell => {\n      cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n    });\n  }\n\n  _isDetailsOpened(item) {\n    return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n  }\n\n  /**\n   * Open the details row of a given item.\n   */\n  openItemDetails(item) {\n    if (!this._isDetailsOpened(item)) {\n      this.push('detailsOpenedItems', item);\n    }\n  }\n\n  /**\n   * Close the details row of a given item.\n   */\n  closeItemDetails(item) {\n    if (this._isDetailsOpened(item)) {\n      this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n    }\n  }\n\n  _detailsOpenedInstanceChangedCallback(instance, value) {\n    if (super._detailsOpenedInstanceChangedCallback) {\n      super._detailsOpenedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.openItemDetails(instance.item);\n    } else {\n      this.closeItemDetails(instance.item);\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}