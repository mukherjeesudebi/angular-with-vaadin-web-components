{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @memberof Vaadin\n * @private\n */\nclass GridTemplatizer extends class extends PolymerElement {} {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n  static get properties() {\n    return {\n      dataHost: Object,\n      template: Object,\n      _templateInstances: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n      _parentPathValues: {\n        value: function () {\n          return {};\n        }\n      },\n      _grid: Object\n    };\n  }\n  static get observers() {\n    return ['_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'];\n  }\n  constructor() {\n    super();\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n    return instance;\n  }\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n        forwardHostProp: function (prop, value) {\n          this._forwardParentProp(prop, value);\n          if (this._templateInstances) {\n            this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n          }\n        },\n        notifyInstanceProp: function (inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n          const row = Array.from(this._grid.$.items.children).filter(row => this._grid._itemsEqual(row._item, inst.item))[0];\n          if (row) {\n            Array.from(row.children).forEach(cell => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n      });\n    }\n  }\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n  }\n  _templateInstancesChanged(t, p) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach(keyName => {\n      for (var i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n}\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\nexport { GridTemplatizer as Templatizer };","map":{"version":3,"names":["PolymerElement","templatize","GridTemplatizer","is","properties","dataHost","Object","template","_templateInstances","type","Array","value","_parentPathValues","_grid","observers","constructor","_instanceProps","detailsOpened","index","item","selected","expanded","level","createInstance","_ensureTemplatized","instance","_TemplateClass","addInstance","indexOf","push","requestAnimationFrame","notifyPath","removeInstance","splice","instanceProps","parentModel","forwardHostProp","prop","_forwardParentProp","forEach","inst","notifyInstanceProp","originalProp","row","from","$","items","children","filter","_itemsEqual","_item","cell","_instance","itemPrefix","isArray","itemsIndex","path","slice","length","gridCallback","_templateInstancesChanged","t","p","count","addedCount","keys","keyName","i","set","customElements","define","Templatizer"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-templatizer.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @memberof Vaadin\n * @private\n */\nclass GridTemplatizer extends (class extends PolymerElement {}) {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n\n  static get properties() {\n    return {\n      dataHost: Object,\n\n      template: Object,\n\n      _templateInstances: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _parentPathValues: {\n        value: function() {\n          return {};\n        }\n      },\n\n      _grid: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n\n    return instance;\n  }\n\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n\n        forwardHostProp: function(prop, value) {\n          this._forwardParentProp(prop, value);\n\n          if (this._templateInstances) {\n            this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n          }\n        },\n\n        notifyInstanceProp: function(inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n\n          const row = Array.from(this._grid.$.items.children).filter(row => this._grid._itemsEqual(row._item, inst.item))[0];\n          if (row) {\n            Array.from(row.children).forEach(cell => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n\n      });\n    }\n  }\n\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n  }\n\n  _templateInstancesChanged(t, p) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach(keyName => {\n      for (var i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n\n}\n\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\n\nexport { GridTemplatizer as Templatizer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}