{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = superClass => class ColumnResizingMixin extends superClass {\n  /** @protected */\n  ready() {\n    super.ready();\n    const scroller = this.$.scroller;\n    addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n    // Disallow scrolling while resizing\n    scroller.addEventListener('touchmove', e => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n    // Disable contextmenu on any resize separator.\n    scroller.addEventListener('contextmenu', e => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault());\n\n    // Disable native cell focus when resizing\n    scroller.addEventListener('mousedown', e => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault());\n  }\n\n  /** @private */\n  _onHeaderTrack(e) {\n    const handle = e.target;\n    if (handle.getAttribute('part') === 'resize-handle') {\n      const cell = handle.parentElement;\n      let column = cell._column;\n      this.$.scroller.toggleAttribute('column-resizing', true);\n\n      // Get the target column to resize\n      while (column.localName === 'vaadin-grid-column-group') {\n        column = column._childColumns.slice(0).sort((a, b) => a._order - b._order).filter(column => !column.hidden).pop();\n      }\n      const isRTL = this.__isRTL;\n      const eventX = e.detail.x;\n      const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n      const targetCell = columnRowCells.find(cell => cell._column === column);\n      // Resize the target column\n      if (targetCell.offsetWidth) {\n        const style = getComputedStyle(targetCell._content);\n        const minWidth = 10 + parseInt(style.paddingLeft) + parseInt(style.paddingRight) + parseInt(style.borderLeftWidth) + parseInt(style.borderRightWidth) + parseInt(style.marginLeft) + parseInt(style.marginRight);\n        let maxWidth;\n        const cellWidth = targetCell.offsetWidth;\n        const cellRect = targetCell.getBoundingClientRect();\n\n        // For cells frozen to end, resize handle is flipped horizontally.\n        if (targetCell.hasAttribute('frozen-to-end')) {\n          maxWidth = cellWidth + (isRTL ? eventX - cellRect.right : cellRect.left - eventX);\n        } else {\n          maxWidth = cellWidth + (isRTL ? cellRect.left - eventX : eventX - cellRect.right);\n        }\n        column.width = `${Math.max(minWidth, maxWidth)}px`;\n        column.flexGrow = 0;\n      }\n      // Fix width and flex-grow for all preceding columns\n      columnRowCells.sort((a, b) => a._column._order - b._column._order).forEach((cell, index, array) => {\n        if (index < array.indexOf(targetCell)) {\n          cell._column.width = `${cell.offsetWidth}px`;\n          cell._column.flexGrow = 0;\n        }\n      });\n      const cellFrozenToEnd = this._frozenToEndCells[0];\n\n      // When handle moves below the cell frozen to end, scroll into view.\n      if (cellFrozenToEnd && this.$.table.scrollWidth > this.$.table.offsetWidth) {\n        const frozenRect = cellFrozenToEnd.getBoundingClientRect();\n        const offset = eventX - (isRTL ? frozenRect.right : frozenRect.left);\n        if (isRTL && offset <= 0 || !isRTL && offset >= 0) {\n          this.$.table.scrollLeft += offset;\n        }\n      }\n      if (e.detail.state === 'end') {\n        this.$.scroller.toggleAttribute('column-resizing', false);\n        this.dispatchEvent(new CustomEvent('column-resize', {\n          detail: {\n            resizedColumn: column\n          }\n        }));\n      }\n\n      // Notify resize\n      this._resizeHandler();\n    }\n  }\n\n  /**\n   * Fired when a column in the grid is resized by the user.\n   *\n   * @event column-resize\n   * @param {Object} detail\n   * @param {Object} detail.resizedColumn the column that was resized\n   */\n};","map":{"version":3,"names":["addListener","ColumnResizingMixin","superClass","ready","scroller","$","_onHeaderTrack","bind","addEventListener","e","hasAttribute","preventDefault","target","getAttribute","handle","cell","parentElement","column","_column","toggleAttribute","localName","_childColumns","slice","sort","a","b","_order","filter","hidden","pop","isRTL","__isRTL","eventX","detail","x","columnRowCells","Array","from","header","querySelectorAll","targetCell","find","offsetWidth","style","getComputedStyle","_content","minWidth","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","marginLeft","marginRight","maxWidth","cellWidth","cellRect","getBoundingClientRect","right","left","width","Math","max","flexGrow","forEach","index","array","indexOf","cellFrozenToEnd","_frozenToEndCells","table","scrollWidth","frozenRect","offset","scrollLeft","state","dispatchEvent","CustomEvent","resizedColumn","_resizeHandler"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/grid/src/vaadin-grid-column-resizing-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = (superClass) =>\n  class ColumnResizingMixin extends superClass {\n    /** @protected */\n    ready() {\n      super.ready();\n      const scroller = this.$.scroller;\n      addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n      // Disallow scrolling while resizing\n      scroller.addEventListener('touchmove', (e) => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n      // Disable contextmenu on any resize separator.\n      scroller.addEventListener(\n        'contextmenu',\n        (e) => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault(),\n      );\n\n      // Disable native cell focus when resizing\n      scroller.addEventListener(\n        'mousedown',\n        (e) => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault(),\n      );\n    }\n\n    /** @private */\n    _onHeaderTrack(e) {\n      const handle = e.target;\n      if (handle.getAttribute('part') === 'resize-handle') {\n        const cell = handle.parentElement;\n        let column = cell._column;\n\n        this.$.scroller.toggleAttribute('column-resizing', true);\n\n        // Get the target column to resize\n        while (column.localName === 'vaadin-grid-column-group') {\n          column = column._childColumns\n            .slice(0)\n            .sort((a, b) => a._order - b._order)\n            .filter((column) => !column.hidden)\n            .pop();\n        }\n\n        const isRTL = this.__isRTL;\n        const eventX = e.detail.x;\n        const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n        const targetCell = columnRowCells.find((cell) => cell._column === column);\n        // Resize the target column\n        if (targetCell.offsetWidth) {\n          const style = getComputedStyle(targetCell._content);\n          const minWidth =\n            10 +\n            parseInt(style.paddingLeft) +\n            parseInt(style.paddingRight) +\n            parseInt(style.borderLeftWidth) +\n            parseInt(style.borderRightWidth) +\n            parseInt(style.marginLeft) +\n            parseInt(style.marginRight);\n\n          let maxWidth;\n\n          const cellWidth = targetCell.offsetWidth;\n          const cellRect = targetCell.getBoundingClientRect();\n\n          // For cells frozen to end, resize handle is flipped horizontally.\n          if (targetCell.hasAttribute('frozen-to-end')) {\n            maxWidth = cellWidth + (isRTL ? eventX - cellRect.right : cellRect.left - eventX);\n          } else {\n            maxWidth = cellWidth + (isRTL ? cellRect.left - eventX : eventX - cellRect.right);\n          }\n\n          column.width = `${Math.max(minWidth, maxWidth)}px`;\n          column.flexGrow = 0;\n        }\n        // Fix width and flex-grow for all preceding columns\n        columnRowCells\n          .sort((a, b) => a._column._order - b._column._order)\n          .forEach((cell, index, array) => {\n            if (index < array.indexOf(targetCell)) {\n              cell._column.width = `${cell.offsetWidth}px`;\n              cell._column.flexGrow = 0;\n            }\n          });\n\n        const cellFrozenToEnd = this._frozenToEndCells[0];\n\n        // When handle moves below the cell frozen to end, scroll into view.\n        if (cellFrozenToEnd && this.$.table.scrollWidth > this.$.table.offsetWidth) {\n          const frozenRect = cellFrozenToEnd.getBoundingClientRect();\n          const offset = eventX - (isRTL ? frozenRect.right : frozenRect.left);\n\n          if ((isRTL && offset <= 0) || (!isRTL && offset >= 0)) {\n            this.$.table.scrollLeft += offset;\n          }\n        }\n\n        if (e.detail.state === 'end') {\n          this.$.scroller.toggleAttribute('column-resizing', false);\n          this.dispatchEvent(\n            new CustomEvent('column-resize', {\n              detail: { resizedColumn: column },\n            }),\n          );\n        }\n\n        // Notify resize\n        this._resizeHandler();\n      }\n    }\n\n    /**\n     * Fired when a column in the grid is resized by the user.\n     *\n     * @event column-resize\n     * @param {Object} detail\n     * @param {Object} detail.resizedColumn the column that was resized\n     */\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}