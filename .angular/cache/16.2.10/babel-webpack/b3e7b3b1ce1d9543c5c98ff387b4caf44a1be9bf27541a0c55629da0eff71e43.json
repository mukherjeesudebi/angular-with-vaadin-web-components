{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ActiveMixin } from '@vaadin/a11y-base/src/active-mixin.js';\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\n\n/**\n * A mixin providing common checkbox functionality.\n *\n * @polymerMixin\n * @mixes ActiveMixin\n * @mixes CheckedMixin\n * @mixes DelegateFocusMixin\n * @mixes LabelMixin\n */\nexport const CheckboxMixin = superclass => class CheckboxMixinClass extends LabelMixin(CheckedMixin(DelegateFocusMixin(ActiveMixin(superclass)))) {\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is in the indeterminate state which means\n       * it is not possible to say whether it is checked or unchecked.\n       * The state is reset once the user switches the checkbox by hand.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       *\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * The name of the checkbox.\n       *\n       * @type {string}\n       */\n      name: {\n        type: String,\n        value: ''\n      }\n    };\n  }\n\n  /** @override */\n  static get delegateProps() {\n    return [...super.delegateProps, 'indeterminate'];\n  }\n\n  /** @override */\n  static get delegateAttrs() {\n    return [...super.delegateAttrs, 'name'];\n  }\n  constructor() {\n    super();\n    this._setType('checkbox');\n\n    // Set the string \"on\" as the default value for the checkbox following the HTML specification:\n    // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    this.value = 'on';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addController(new InputController(this, input => {\n      this._setInputElement(input);\n      this._setFocusElement(input);\n      this.stateTarget = input;\n      this.ariaTarget = input;\n    }));\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n  }\n\n  /**\n   * Override method inherited from `ActiveMixin` to prevent setting\n   * `active` attribute when clicking a link placed inside the label.\n   *\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldSetActive(event) {\n    if (event.target.localName === 'a') {\n      return false;\n    }\n    return super._shouldSetActive(event);\n  }\n\n  /**\n   * Override method inherited from `CheckedMixin` to reset\n   * `indeterminate` state checkbox is toggled by the user.\n   *\n   * @param {boolean} checked\n   * @protected\n   * @override\n   */\n  _toggleChecked(checked) {\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n    super._toggleChecked(checked);\n  }\n};","map":{"version":3,"names":["ActiveMixin","DelegateFocusMixin","CheckedMixin","InputController","LabelMixin","LabelledInputController","CheckboxMixin","superclass","CheckboxMixinClass","properties","indeterminate","type","Boolean","notify","value","reflectToAttribute","name","String","delegateProps","delegateAttrs","constructor","_setType","ready","addController","input","_setInputElement","_setFocusElement","stateTarget","ariaTarget","inputElement","_labelController","_shouldSetActive","event","target","localName","_toggleChecked","checked"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/checkbox/src/vaadin-checkbox-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ActiveMixin } from '@vaadin/a11y-base/src/active-mixin.js';\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\n\n/**\n * A mixin providing common checkbox functionality.\n *\n * @polymerMixin\n * @mixes ActiveMixin\n * @mixes CheckedMixin\n * @mixes DelegateFocusMixin\n * @mixes LabelMixin\n */\nexport const CheckboxMixin = (superclass) =>\n  class CheckboxMixinClass extends LabelMixin(CheckedMixin(DelegateFocusMixin(ActiveMixin(superclass)))) {\n    static get properties() {\n      return {\n        /**\n         * True if the checkbox is in the indeterminate state which means\n         * it is not possible to say whether it is checked or unchecked.\n         * The state is reset once the user switches the checkbox by hand.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n         *\n         * @type {boolean}\n         */\n        indeterminate: {\n          type: Boolean,\n          notify: true,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The name of the checkbox.\n         *\n         * @type {string}\n         */\n        name: {\n          type: String,\n          value: '',\n        },\n      };\n    }\n\n    /** @override */\n    static get delegateProps() {\n      return [...super.delegateProps, 'indeterminate'];\n    }\n\n    /** @override */\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'name'];\n    }\n\n    constructor() {\n      super();\n\n      this._setType('checkbox');\n\n      // Set the string \"on\" as the default value for the checkbox following the HTML specification:\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      this.value = 'on';\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(\n        new InputController(this, (input) => {\n          this._setInputElement(input);\n          this._setFocusElement(input);\n          this.stateTarget = input;\n          this.ariaTarget = input;\n        }),\n      );\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n    }\n\n    /**\n     * Override method inherited from `ActiveMixin` to prevent setting\n     * `active` attribute when clicking a link placed inside the label.\n     *\n     * @param {Event} event\n     * @return {boolean}\n     * @protected\n     * @override\n     */\n    _shouldSetActive(event) {\n      if (event.target.localName === 'a') {\n        return false;\n      }\n\n      return super._shouldSetActive(event);\n    }\n\n    /**\n     * Override method inherited from `CheckedMixin` to reset\n     * `indeterminate` state checkbox is toggled by the user.\n     *\n     * @param {boolean} checked\n     * @protected\n     * @override\n     */\n    _toggleChecked(checked) {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n      }\n\n      super._toggleChecked(checked);\n    }\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,uCAAuC;AACnE,SAASC,kBAAkB,QAAQ,+CAA+C;AAClF,SAASC,YAAY,QAAQ,yCAAyC;AACtE,SAASC,eAAe,QAAQ,4CAA4C;AAC5E,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,uBAAuB,QAAQ,qDAAqD;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAIC,UAAU,IACtC,MAAMC,kBAAkB,SAASJ,UAAU,CAACF,YAAY,CAACD,kBAAkB,CAACD,WAAW,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACrG,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACQC,aAAa,EAAE;QACbC,IAAI,EAAEC,OAAO;QACbC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE,KAAK;QACZC,kBAAkB,EAAE;MACtB,CAAC;MAED;AACR;AACA;AACA;AACA;MACQC,IAAI,EAAE;QACJL,IAAI,EAAEM,MAAM;QACZH,KAAK,EAAE;MACT;IACF,CAAC;EACH;;EAEA;EACA,WAAWI,aAAaA,CAAA,EAAG;IACzB,OAAO,CAAC,GAAG,KAAK,CAACA,aAAa,EAAE,eAAe,CAAC;EAClD;;EAEA;EACA,WAAWC,aAAaA,CAAA,EAAG;IACzB,OAAO,CAAC,GAAG,KAAK,CAACA,aAAa,EAAE,MAAM,CAAC;EACzC;EAEAC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC;;IAEzB;IACA;IACA,IAAI,CAACP,KAAK,GAAG,IAAI;EACnB;;EAEA;EACAQ,KAAKA,CAAA,EAAG;IACN,KAAK,CAACA,KAAK,CAAC,CAAC;IAEb,IAAI,CAACC,aAAa,CAChB,IAAIpB,eAAe,CAAC,IAAI,EAAGqB,KAAK,IAAK;MACnC,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAAC;MAC5B,IAAI,CAACE,gBAAgB,CAACF,KAAK,CAAC;MAC5B,IAAI,CAACG,WAAW,GAAGH,KAAK;MACxB,IAAI,CAACI,UAAU,GAAGJ,KAAK;IACzB,CAAC,CACH,CAAC;IACD,IAAI,CAACD,aAAa,CAAC,IAAIlB,uBAAuB,CAAC,IAAI,CAACwB,YAAY,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3F;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,gBAAgBA,CAACC,KAAK,EAAE;IACtB,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,KAAK,GAAG,EAAE;MAClC,OAAO,KAAK;IACd;IAEA,OAAO,KAAK,CAACH,gBAAgB,CAACC,KAAK,CAAC;EACtC;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,cAAcA,CAACC,OAAO,EAAE;IACtB,IAAI,IAAI,CAAC1B,aAAa,EAAE;MACtB,IAAI,CAACA,aAAa,GAAG,KAAK;IAC5B;IAEA,KAAK,CAACyB,cAAc,CAACC,OAAO,CAAC;EAC/B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}