{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = u.href === 'http://a/c%20d';\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return new URL(url, baseURI).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function (m, pre, url, post) {\n    return pre + '\\'' + resolveUrl(url.replace(/[\"']/g, ''), baseURI) + '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}","map":{"version":3,"names":["CSS_URL_RX","ABS_URL","workingURL","resolveDoc","resolveUrl","url","baseURI","test","undefined","u","URL","pathname","href","e","document","window","location","implementation","createHTMLDocument","base","createElement","head","appendChild","anchor","body","resolveCss","cssText","replace","m","pre","post","pathFromUrl","substring","lastIndexOf"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@polymer/polymer/lib/utils/resolve-url.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return (new URL(url, baseURI)).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAW;AAElB,IAAIA,UAAU,GAAG,qBAAqB;AACtC,IAAIC,OAAO,GAAG,8BAA8B;AAC5C,IAAIC,UAAU;AACd,IAAIC,UAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACvC,IAAID,GAAG,IAAIJ,OAAO,CAACM,IAAI,CAACF,GAAG,CAAC,EAAE;IAC5B,OAAOA,GAAG;EACZ;EACA,IAAIA,GAAG,KAAK,IAAI,EAAE;IAChB,OAAOA,GAAG;EACZ;EACA;EACA,IAAIH,UAAU,KAAKM,SAAS,EAAE;IAC5BN,UAAU,GAAG,KAAK;IAClB,IAAI;MACF,MAAMO,CAAC,GAAG,IAAIC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC;MAClCD,CAAC,CAACE,QAAQ,GAAG,OAAO;MACpBT,UAAU,GAAIO,CAAC,CAACG,IAAI,KAAK,gBAAiB;IAC5C,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;IAAA;EAEJ;EACA,IAAI,CAACP,OAAO,EAAE;IACZA,OAAO,GAAGQ,QAAQ,CAACR,OAAO,IAAIS,MAAM,CAACC,QAAQ,CAACJ,IAAI;EACpD;EACA,IAAIV,UAAU,EAAE;IACd,IAAI;MACF,OAAQ,IAAIQ,GAAG,CAACL,GAAG,EAAEC,OAAO,CAAC,CAAEM,IAAI;IACrC,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;MACA,OAAOR,GAAG;IACZ;EACF;EACA;EACA,IAAI,CAACF,UAAU,EAAE;IACfA,UAAU,GAAGW,QAAQ,CAACG,cAAc,CAACC,kBAAkB,CAAC,MAAM,CAAC;IAC/Df,UAAU,CAACgB,IAAI,GAAGhB,UAAU,CAACiB,aAAa,CAAC,MAAM,CAAC;IAClDjB,UAAU,CAACkB,IAAI,CAACC,WAAW,CAACnB,UAAU,CAACgB,IAAI,CAAC;IAC5ChB,UAAU,CAACoB,MAAM,GAAGpB,UAAU,CAACiB,aAAa,CAAC,GAAG,CAAC;IACjDjB,UAAU,CAACqB,IAAI,CAACF,WAAW,CAACnB,UAAU,CAACoB,MAAM,CAAC;EAChD;EACApB,UAAU,CAACgB,IAAI,CAACP,IAAI,GAAGN,OAAO;EAC9BH,UAAU,CAACoB,MAAM,CAACX,IAAI,GAAGP,GAAG;EAC5B,OAAOF,UAAU,CAACoB,MAAM,CAACX,IAAI,IAAIP,GAAG;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASoB,UAAUA,CAACC,OAAO,EAAEpB,OAAO,EAAE;EAC3C,OAAOoB,OAAO,CAACC,OAAO,CAAC3B,UAAU,EAAE,UAAS4B,CAAC,EAAEC,GAAG,EAAExB,GAAG,EAAEyB,IAAI,EAAE;IAC7D,OAAOD,GAAG,GAAG,IAAI,GACfzB,UAAU,CAACC,GAAG,CAACsB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAErB,OAAO,CAAC,GAC7C,IAAI,GAAGwB,IAAI;EACf,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAC1B,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAAC2B,SAAS,CAAC,CAAC,EAAE3B,GAAG,CAAC4B,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}