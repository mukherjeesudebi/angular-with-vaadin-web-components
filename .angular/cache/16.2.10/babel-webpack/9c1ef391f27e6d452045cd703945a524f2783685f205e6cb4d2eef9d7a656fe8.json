{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { microTask, timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { updateCellState } from './vaadin-grid-helpers.js';\nfunction arrayEquals(arr1, arr2) {\n  if (!arr1 || !arr2 || arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, l = arr1.length; i < l; i++) {\n    // Check if we have nested arrays\n    if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n      // Recurse into the nested arrays\n      if (!arrayEquals(arr1[i], arr2[i])) {\n        return false;\n      }\n    } else if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = superClass => class DynamicColumnsMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      _columnTree: Object\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._addNodeObserver();\n  }\n\n  /** @private */\n  _hasColumnGroups(columns) {\n    return columns.some(column => column.localName === 'vaadin-grid-column-group');\n  }\n\n  /**\n   * @param {!GridColumnGroup} el\n   * @return {!Array<!GridColumn>}\n   * @protected\n   */\n  _getChildColumns(el) {\n    return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n  }\n\n  /** @private */\n  _flattenColumnGroups(columns) {\n    return columns.map(col => {\n      if (col.localName === 'vaadin-grid-column-group') {\n        return this._getChildColumns(col);\n      }\n      return [col];\n    }).reduce((prev, curr) => {\n      return prev.concat(curr);\n    }, []);\n  }\n\n  /** @private */\n  _getColumnTree() {\n    const rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n    const columnTree = [rootColumns];\n    let c = rootColumns;\n    while (this._hasColumnGroups(c)) {\n      c = this._flattenColumnGroups(c);\n      columnTree.push(c);\n    }\n    return columnTree;\n  }\n\n  /** @protected */\n  _debounceUpdateColumnTree() {\n    this.__updateColumnTreeDebouncer = Debouncer.debounce(this.__updateColumnTreeDebouncer, microTask, () => this._updateColumnTree());\n  }\n\n  /** @protected */\n  _updateColumnTree() {\n    const columnTree = this._getColumnTree();\n    if (!arrayEquals(columnTree, this._columnTree)) {\n      this._columnTree = columnTree;\n    }\n  }\n\n  /** @private */\n  _addNodeObserver() {\n    this._observer = new FlattenedNodesObserver(this, info => {\n      const hasColumnElements = nodeCollection => nodeCollection.filter(this._isColumnElement).length > 0;\n      if (hasColumnElements(info.addedNodes) || hasColumnElements(info.removedNodes)) {\n        const allRemovedCells = info.removedNodes.flatMap(c => c._allCells);\n        const filterNotConnected = element => allRemovedCells.filter(cell => cell && cell._content.contains(element)).length;\n        this.__removeSorters(this._sorters.filter(filterNotConnected));\n        this.__removeFilters(this._filters.filter(filterNotConnected));\n        this._debounceUpdateColumnTree();\n      }\n      this._debouncerCheckImports = Debouncer.debounce(this._debouncerCheckImports, timeOut.after(2000), this._checkImports.bind(this));\n      this._ensureFirstPageLoaded();\n    });\n  }\n\n  /** @protected */\n  _checkImports() {\n    ['vaadin-grid-column-group', 'vaadin-grid-filter', 'vaadin-grid-filter-column', 'vaadin-grid-tree-toggle', 'vaadin-grid-selection-column', 'vaadin-grid-sort-column', 'vaadin-grid-sorter'].forEach(elementName => {\n      const element = this.querySelector(elementName);\n      if (element && !(element instanceof PolymerElement)) {\n        console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n      }\n    });\n  }\n\n  /** @protected */\n  _updateFirstAndLastColumn() {\n    Array.from(this.shadowRoot.querySelectorAll('tr')).forEach(row => this._updateFirstAndLastColumnForRow(row));\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @protected\n   */\n  _updateFirstAndLastColumnForRow(row) {\n    Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])')).sort((a, b) => {\n      return a._column._order - b._column._order;\n    }).forEach((cell, cellIndex, children) => {\n      updateCellState(cell, 'first-column', cellIndex === 0);\n      updateCellState(cell, 'last-column', cellIndex === children.length - 1);\n    });\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _isColumnElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/u.test(node.localName);\n  }\n};","map":{"version":3,"names":["FlattenedNodesObserver","PolymerElement","microTask","timeOut","Debouncer","updateCellState","arrayEquals","arr1","arr2","length","i","l","Array","DynamicColumnsMixin","superClass","properties","_columnTree","Object","ready","_addNodeObserver","_hasColumnGroups","columns","some","column","localName","_getChildColumns","el","getFlattenedNodes","filter","_isColumnElement","_flattenColumnGroups","map","col","reduce","prev","curr","concat","_getColumnTree","rootColumns","columnTree","c","push","_debounceUpdateColumnTree","__updateColumnTreeDebouncer","debounce","_updateColumnTree","_observer","info","hasColumnElements","nodeCollection","addedNodes","removedNodes","allRemovedCells","flatMap","_allCells","filterNotConnected","element","cell","_content","contains","__removeSorters","_sorters","__removeFilters","_filters","_debouncerCheckImports","after","_checkImports","bind","_ensureFirstPageLoaded","forEach","elementName","querySelector","console","warn","_updateFirstAndLastColumn","from","shadowRoot","querySelectorAll","row","_updateFirstAndLastColumnForRow","sort","a","b","_column","_order","cellIndex","children","node","nodeType","Node","ELEMENT_NODE","test"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/grid/src/vaadin-grid-dynamic-columns-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { microTask, timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { updateCellState } from './vaadin-grid-helpers.js';\n\nfunction arrayEquals(arr1, arr2) {\n  if (!arr1 || !arr2 || arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0, l = arr1.length; i < l; i++) {\n    // Check if we have nested arrays\n    if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n      // Recurse into the nested arrays\n      if (!arrayEquals(arr1[i], arr2[i])) {\n        return false;\n      }\n    } else if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = (superClass) =>\n  class DynamicColumnsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * @protected\n         */\n        _columnTree: Object,\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._addNodeObserver();\n    }\n\n    /** @private */\n    _hasColumnGroups(columns) {\n      return columns.some((column) => column.localName === 'vaadin-grid-column-group');\n    }\n\n    /**\n     * @param {!GridColumnGroup} el\n     * @return {!Array<!GridColumn>}\n     * @protected\n     */\n    _getChildColumns(el) {\n      return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n    }\n\n    /** @private */\n    _flattenColumnGroups(columns) {\n      return columns\n        .map((col) => {\n          if (col.localName === 'vaadin-grid-column-group') {\n            return this._getChildColumns(col);\n          }\n          return [col];\n        })\n        .reduce((prev, curr) => {\n          return prev.concat(curr);\n        }, []);\n    }\n\n    /** @private */\n    _getColumnTree() {\n      const rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n      const columnTree = [rootColumns];\n\n      let c = rootColumns;\n      while (this._hasColumnGroups(c)) {\n        c = this._flattenColumnGroups(c);\n        columnTree.push(c);\n      }\n\n      return columnTree;\n    }\n\n    /** @protected */\n    _debounceUpdateColumnTree() {\n      this.__updateColumnTreeDebouncer = Debouncer.debounce(this.__updateColumnTreeDebouncer, microTask, () =>\n        this._updateColumnTree(),\n      );\n    }\n\n    /** @protected */\n    _updateColumnTree() {\n      const columnTree = this._getColumnTree();\n      if (!arrayEquals(columnTree, this._columnTree)) {\n        this._columnTree = columnTree;\n      }\n    }\n\n    /** @private */\n    _addNodeObserver() {\n      this._observer = new FlattenedNodesObserver(this, (info) => {\n        const hasColumnElements = (nodeCollection) => nodeCollection.filter(this._isColumnElement).length > 0;\n        if (hasColumnElements(info.addedNodes) || hasColumnElements(info.removedNodes)) {\n          const allRemovedCells = info.removedNodes.flatMap((c) => c._allCells);\n          const filterNotConnected = (element) =>\n            allRemovedCells.filter((cell) => cell && cell._content.contains(element)).length;\n\n          this.__removeSorters(this._sorters.filter(filterNotConnected));\n          this.__removeFilters(this._filters.filter(filterNotConnected));\n          this._debounceUpdateColumnTree();\n        }\n\n        this._debouncerCheckImports = Debouncer.debounce(\n          this._debouncerCheckImports,\n          timeOut.after(2000),\n          this._checkImports.bind(this),\n        );\n\n        this._ensureFirstPageLoaded();\n      });\n    }\n\n    /** @protected */\n    _checkImports() {\n      [\n        'vaadin-grid-column-group',\n        'vaadin-grid-filter',\n        'vaadin-grid-filter-column',\n        'vaadin-grid-tree-toggle',\n        'vaadin-grid-selection-column',\n        'vaadin-grid-sort-column',\n        'vaadin-grid-sorter',\n      ].forEach((elementName) => {\n        const element = this.querySelector(elementName);\n        if (element && !(element instanceof PolymerElement)) {\n          console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n        }\n      });\n    }\n\n    /** @protected */\n    _updateFirstAndLastColumn() {\n      Array.from(this.shadowRoot.querySelectorAll('tr')).forEach((row) => this._updateFirstAndLastColumnForRow(row));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _updateFirstAndLastColumnForRow(row) {\n      Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n        .sort((a, b) => {\n          return a._column._order - b._column._order;\n        })\n        .forEach((cell, cellIndex, children) => {\n          updateCellState(cell, 'first-column', cellIndex === 0);\n          updateCellState(cell, 'last-column', cellIndex === children.length - 1);\n        });\n    }\n\n    /**\n     * @param {!Node} node\n     * @return {boolean}\n     * @protected\n     */\n    _isColumnElement(node) {\n      return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/u.test(node.localName);\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}