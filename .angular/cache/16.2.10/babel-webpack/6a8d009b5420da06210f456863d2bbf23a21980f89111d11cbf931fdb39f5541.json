{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-text-field-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-flex;\n        outline: none;\n      }\n\n      :host::before {\n        content: \"\\\\2003\";\n        width: 0;\n        display: inline-block;\n        /* Size and position this element on the same vertical position as the input-field element\n           to make vertical align for the host element work as expected */\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      .vaadin-text-field-container,\n      .vaadin-text-area-container {\n        display: flex;\n        flex-direction: column;\n        min-width: 100%;\n        max-width: 100%;\n        width: var(--vaadin-text-field-default-width, 12em);\n      }\n\n      [part=\"label\"]:empty {\n        display: none;\n      }\n\n      [part=\"input-field\"] {\n        display: flex;\n        align-items: center;\n        flex: auto;\n      }\n\n      .vaadin-text-field-container [part=\"input-field\"] {\n        flex-grow: 0;\n      }\n\n      /* Reset the native input styles */\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea) {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        outline: none;\n        margin: 0;\n        padding: 0;\n        border: 0;\n        border-radius: 0;\n        min-width: 0;\n        font: inherit;\n        font-size: 1em;\n        line-height: normal;\n        color: inherit;\n        background-color: transparent;\n        /* Disable default invalid style in Firefox */\n        box-shadow: none;\n      }\n\n      [part=\"input-field\"] ::slotted(*) {\n        flex: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea),\n      /* Slotted by vaadin-select-text-field */\n      [part=\"input-field\"] ::slotted([part=\"value\"]) {\n        flex: auto;\n        white-space: nowrap;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n      }\n\n      [part=\"input-field\"] ::slotted(textarea) {\n        resize: none;\n      }\n\n      [part=\"value\"]::-ms-clear,\n      [part=\"input-field\"] ::slotted(input)::-ms-clear {\n        display: none;\n      }\n\n      [part=\"clear-button\"] {\n        cursor: default;\n      }\n\n      [part=\"clear-button\"]::before {\n        content: \"âœ•\";\n      }\n    </style>\n  </template>\n</dom-module>`;\ndocument.head.appendChild($_documentContainer.content);\nconst HOST_PROPS = {\n  default: ['list', 'autofocus', 'pattern', 'autocapitalize', 'autocorrect', 'maxlength', 'minlength', 'name', 'placeholder', 'autocomplete', 'title'],\n  accessible: ['disabled', 'readonly', 'required', 'invalid']\n};\nconst PROP_TYPE = {\n  DEFAULT: 'default',\n  ACCESSIBLE: 'accessible'\n};\n\n/**\n * @polymerMixin\n * @mixes Vaadin.ControlStateMixin\n */\nexport const TextFieldMixin = subclass => class VaadinTextFieldMixin extends ControlStateMixin(subclass) {\n  static get properties() {\n    return {\n      /**\n       * Whether the value of the control can be automatically completed by the browser.\n       * List of available options at:\n       * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n       */\n      autocomplete: {\n        type: String\n      },\n      /**\n       * This is a property supported by Safari that is used to control whether\n       * autocorrection should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * on: Enable autocorrection.\n       * off: Disable autocorrection.\n       */\n      autocorrect: {\n        type: String\n      },\n      /**\n       * This is a property supported by Safari and Chrome that is used to control whether\n       * autocapitalization should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * characters: Characters capitalization.\n       * words: Words capitalization.\n       * sentences: Sentences capitalization.\n       * none: No capitalization.\n       */\n      autocapitalize: {\n        type: String\n      },\n      /**\n       * Specify that the value should be automatically selected when the field gains focus.\n       */\n      autoselect: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to true to display the clear icon which clears the input.\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Error to show when the input value is invalid.\n       */\n      errorMessage: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Object with translated strings used for localization. Has\n       * the following structure and default values:\n       *\n       * ```\n       * {\n       *   // Translation of the clear icon button accessible label\n       *   clear: 'Clear'\n       * }\n       * ```\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            clear: 'Clear'\n          };\n        }\n      },\n      /**\n       * String used for the label element.\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n      /**\n       * Maximum number of characters (in Unicode code points) that the user can enter.\n       */\n      maxlength: {\n        type: Number\n      },\n      /**\n       * Minimum number of characters (in Unicode code points) that the user can enter.\n       */\n      minlength: {\n        type: Number\n      },\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: {\n        type: String\n      },\n      /**\n       * A hint to the user of what can be entered in the control.\n       */\n      placeholder: {\n        type: String\n      },\n      /**\n       * This attribute indicates that the user cannot modify the value of the control.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * The initial value of the control.\n       * It can be used for two-way data binding.\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true\n      },\n      /**\n       * This property is set to true when the control value is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n      /**\n       * Specifies that the text field has value.\n       */\n      hasValue: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * When set to true, user is prevented from typing a value that\n       * conflicts with the given `pattern`.\n       */\n      preventInvalidInput: {\n        type: Boolean\n      },\n      _labelId: {\n        type: String\n      },\n      _errorId: {\n        type: String\n      }\n    };\n  }\n  static get observers() {\n    return ['_stateChanged(disabled, readonly, clearButtonVisible, hasValue)', '_hostPropsChanged(' + HOST_PROPS.default.join(', ') + ')', '_hostAccessiblePropsChanged(' + HOST_PROPS.accessible.join(', ') + ')', '_getActiveErrorId(invalid, errorMessage, _errorId)', '_getActiveLabelId(label, _labelId)', '__observeOffsetHeight(errorMessage, invalid, label)'];\n  }\n  get focusElement() {\n    if (!this.shadowRoot) {\n      return;\n    }\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    if (slotted) {\n      return slotted;\n    }\n    return this.shadowRoot.querySelector('[part=\"value\"]');\n  }\n\n  /**\n   * @private\n   */\n  get inputElement() {\n    return this.focusElement;\n  }\n  get _slottedTagName() {\n    return 'input';\n  }\n  _onInput(e) {\n    if (this.__preventInput) {\n      e.stopImmediatePropagation();\n      this.__preventInput = false;\n      return;\n    }\n    if (this.preventInvalidInput) {\n      const input = this.inputElement;\n      if (input.value.length > 0 && !this.checkValidity()) {\n        input.value = this.value || '';\n        // add input-prevented attribute for 200ms\n        this.setAttribute('input-prevented', '');\n        this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {\n          this.removeAttribute('input-prevented');\n        });\n        return;\n      }\n    }\n    if (!e.__fromClearButton) {\n      this.__userInput = true;\n    }\n    this.value = e.target.value;\n  }\n\n  // NOTE(yuriy): Workaround needed for IE11 and Edge for proper displaying\n  // of the clear button instead of setting display property for it depending on state.\n  _stateChanged(disabled, readonly, clearButtonVisible, hasValue) {\n    if (!disabled && !readonly && clearButtonVisible && hasValue) {\n      this.$.clearButton.removeAttribute('hidden');\n    } else {\n      this.$.clearButton.setAttribute('hidden', true);\n    }\n  }\n  _onChange(e) {\n    if (this._valueClearing) {\n      return;\n    }\n\n    // In the Shadow DOM, the `change` event is not leaked into the\n    // ancestor tree, so we must do this manually.\n    const changeEvent = new CustomEvent('change', {\n      detail: {\n        sourceEvent: e\n      },\n      bubbles: e.bubbles,\n      cancelable: e.cancelable\n    });\n    this.dispatchEvent(changeEvent);\n  }\n  _valueChanged(newVal, oldVal) {\n    // setting initial value to empty string, skip validation\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n    if (newVal !== '' && newVal != null) {\n      this.hasValue = true;\n    } else {\n      this.hasValue = false;\n    }\n    if (this.__userInput) {\n      this.__userInput = false;\n      return;\n    } else if (newVal !== undefined) {\n      this.inputElement.value = newVal;\n    } else {\n      this.value = this.inputElement.value = '';\n    }\n    if (this.invalid) {\n      this.validate();\n    }\n  }\n  _labelChanged(label) {\n    if (label !== '' && label != null) {\n      this.setAttribute('has-label', '');\n    } else {\n      this.removeAttribute('has-label');\n    }\n  }\n  _onSlotChange() {\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    if (this.value) {\n      this.inputElement.value = this.value;\n      this.validate();\n    }\n    if (slotted && !this._slottedInput) {\n      this._validateSlottedValue(slotted);\n      this._addInputListeners(slotted);\n      this._addIEListeners(slotted);\n      this._slottedInput = slotted;\n    } else if (!slotted && this._slottedInput) {\n      this._removeInputListeners(this._slottedInput);\n      this._removeIEListeners(this._slottedInput);\n      this._slottedInput = undefined;\n    }\n    Object.keys(PROP_TYPE).map(key => PROP_TYPE[key]).forEach(type => this._propagateHostAttributes(HOST_PROPS[type].map(attr => this[attr]), type));\n  }\n  _hostPropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.DEFAULT);\n  }\n  _hostAccessiblePropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.ACCESSIBLE);\n  }\n  _validateSlottedValue(slotted) {\n    if (slotted.value !== this.value) {\n      console.warn('Please define value on the vaadin-text-field component!');\n      slotted.value = '';\n    }\n  }\n  _propagateHostAttributes(attributesValues, type) {\n    const input = this.inputElement;\n    const attributeNames = HOST_PROPS[type];\n    if (type === 'accessible') {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n        this._setOrToggleAttribute(`aria-${attr}`, attributesValues[index], input);\n      });\n    } else {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n      });\n    }\n  }\n  _setOrToggleAttribute(name, value, node) {\n    if (!name || !node) {\n      return;\n    }\n    if (value) {\n      node.setAttribute(name, typeof value === 'boolean' ? '' : value);\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   * @returns {boolean}\n   */\n  checkValidity() {\n    if (this.required || this.pattern || this.maxlength || this.minlength) {\n      return this.inputElement.checkValidity();\n    } else {\n      return !this.invalid;\n    }\n  }\n  _addInputListeners(node) {\n    node.addEventListener('input', this._boundOnInput);\n    node.addEventListener('change', this._boundOnChange);\n    node.addEventListener('blur', this._boundOnBlur);\n    node.addEventListener('focus', this._boundOnFocus);\n  }\n  _removeInputListeners(node) {\n    node.removeEventListener('input', this._boundOnInput);\n    node.removeEventListener('change', this._boundOnChange);\n    node.removeEventListener('blur', this._boundOnBlur);\n    node.removeEventListener('focus', this._boundOnFocus);\n  }\n  ready() {\n    super.ready();\n    this._boundOnInput = this._onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n    this._boundOnBlur = this._onBlur.bind(this);\n    this._boundOnFocus = this._onFocus.bind(this);\n    const defaultInput = this.shadowRoot.querySelector('[part=\"value\"]');\n    this._slottedInput = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    this._addInputListeners(defaultInput);\n    this._addIEListeners(defaultInput);\n    if (this._slottedInput) {\n      this._addIEListeners(this._slottedInput);\n      this._addInputListeners(this._slottedInput);\n    }\n    this.shadowRoot.querySelector('[name=\"input\"], [name=\"textarea\"]').addEventListener('slotchange', this._onSlotChange.bind(this));\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss)) {\n      this.updateStyles();\n    }\n    this.$.clearButton.addEventListener('mousedown', () => this._valueClearing = true);\n    this.$.clearButton.addEventListener('mouseleave', () => this._valueClearing = false);\n    this.$.clearButton.addEventListener('click', this._onClearButtonClick.bind(this));\n    this.addEventListener('keydown', this._onKeyDown.bind(this));\n    var uniqueId = TextFieldMixin._uniqueId = 1 + TextFieldMixin._uniqueId || 0;\n    this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n    this._labelId = `${this.constructor.is}-label-${uniqueId}`;\n\n    // Lumo theme defines a max-height transition for the \"error-message\"\n    // part on invalid state change.\n    this.shadowRoot.querySelector('[part=\"error-message\"]').addEventListener('transitionend', () => {\n      this.__observeOffsetHeight();\n    });\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   * `<iron-form>` uses this to check the validity or all its elements.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n  clear() {\n    this.value = '';\n  }\n  _onBlur() {\n    this.validate();\n  }\n  _onFocus() {\n    if (this.autoselect) {\n      this.inputElement.select();\n      // iOS 9 workaround: https://stackoverflow.com/a/7436574\n      setTimeout(() => {\n        this.inputElement.setSelectionRange(0, 9999);\n      });\n    }\n  }\n  _onClearButtonClick(e) {\n    e.preventDefault();\n    // NOTE(yuriy): This line won't affect focus on the host. Cannot be properly tested.\n    this.inputElement.focus();\n    this.clear();\n    this._valueClearing = false;\n    if (navigator.userAgent.match(/Trident/)) {\n      // Disable IE input\" event prevention here, we want the input event from\n      // below to propagate normally.\n      this.__preventInput = false;\n    }\n    const inputEvent = new Event('input', {\n      bubbles: true,\n      composed: true\n    });\n    inputEvent.__fromClearButton = true;\n    const changeEvent = new Event('change', {\n      bubbles: !this._slottedInput\n    });\n    changeEvent.__fromClearButton = true;\n    this.inputElement.dispatchEvent(inputEvent);\n    this.inputElement.dispatchEvent(changeEvent);\n  }\n  _onKeyDown(e) {\n    if (e.keyCode === 27 && this.clearButtonVisible) {\n      const dispatchChange = !!this.value;\n      this.clear();\n      dispatchChange && this.inputElement.dispatchEvent(new Event('change', {\n        bubbles: !this._slottedInput\n      }));\n    }\n  }\n  _addIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      // IE11 dispatches `input` event in following cases:\n      // - focus or blur, when placeholder attribute is set\n      // - placeholder attribute value changed\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/101220/\n      this._shouldPreventInput = () => {\n        this.__preventInput = true;\n        requestAnimationFrame(() => {\n          this.__preventInput = false;\n        });\n      };\n      node.addEventListener('focusin', this._shouldPreventInput);\n      node.addEventListener('focusout', this._shouldPreventInput);\n      this._createPropertyObserver('placeholder', this._shouldPreventInput);\n    }\n  }\n  _removeIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      node.removeEventListener('focusin', this._shouldPreventInput);\n      node.removeEventListener('focusout', this._shouldPreventInput);\n    }\n  }\n  _getActiveErrorId(invalid, errorMessage, errorId) {\n    this._setOrToggleAttribute('aria-describedby', errorMessage && invalid ? errorId : undefined, this.inputElement);\n  }\n  _getActiveLabelId(label, labelId) {\n    this._setOrToggleAttribute('aria-labelledby', label ? labelId : undefined, this.inputElement);\n  }\n  _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n    return (!(errorMessage && invalid ? errorId : undefined)).toString();\n  }\n  _dispatchIronResizeEventIfNeeded(sizePropertyName, value) {\n    const previousSizePropertyName = '__previous' + sizePropertyName;\n    if (this[previousSizePropertyName] !== undefined && this[previousSizePropertyName] !== value) {\n      this.dispatchEvent(new CustomEvent('iron-resize', {\n        bubbles: true\n      }));\n    }\n    this[previousSizePropertyName] = value;\n  }\n  __observeOffsetHeight() {\n    this._dispatchIronResizeEventIfNeeded('Height', this.offsetHeight);\n  }\n\n  /**\n   * @protected\n   */\n  attributeChangedCallback(prop, oldVal, newVal) {\n    super.attributeChangedCallback(prop, oldVal, newVal);\n    // Needed until Edge has CSS Custom Properties (present in Edge Preview)\n    /* istanbul ignore if */\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss) && /^(focused|focus-ring|invalid|disabled|placeholder|has-value)$/.test(prop)) {\n      this.updateStyles();\n    }\n\n    // Safari has an issue with repainting shadow root element styles when a host attribute changes.\n    // Need this workaround (toggle any inline css property on and off) until the issue gets fixed.\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    /* istanbul ignore if */\n    if (isSafari && this.root) {\n      const WEBKIT_PROPERTY = '-webkit-backface-visibility';\n      this.root.querySelectorAll('*').forEach(el => {\n        el.style[WEBKIT_PROPERTY] = 'visible';\n        el.style[WEBKIT_PROPERTY] = '';\n      });\n    }\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n\n  /**\n   * Fired when the value is changed by the user: on every typing keystroke,\n   * and the value is cleared using the clear button.\n   *\n   * @event input\n   */\n\n  /**\n   * Fired when the size of the element changes.\n   *\n   * @event iron-resize\n   */\n};","map":{"version":3,"names":["ControlStateMixin","timeOut","Debouncer","$_documentContainer","document","createElement","innerHTML","head","appendChild","content","HOST_PROPS","default","accessible","PROP_TYPE","DEFAULT","ACCESSIBLE","TextFieldMixin","subclass","VaadinTextFieldMixin","properties","autocomplete","type","String","autocorrect","autocapitalize","autoselect","Boolean","value","clearButtonVisible","errorMessage","i18n","Object","clear","label","observer","maxlength","Number","minlength","name","placeholder","readonly","reflectToAttribute","required","notify","invalid","hasValue","preventInvalidInput","_labelId","_errorId","observers","join","focusElement","shadowRoot","slotted","querySelector","_slottedTagName","inputElement","_onInput","e","__preventInput","stopImmediatePropagation","input","length","checkValidity","setAttribute","_inputDebouncer","debounce","after","removeAttribute","__fromClearButton","__userInput","target","_stateChanged","disabled","$","clearButton","_onChange","_valueClearing","changeEvent","CustomEvent","detail","sourceEvent","bubbles","cancelable","dispatchEvent","_valueChanged","newVal","oldVal","undefined","validate","_labelChanged","_onSlotChange","_slottedInput","_validateSlottedValue","_addInputListeners","_addIEListeners","_removeInputListeners","_removeIEListeners","keys","map","key","forEach","_propagateHostAttributes","attr","_hostPropsChanged","attributesValues","_hostAccessiblePropsChanged","console","warn","attributeNames","index","_setOrToggleAttribute","node","pattern","addEventListener","_boundOnInput","_boundOnChange","_boundOnBlur","_boundOnFocus","removeEventListener","ready","bind","_onBlur","_onFocus","defaultInput","window","ShadyCSS","nativeCss","updateStyles","_onClearButtonClick","_onKeyDown","uniqueId","_uniqueId","constructor","is","__observeOffsetHeight","select","setTimeout","setSelectionRange","preventDefault","focus","navigator","userAgent","match","inputEvent","Event","composed","keyCode","dispatchChange","_shouldPreventInput","requestAnimationFrame","_createPropertyObserver","_getActiveErrorId","errorId","_getActiveLabelId","labelId","_getErrorMessageAriaHidden","toString","_dispatchIronResizeEventIfNeeded","sizePropertyName","previousSizePropertyName","offsetHeight","attributeChangedCallback","prop","test","isSafari","root","WEBKIT_PROPERTY","querySelectorAll","el","style"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-text-field/src/vaadin-text-field-mixin.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"vaadin-text-field-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-flex;\n        outline: none;\n      }\n\n      :host::before {\n        content: \"\\\\2003\";\n        width: 0;\n        display: inline-block;\n        /* Size and position this element on the same vertical position as the input-field element\n           to make vertical align for the host element work as expected */\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      .vaadin-text-field-container,\n      .vaadin-text-area-container {\n        display: flex;\n        flex-direction: column;\n        min-width: 100%;\n        max-width: 100%;\n        width: var(--vaadin-text-field-default-width, 12em);\n      }\n\n      [part=\"label\"]:empty {\n        display: none;\n      }\n\n      [part=\"input-field\"] {\n        display: flex;\n        align-items: center;\n        flex: auto;\n      }\n\n      .vaadin-text-field-container [part=\"input-field\"] {\n        flex-grow: 0;\n      }\n\n      /* Reset the native input styles */\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea) {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        outline: none;\n        margin: 0;\n        padding: 0;\n        border: 0;\n        border-radius: 0;\n        min-width: 0;\n        font: inherit;\n        font-size: 1em;\n        line-height: normal;\n        color: inherit;\n        background-color: transparent;\n        /* Disable default invalid style in Firefox */\n        box-shadow: none;\n      }\n\n      [part=\"input-field\"] ::slotted(*) {\n        flex: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea),\n      /* Slotted by vaadin-select-text-field */\n      [part=\"input-field\"] ::slotted([part=\"value\"]) {\n        flex: auto;\n        white-space: nowrap;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n      }\n\n      [part=\"input-field\"] ::slotted(textarea) {\n        resize: none;\n      }\n\n      [part=\"value\"]::-ms-clear,\n      [part=\"input-field\"] ::slotted(input)::-ms-clear {\n        display: none;\n      }\n\n      [part=\"clear-button\"] {\n        cursor: default;\n      }\n\n      [part=\"clear-button\"]::before {\n        content: \"âœ•\";\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\nconst HOST_PROPS = {\n  default: ['list', 'autofocus', 'pattern', 'autocapitalize', 'autocorrect', 'maxlength',\n    'minlength', 'name', 'placeholder', 'autocomplete', 'title'],\n  accessible: ['disabled', 'readonly', 'required', 'invalid']\n};\n\nconst PROP_TYPE = {\n  DEFAULT: 'default',\n  ACCESSIBLE: 'accessible'\n};\n\n\n/**\n * @polymerMixin\n * @mixes Vaadin.ControlStateMixin\n */\nexport const TextFieldMixin = subclass => class VaadinTextFieldMixin extends ControlStateMixin(subclass) {\n  static get properties() {\n    return {\n      /**\n       * Whether the value of the control can be automatically completed by the browser.\n       * List of available options at:\n       * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n       */\n      autocomplete: {\n        type: String\n      },\n\n      /**\n       * This is a property supported by Safari that is used to control whether\n       * autocorrection should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * on: Enable autocorrection.\n       * off: Disable autocorrection.\n       */\n      autocorrect: {\n        type: String\n      },\n\n      /**\n       * This is a property supported by Safari and Chrome that is used to control whether\n       * autocapitalization should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * characters: Characters capitalization.\n       * words: Words capitalization.\n       * sentences: Sentences capitalization.\n       * none: No capitalization.\n       */\n      autocapitalize: {\n        type: String\n      },\n\n      /**\n       * Specify that the value should be automatically selected when the field gains focus.\n       */\n      autoselect: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to display the clear icon which clears the input.\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Error to show when the input value is invalid.\n       */\n      errorMessage: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Object with translated strings used for localization. Has\n       * the following structure and default values:\n       *\n       * ```\n       * {\n       *   // Translation of the clear icon button accessible label\n       *   clear: 'Clear'\n       * }\n       * ```\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            clear: 'Clear'\n          };\n        }\n      },\n\n      /**\n       * String used for the label element.\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n\n      /**\n       * Maximum number of characters (in Unicode code points) that the user can enter.\n       */\n      maxlength: {\n        type: Number\n      },\n\n      /**\n       * Minimum number of characters (in Unicode code points) that the user can enter.\n       */\n      minlength: {\n        type: Number\n      },\n\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: {\n        type: String\n      },\n\n      /**\n       * A hint to the user of what can be entered in the control.\n       */\n      placeholder: {\n        type: String\n      },\n\n      /**\n       * This attribute indicates that the user cannot modify the value of the control.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n\n      /**\n       * The initial value of the control.\n       * It can be used for two-way data binding.\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true\n      },\n\n      /**\n       * This property is set to true when the control value is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * Specifies that the text field has value.\n       */\n      hasValue: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * When set to true, user is prevented from typing a value that\n       * conflicts with the given `pattern`.\n       */\n      preventInvalidInput: {\n        type: Boolean\n      },\n\n      _labelId: {\n        type: String\n      },\n\n      _errorId: {\n        type: String\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_stateChanged(disabled, readonly, clearButtonVisible, hasValue)',\n      '_hostPropsChanged(' + HOST_PROPS.default.join(', ') + ')',\n      '_hostAccessiblePropsChanged(' + HOST_PROPS.accessible.join(', ') + ')',\n      '_getActiveErrorId(invalid, errorMessage, _errorId)',\n      '_getActiveLabelId(label, _labelId)',\n      '__observeOffsetHeight(errorMessage, invalid, label)'\n    ];\n  }\n\n  get focusElement() {\n    if (!this.shadowRoot) {\n      return;\n    }\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    if (slotted) {\n      return slotted;\n    }\n    return this.shadowRoot.querySelector('[part=\"value\"]');\n  }\n\n  /**\n   * @private\n   */\n  get inputElement() {\n    return this.focusElement;\n  }\n\n  get _slottedTagName() {\n    return 'input';\n  }\n\n  _onInput(e) {\n    if (this.__preventInput) {\n      e.stopImmediatePropagation();\n      this.__preventInput = false;\n      return;\n    }\n\n    if (this.preventInvalidInput) {\n      const input = this.inputElement;\n      if (input.value.length > 0 && !this.checkValidity()) {\n        input.value = this.value || '';\n        // add input-prevented attribute for 200ms\n        this.setAttribute('input-prevented', '');\n        this._inputDebouncer = Debouncer.debounce(\n          this._inputDebouncer,\n          timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n        return;\n      }\n    }\n\n    if (!e.__fromClearButton) {\n      this.__userInput = true;\n    }\n    this.value = e.target.value;\n  }\n\n  // NOTE(yuriy): Workaround needed for IE11 and Edge for proper displaying\n  // of the clear button instead of setting display property for it depending on state.\n  _stateChanged(disabled, readonly, clearButtonVisible, hasValue) {\n    if (!disabled &&\n        !readonly &&\n        clearButtonVisible &&\n        hasValue\n    ) {\n      this.$.clearButton.removeAttribute('hidden');\n    } else {\n      this.$.clearButton.setAttribute('hidden', true);\n    }\n  }\n\n  _onChange(e) {\n    if (this._valueClearing) {\n      return;\n    }\n\n    // In the Shadow DOM, the `change` event is not leaked into the\n    // ancestor tree, so we must do this manually.\n    const changeEvent = new CustomEvent('change', {\n      detail: {\n        sourceEvent: e\n      },\n      bubbles: e.bubbles,\n      cancelable: e.cancelable,\n    });\n    this.dispatchEvent(changeEvent);\n  }\n\n  _valueChanged(newVal, oldVal) {\n    // setting initial value to empty string, skip validation\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n\n    if (newVal !== '' && newVal != null) {\n      this.hasValue = true;\n    } else {\n      this.hasValue = false;\n    }\n\n    if (this.__userInput) {\n      this.__userInput = false;\n      return;\n    } else if (newVal !== undefined) {\n      this.inputElement.value = newVal;\n    } else {\n      this.value = this.inputElement.value = '';\n    }\n\n    if (this.invalid) {\n      this.validate();\n    }\n  }\n\n  _labelChanged(label) {\n    if (label !== '' && label != null) {\n      this.setAttribute('has-label', '');\n    } else {\n      this.removeAttribute('has-label');\n    }\n  }\n\n  _onSlotChange() {\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n\n    if (this.value) {\n      this.inputElement.value = this.value;\n      this.validate();\n    }\n\n    if (slotted && !this._slottedInput) {\n      this._validateSlottedValue(slotted);\n      this._addInputListeners(slotted);\n      this._addIEListeners(slotted);\n      this._slottedInput = slotted;\n    } else if (!slotted && this._slottedInput) {\n      this._removeInputListeners(this._slottedInput);\n      this._removeIEListeners(this._slottedInput);\n      this._slottedInput = undefined;\n    }\n\n    Object.keys(PROP_TYPE).map(key => PROP_TYPE[key]).forEach(type =>\n      this._propagateHostAttributes(HOST_PROPS[type].map(attr => this[attr]), type));\n  }\n\n  _hostPropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.DEFAULT);\n  }\n\n  _hostAccessiblePropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.ACCESSIBLE);\n  }\n\n  _validateSlottedValue(slotted) {\n    if (slotted.value !== this.value) {\n      console.warn('Please define value on the vaadin-text-field component!');\n      slotted.value = '';\n    }\n  }\n\n  _propagateHostAttributes(attributesValues, type) {\n    const input = this.inputElement;\n    const attributeNames = HOST_PROPS[type];\n\n    if (type === 'accessible') {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n        this._setOrToggleAttribute(`aria-${attr}`, attributesValues[index], input);\n      });\n    } else {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n      });\n    }\n  }\n\n  _setOrToggleAttribute(name, value, node) {\n    if (!name || !node) {\n      return;\n    }\n\n    if (value) {\n      node.setAttribute(name, (typeof value === 'boolean') ? '' : value);\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   * @returns {boolean}\n   */\n  checkValidity() {\n    if (this.required || this.pattern || this.maxlength || this.minlength) {\n      return this.inputElement.checkValidity();\n    } else {\n      return !this.invalid;\n    }\n  }\n\n  _addInputListeners(node) {\n    node.addEventListener('input', this._boundOnInput);\n    node.addEventListener('change', this._boundOnChange);\n    node.addEventListener('blur', this._boundOnBlur);\n    node.addEventListener('focus', this._boundOnFocus);\n  }\n\n  _removeInputListeners(node) {\n    node.removeEventListener('input', this._boundOnInput);\n    node.removeEventListener('change', this._boundOnChange);\n    node.removeEventListener('blur', this._boundOnBlur);\n    node.removeEventListener('focus', this._boundOnFocus);\n  }\n\n  ready() {\n    super.ready();\n\n    this._boundOnInput = this._onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n    this._boundOnBlur = this._onBlur.bind(this);\n    this._boundOnFocus = this._onFocus.bind(this);\n\n    const defaultInput = this.shadowRoot.querySelector('[part=\"value\"]');\n    this._slottedInput = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    this._addInputListeners(defaultInput);\n    this._addIEListeners(defaultInput);\n    if (this._slottedInput) {\n      this._addIEListeners(this._slottedInput);\n      this._addInputListeners(this._slottedInput);\n    }\n\n    this.shadowRoot.querySelector('[name=\"input\"], [name=\"textarea\"]')\n      .addEventListener('slotchange', this._onSlotChange.bind(this));\n\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss)) {\n      this.updateStyles();\n    }\n\n    this.$.clearButton.addEventListener('mousedown', () => this._valueClearing = true);\n    this.$.clearButton.addEventListener('mouseleave', () => this._valueClearing = false);\n    this.$.clearButton.addEventListener('click', this._onClearButtonClick.bind(this));\n    this.addEventListener('keydown', this._onKeyDown.bind(this));\n\n    var uniqueId = TextFieldMixin._uniqueId = 1 + TextFieldMixin._uniqueId || 0;\n    this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n    this._labelId = `${this.constructor.is}-label-${uniqueId}`;\n\n    // Lumo theme defines a max-height transition for the \"error-message\"\n    // part on invalid state change.\n    this.shadowRoot.querySelector('[part=\"error-message\"]')\n      .addEventListener('transitionend', () => {\n        this.__observeOffsetHeight();\n      });\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   * `<iron-form>` uses this to check the validity or all its elements.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  clear() {\n    this.value = '';\n  }\n\n  _onBlur() {\n    this.validate();\n  }\n\n  _onFocus() {\n    if (this.autoselect) {\n      this.inputElement.select();\n      // iOS 9 workaround: https://stackoverflow.com/a/7436574\n      setTimeout(() => {\n        this.inputElement.setSelectionRange(0, 9999);\n      });\n    }\n  }\n\n  _onClearButtonClick(e) {\n    e.preventDefault();\n    // NOTE(yuriy): This line won't affect focus on the host. Cannot be properly tested.\n    this.inputElement.focus();\n    this.clear();\n    this._valueClearing = false;\n    if (navigator.userAgent.match(/Trident/)) {\n      // Disable IE input\" event prevention here, we want the input event from\n      // below to propagate normally.\n      this.__preventInput = false;\n    }\n    const inputEvent = new Event('input', {bubbles: true, composed: true});\n    inputEvent.__fromClearButton = true;\n    const changeEvent = new Event('change', {bubbles: !this._slottedInput});\n    changeEvent.__fromClearButton = true;\n    this.inputElement.dispatchEvent(inputEvent);\n    this.inputElement.dispatchEvent(changeEvent);\n  }\n\n  _onKeyDown(e) {\n    if (e.keyCode === 27 && this.clearButtonVisible) {\n      const dispatchChange = !!this.value;\n      this.clear();\n      dispatchChange && this.inputElement.dispatchEvent(new Event('change', {bubbles: !this._slottedInput}));\n    }\n  }\n\n  _addIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      // IE11 dispatches `input` event in following cases:\n      // - focus or blur, when placeholder attribute is set\n      // - placeholder attribute value changed\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/101220/\n      this._shouldPreventInput = () => {\n        this.__preventInput = true;\n        requestAnimationFrame(() => {\n          this.__preventInput = false;\n        });\n      };\n      node.addEventListener('focusin', this._shouldPreventInput);\n      node.addEventListener('focusout', this._shouldPreventInput);\n      this._createPropertyObserver('placeholder', this._shouldPreventInput);\n    }\n  }\n\n  _removeIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      node.removeEventListener('focusin', this._shouldPreventInput);\n      node.removeEventListener('focusout', this._shouldPreventInput);\n    }\n  }\n\n  _getActiveErrorId(invalid, errorMessage, errorId) {\n    this._setOrToggleAttribute('aria-describedby',\n      (errorMessage && invalid ? errorId : undefined),\n      this.inputElement);\n  }\n\n  _getActiveLabelId(label, labelId) {\n    this._setOrToggleAttribute('aria-labelledby',\n      (label ? labelId : undefined),\n      this.inputElement);\n  }\n\n  _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n    return (!(errorMessage && invalid ? errorId : undefined)).toString();\n  }\n\n  _dispatchIronResizeEventIfNeeded(sizePropertyName, value) {\n    const previousSizePropertyName = '__previous' + sizePropertyName;\n    if (this[previousSizePropertyName] !== undefined\n        && this[previousSizePropertyName] !== value) {\n      this.dispatchEvent(\n        new CustomEvent('iron-resize', {bubbles: true})\n      );\n    }\n\n    this[previousSizePropertyName] = value;\n  }\n\n  __observeOffsetHeight() {\n    this._dispatchIronResizeEventIfNeeded('Height', this.offsetHeight);\n  }\n\n  /**\n   * @protected\n   */\n  attributeChangedCallback(prop, oldVal, newVal) {\n    super.attributeChangedCallback(prop, oldVal, newVal);\n    // Needed until Edge has CSS Custom Properties (present in Edge Preview)\n    /* istanbul ignore if */\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss) &&\n      /^(focused|focus-ring|invalid|disabled|placeholder|has-value)$/.test(prop)) {\n      this.updateStyles();\n    }\n\n    // Safari has an issue with repainting shadow root element styles when a host attribute changes.\n    // Need this workaround (toggle any inline css property on and off) until the issue gets fixed.\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    /* istanbul ignore if */\n    if (isSafari && this.root) {\n      const WEBKIT_PROPERTY = '-webkit-backface-visibility';\n      this.root.querySelectorAll('*').forEach(el => {\n        el.style[WEBKIT_PROPERTY] = 'visible';\n        el.style[WEBKIT_PROPERTY] = '';\n      });\n    }\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n\n  /**\n   * Fired when the value is changed by the user: on every typing keystroke,\n   * and the value is cleared using the clear button.\n   *\n   * @event input\n   */\n\n  /**\n   * Fired when the size of the element changes.\n   *\n   * @event iron-resize\n   */\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAwD;AAE/D,SAASA,iBAAiB,QAAQ,kEAAkE;AACpG,SAASC,OAAO,QAAQ,qCAAqC;AAC7D,SAASC,SAAS,QAAQ,wCAAwC;AAClE,MAAMC,mBAAmB,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AAE9DF,mBAAmB,CAACG,SAAS,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AAEdF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,mBAAmB,CAACM,OAAO,CAAC;AAEtD,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB,EAAE,aAAa,EAAE,WAAW,EACpF,WAAW,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,CAAC;EAC9DC,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS;AAC5D,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAGC,QAAQ,IAAI,MAAMC,oBAAoB,SAASlB,iBAAiB,CAACiB,QAAQ,CAAC,CAAC;EACvG,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACN;AACA;AACA;AACA;MACMC,YAAY,EAAE;QACZC,IAAI,EAAEC;MACR,CAAC;MAED;AACN;AACA;AACA;AACA;AACA;AACA;MACMC,WAAW,EAAE;QACXF,IAAI,EAAEC;MACR,CAAC;MAED;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACME,cAAc,EAAE;QACdH,IAAI,EAAEC;MACR,CAAC;MAED;AACN;AACA;MACMG,UAAU,EAAE;QACVJ,IAAI,EAAEK,OAAO;QACbC,KAAK,EAAE;MACT,CAAC;MAED;AACN;AACA;MACMC,kBAAkB,EAAE;QAClBP,IAAI,EAAEK,OAAO;QACbC,KAAK,EAAE;MACT,CAAC;MAED;AACN;AACA;MACME,YAAY,EAAE;QACZR,IAAI,EAAEC,MAAM;QACZK,KAAK,EAAE;MACT,CAAC;MAED;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACMG,IAAI,EAAE;QACJT,IAAI,EAAEU,MAAM;QACZJ,KAAK,EAAEA,CAAA,KAAM;UACX,OAAO;YACLK,KAAK,EAAE;UACT,CAAC;QACH;MACF,CAAC;MAED;AACN;AACA;MACMC,KAAK,EAAE;QACLZ,IAAI,EAAEC,MAAM;QACZK,KAAK,EAAE,EAAE;QACTO,QAAQ,EAAE;MACZ,CAAC;MAED;AACN;AACA;MACMC,SAAS,EAAE;QACTd,IAAI,EAAEe;MACR,CAAC;MAED;AACN;AACA;MACMC,SAAS,EAAE;QACThB,IAAI,EAAEe;MACR,CAAC;MAED;AACN;AACA;MACME,IAAI,EAAE;QACJjB,IAAI,EAAEC;MACR,CAAC;MAED;AACN;AACA;MACMiB,WAAW,EAAE;QACXlB,IAAI,EAAEC;MACR,CAAC;MAED;AACN;AACA;MACMkB,QAAQ,EAAE;QACRnB,IAAI,EAAEK,OAAO;QACbe,kBAAkB,EAAE;MACtB,CAAC;MAED;AACN;AACA;MACMC,QAAQ,EAAE;QACRrB,IAAI,EAAEK,OAAO;QACbe,kBAAkB,EAAE;MACtB,CAAC;MAGD;AACN;AACA;AACA;MACMd,KAAK,EAAE;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}