{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @return {number} the scrollLeft value.\n */\nexport function getNormalizedScrollLeft(element, direction) {\n  const {\n    scrollLeft\n  } = element;\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  return element.scrollWidth - element.clientWidth + scrollLeft;\n}\n\n/**\n * Set the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @param {number} scrollLeft the scrollLeft value to be set\n */\nexport function setNormalizedScrollLeft(element, direction, scrollLeft) {\n  if (direction !== 'rtl') {\n    element.scrollLeft = scrollLeft;\n  } else {\n    element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n  }\n}","map":{"version":3,"names":["getNormalizedScrollLeft","element","direction","scrollLeft","scrollWidth","clientWidth","setNormalizedScrollLeft"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/component-base/src/dir-utils.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Get the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @return {number} the scrollLeft value.\n */\nexport function getNormalizedScrollLeft(element, direction) {\n  const { scrollLeft } = element;\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  return element.scrollWidth - element.clientWidth + scrollLeft;\n}\n\n/**\n * Set the scrollLeft value of the element relative to the direction\n *\n * @param {HTMLElement} element\n * @param {string} direction current direction of the element\n * @param {number} scrollLeft the scrollLeft value to be set\n */\nexport function setNormalizedScrollLeft(element, direction, scrollLeft) {\n  if (direction !== 'rtl') {\n    element.scrollLeft = scrollLeft;\n  } else {\n    element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAuBA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC1D,MAAM;IAAEC;EAAW,CAAC,GAAGF,OAAO;EAC9B,IAAIC,SAAS,KAAK,KAAK,EAAE;IACvB,OAAOC,UAAU;EACnB;EAEA,OAAOF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,GAAGF,UAAU;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,uBAAuBA,CAACL,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAAE;EACtE,IAAID,SAAS,KAAK,KAAK,EAAE;IACvBD,OAAO,CAACE,UAAU,GAAGA,UAAU;EACjC,CAAC,MAAM;IACLF,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACG,WAAW,GAAGD,UAAU;EAC7E;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}