{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js'; // used in type annotations\n/* eslint-enable no-unused-vars */\nimport { flushDebouncers } from '../utils/debounce.js'; // used in type annotations\nexport { enqueueDebouncer } from '../utils/debounce.js'; // used in type annotations\n\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\nexport const flush = function () {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};","map":{"version":3,"names":["Debouncer","flushDebouncers","enqueueDebouncer","flush","shadyDOM","debouncers","window","ShadyDOM","ShadyCSS","ScopingShim"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@polymer/polymer/lib/utils/flush.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\nimport { flushDebouncers } from '../utils/debounce.js';  // used in type annotations\nexport { enqueueDebouncer } from '../utils/debounce.js';  // used in type annotations\n\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAW;AAClB;AACA,SAASA,SAAS,QAAQ,sBAAsB,CAAC,CAAE;AACnD;AACA,SAASC,eAAe,QAAQ,sBAAsB,CAAC,CAAE;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB,CAAC,CAAE;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAG,SAAAA,CAAA,EAAW;EAC9B,IAAIC,QAAQ,EAAEC,UAAU;EACxB,GAAG;IACDD,QAAQ,GAAGE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACJ,KAAK,CAAC,CAAC;IAC9C,IAAIG,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACE,QAAQ,CAACC,WAAW,EAAE;MAClDH,MAAM,CAACE,QAAQ,CAACC,WAAW,CAACN,KAAK,CAAC,CAAC;IACrC;IACAE,UAAU,GAAGJ,eAAe,CAAC,CAAC;EAChC,CAAC,QAAQG,QAAQ,IAAIC,UAAU;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}