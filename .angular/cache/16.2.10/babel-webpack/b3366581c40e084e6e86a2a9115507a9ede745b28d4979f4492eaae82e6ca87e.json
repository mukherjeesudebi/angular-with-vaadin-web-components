{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { needsFontIconSizingFallback } from './vaadin-icon-helpers.js';\nconst usesFontIconSizingFallback = needsFontIconSizingFallback();\nif (usesFontIconSizingFallback) {\n  registerStyles('vaadin-icon', css`\n      :host::after,\n      :host::before {\n        font-size: var(--_vaadin-font-icon-size);\n      }\n    `, 'vaadin-icon-font-size-mixin-styles');\n}\n\n/**\n * Mixin which enables the font icon sizing fallback for browsers that do not support CSS Container Queries.\n * The mixin does nothing if the browser supports CSS Container Query units for pseudo elements.\n *\n * @polymerMixin\n */\nexport const IconFontSizeMixin = dedupingMixin(superclass => !usesFontIconSizingFallback ? superclass : class extends ResizeMixin(superclass) {\n  static get observers() {\n    return ['__iconFontSizeMixinfontChanged(iconClass, char, ligature)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Update once initially to avoid a fouc\n    this.__updateFontIconSize();\n  }\n\n  /** @private */\n  __iconFontSizeMixinfontChanged(_iconClass, _char, _ligature) {\n    // Update when iconClass, char or ligature changes\n    this.__updateFontIconSize();\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  _onResize() {\n    // Update when the element is resized\n    this.__updateFontIconSize();\n  }\n\n  /**\n   * Updates the --_vaadin-font-icon-size CSS variable value if font icons are used.\n   *\n   * @private\n   */\n  __updateFontIconSize() {\n    if (this.char || this.iconClass || this.ligature) {\n      const {\n        paddingTop,\n        paddingBottom,\n        height\n      } = getComputedStyle(this);\n      const fontIconSize = parseFloat(height) - parseFloat(paddingTop) - parseFloat(paddingBottom);\n      this.style.setProperty('--_vaadin-font-icon-size', `${fontIconSize}px`);\n    }\n  }\n});","map":{"version":3,"names":["dedupingMixin","ResizeMixin","css","registerStyles","needsFontIconSizingFallback","usesFontIconSizingFallback","IconFontSizeMixin","superclass","observers","ready","__updateFontIconSize","__iconFontSizeMixinfontChanged","_iconClass","_char","_ligature","_onResize","char","iconClass","ligature","paddingTop","paddingBottom","height","getComputedStyle","fontIconSize","parseFloat","style","setProperty"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/icon/src/vaadin-icon-font-size-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { needsFontIconSizingFallback } from './vaadin-icon-helpers.js';\n\nconst usesFontIconSizingFallback = needsFontIconSizingFallback();\n\nif (usesFontIconSizingFallback) {\n  registerStyles(\n    'vaadin-icon',\n    css`\n      :host::after,\n      :host::before {\n        font-size: var(--_vaadin-font-icon-size);\n      }\n    `,\n    'vaadin-icon-font-size-mixin-styles',\n  );\n}\n\n/**\n * Mixin which enables the font icon sizing fallback for browsers that do not support CSS Container Queries.\n * The mixin does nothing if the browser supports CSS Container Query units for pseudo elements.\n *\n * @polymerMixin\n */\nexport const IconFontSizeMixin = dedupingMixin((superclass) =>\n  !usesFontIconSizingFallback\n    ? superclass\n    : class extends ResizeMixin(superclass) {\n        static get observers() {\n          return ['__iconFontSizeMixinfontChanged(iconClass, char, ligature)'];\n        }\n\n        /** @protected */\n        ready() {\n          super.ready();\n\n          // Update once initially to avoid a fouc\n          this.__updateFontIconSize();\n        }\n\n        /** @private */\n        __iconFontSizeMixinfontChanged(_iconClass, _char, _ligature) {\n          // Update when iconClass, char or ligature changes\n          this.__updateFontIconSize();\n        }\n\n        /**\n         * @protected\n         * @override\n         */\n        _onResize() {\n          // Update when the element is resized\n          this.__updateFontIconSize();\n        }\n\n        /**\n         * Updates the --_vaadin-font-icon-size CSS variable value if font icons are used.\n         *\n         * @private\n         */\n        __updateFontIconSize() {\n          if (this.char || this.iconClass || this.ligature) {\n            const { paddingTop, paddingBottom, height } = getComputedStyle(this);\n            const fontIconSize = parseFloat(height) - parseFloat(paddingTop) - parseFloat(paddingBottom);\n            this.style.setProperty('--_vaadin-font-icon-size', `${fontIconSize}px`);\n          }\n        }\n      },\n);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;AACnE,SAASC,WAAW,QAAQ,4CAA4C;AACxE,SAASC,GAAG,EAAEC,cAAc,QAAQ,wDAAwD;AAC5F,SAASC,2BAA2B,QAAQ,0BAA0B;AAEtE,MAAMC,0BAA0B,GAAGD,2BAA2B,CAAC,CAAC;AAEhE,IAAIC,0BAA0B,EAAE;EAC9BF,cAAc,CACZ,aAAa,EACbD,GAAI;AACR;AACA;AACA;AACA;AACA,KAAK,EACD,oCACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,iBAAiB,GAAGN,aAAa,CAAEO,UAAU,IACxD,CAACF,0BAA0B,GACvBE,UAAU,GACV,cAAcN,WAAW,CAACM,UAAU,CAAC,CAAC;EACpC,WAAWC,SAASA,CAAA,EAAG;IACrB,OAAO,CAAC,2DAA2D,CAAC;EACtE;;EAEA;EACAC,KAAKA,CAAA,EAAG;IACN,KAAK,CAACA,KAAK,CAAC,CAAC;;IAEb;IACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B;;EAEA;EACAC,8BAA8BA,CAACC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAE;IAC3D;IACA,IAAI,CAACJ,oBAAoB,CAAC,CAAC;EAC7B;;EAEA;AACR;AACA;AACA;EACQK,SAASA,CAAA,EAAG;IACV;IACA,IAAI,CAACL,oBAAoB,CAAC,CAAC;EAC7B;;EAEA;AACR;AACA;AACA;AACA;EACQA,oBAAoBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACM,IAAI,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACC,QAAQ,EAAE;MAChD,MAAM;QAAEC,UAAU;QAAEC,aAAa;QAAEC;MAAO,CAAC,GAAGC,gBAAgB,CAAC,IAAI,CAAC;MACpE,MAAMC,YAAY,GAAGC,UAAU,CAACH,MAAM,CAAC,GAAGG,UAAU,CAACL,UAAU,CAAC,GAAGK,UAAU,CAACJ,aAAa,CAAC;MAC5F,IAAI,CAACK,KAAK,CAACC,WAAW,CAAC,0BAA0B,EAAG,GAAEH,YAAa,IAAG,CAAC;IACzE;EACF;AACF,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}