{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n */\nexport class InputContainer extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-input-container';\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          flex: 0 1 auto;\n          border-radius:\n            /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius */\n            var(--vaadin-input-field-top-start-radius, var(--__border-radius))\n            var(--vaadin-input-field-top-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--__border-radius));\n          --_border-radius: var(--vaadin-input-field-border-radius, 0px);\n          --_input-border-width: var(--vaadin-input-field-border-width, 0);\n          --_input-border-color: var(--vaadin-input-field-border-color, transparent);\n          box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\n        }\n\n        :host([dir='rtl']) {\n          border-radius:\n            /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\n            var(--vaadin-input-field-top-end-radius, var(--_border-radius))\n            var(--vaadin-input-field-top-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--_border-radius));\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Reset the native input styles */\n        ::slotted(input) {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          flex: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          width: 100%;\n          height: 100%;\n          outline: none;\n          margin: 0;\n          padding: 0;\n          border: 0;\n          border-radius: 0;\n          min-width: 0;\n          font: inherit;\n          line-height: normal;\n          color: inherit;\n          background-color: transparent;\n          /* Disable default invalid style in Firefox */\n          box-shadow: none;\n        }\n\n        ::slotted(*) {\n          flex: none;\n        }\n\n        ::slotted(:is(input, textarea))::placeholder {\n          /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\n          /* because ::slotted(...)::placeholder does not work in Safari. */\n          font: inherit;\n          color: inherit;\n          /* Override default opacity in Firefox */\n          opacity: 1;\n        }\n      </style>\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * Set to true to make this element read-only.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * Set to true when the element is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('pointerdown', event => {\n      if (event.target === this) {\n        // Prevent direct clicks to the input container from blurring the input\n        event.preventDefault();\n      }\n    });\n    this.addEventListener('click', event => {\n      if (event.target === this) {\n        // The vaadin-input-container element was directly clicked,\n        // focus any focusable child element from the default slot\n        this.shadowRoot.querySelector('slot:not([name])').assignedNodes({\n          flatten: true\n        }).forEach(node => node.focus && node.focus());\n      }\n    });\n  }\n}\ndefineCustomElement(InputContainer);","map":{"version":3,"names":["html","PolymerElement","defineCustomElement","DirMixin","ThemableMixin","InputContainer","is","template","properties","disabled","type","Boolean","reflectToAttribute","readonly","invalid","ready","addEventListener","event","target","preventDefault","shadowRoot","querySelector","assignedNodes","flatten","forEach","node","focus"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/input-container/src/vaadin-input-container.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n */\nexport class InputContainer extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-input-container';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          flex: 0 1 auto;\n          border-radius:\n            /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius */\n            var(--vaadin-input-field-top-start-radius, var(--__border-radius))\n            var(--vaadin-input-field-top-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--__border-radius));\n          --_border-radius: var(--vaadin-input-field-border-radius, 0px);\n          --_input-border-width: var(--vaadin-input-field-border-width, 0);\n          --_input-border-color: var(--vaadin-input-field-border-color, transparent);\n          box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\n        }\n\n        :host([dir='rtl']) {\n          border-radius:\n            /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\n            var(--vaadin-input-field-top-end-radius, var(--_border-radius))\n            var(--vaadin-input-field-top-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--_border-radius));\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Reset the native input styles */\n        ::slotted(input) {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          flex: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          width: 100%;\n          height: 100%;\n          outline: none;\n          margin: 0;\n          padding: 0;\n          border: 0;\n          border-radius: 0;\n          min-width: 0;\n          font: inherit;\n          line-height: normal;\n          color: inherit;\n          background-color: transparent;\n          /* Disable default invalid style in Firefox */\n          box-shadow: none;\n        }\n\n        ::slotted(*) {\n          flex: none;\n        }\n\n        ::slotted(:is(input, textarea))::placeholder {\n          /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\n          /* because ::slotted(...)::placeholder does not work in Safari. */\n          font: inherit;\n          color: inherit;\n          /* Override default opacity in Firefox */\n          opacity: 1;\n        }\n      </style>\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true when the element is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('pointerdown', (event) => {\n      if (event.target === this) {\n        // Prevent direct clicks to the input container from blurring the input\n        event.preventDefault();\n      }\n    });\n\n    this.addEventListener('click', (event) => {\n      if (event.target === this) {\n        // The vaadin-input-container element was directly clicked,\n        // focus any focusable child element from the default slot\n        this.shadowRoot\n          .querySelector('slot:not([name])')\n          .assignedNodes({ flatten: true })\n          .forEach((node) => node.focus && node.focus());\n      }\n    });\n  }\n}\n\ndefineCustomElement(InputContainer);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,EAAEC,cAAc,QAAQ,kBAAkB;AACvD,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,QAAQ,QAAQ,yCAAyC;AAClE,SAASC,aAAa,QAAQ,wDAAwD;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASD,aAAa,CAACD,QAAQ,CAACF,cAAc,CAAC,CAAC,CAAC;EAC1E,WAAWK,EAAEA,CAAA,EAAG;IACd,OAAO,wBAAwB;EACjC;EAEA,WAAWC,QAAQA,CAAA,EAAG;IACpB,OAAOP,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EACH;EAEA,WAAWQ,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACN;AACA;MACMC,QAAQ,EAAE;QACRC,IAAI,EAAEC,OAAO;QACbC,kBAAkB,EAAE;MACtB,CAAC;MAED;AACN;AACA;MACMC,QAAQ,EAAE;QACRH,IAAI,EAAEC,OAAO;QACbC,kBAAkB,EAAE;MACtB,CAAC;MAED;AACN;AACA;MACME,OAAO,EAAE;QACPJ,IAAI,EAAEC,OAAO;QACbC,kBAAkB,EAAE;MACtB;IACF,CAAC;EACH;;EAEA;EACAG,KAAKA,CAAA,EAAG;IACN,KAAK,CAACA,KAAK,CAAC,CAAC;IAEb,IAAI,CAACC,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;MAC9C,IAAIA,KAAK,CAACC,MAAM,KAAK,IAAI,EAAE;QACzB;QACAD,KAAK,CAACE,cAAc,CAAC,CAAC;MACxB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;MACxC,IAAIA,KAAK,CAACC,MAAM,KAAK,IAAI,EAAE;QACzB;QACA;QACA,IAAI,CAACE,UAAU,CACZC,aAAa,CAAC,kBAAkB,CAAC,CACjCC,aAAa,CAAC;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC,CAChCC,OAAO,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MAClD;IACF,CAAC,CAAC;EACJ;AACF;AAEAxB,mBAAmB,CAACG,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}