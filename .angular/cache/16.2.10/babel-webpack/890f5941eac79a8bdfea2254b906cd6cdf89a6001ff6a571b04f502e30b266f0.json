{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotChildObserveController {\n  constructor(host) {\n    super(host, 'error-message', 'div');\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Override method inherited from `SlotController` to not run\n   * initializer on the custom slotted node unnecessarily.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initAddedNode(node) {\n    if (node !== this.defaultNode) {\n      // There is no need to run `initNode`.\n      this.initCustomNode(node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added default error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initNode(errorNode) {\n    this.updateDefaultNode(errorNode);\n  }\n\n  /**\n   * Override to initialize the newly added custom error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    // Notify the host about custom node.\n    super.initCustomNode(errorNode);\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to restore the default error message element.\n   *\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    this.attachDefaultNode();\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the error message text and hidden state.\n   *\n   * Note: unlike with other controllers, this method is\n   * called for both default and custom error message.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(errorNode) {\n    const {\n      errorMessage,\n      invalid\n    } = this;\n    const hasError = Boolean(invalid && errorMessage && errorMessage.trim() !== '');\n    if (errorNode) {\n      errorNode.textContent = hasError ? errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(errorNode);\n  }\n}","map":{"version":3,"names":["SlotChildObserveController","ErrorController","constructor","host","setErrorMessage","errorMessage","updateDefaultNode","node","setInvalid","invalid","initAddedNode","defaultNode","initCustomNode","initNode","errorNode","textContent","trim","restoreDefaultNode","attachDefaultNode","hasError","Boolean","hidden","setAttribute","removeAttribute"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/field-base/src/error-controller.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotChildObserveController {\n  constructor(host) {\n    super(host, 'error-message', 'div');\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Override method inherited from `SlotController` to not run\n   * initializer on the custom slotted node unnecessarily.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initAddedNode(node) {\n    if (node !== this.defaultNode) {\n      // There is no need to run `initNode`.\n      this.initCustomNode(node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added default error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initNode(errorNode) {\n    this.updateDefaultNode(errorNode);\n  }\n\n  /**\n   * Override to initialize the newly added custom error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    // Notify the host about custom node.\n    super.initCustomNode(errorNode);\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to restore the default error message element.\n   *\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    this.attachDefaultNode();\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the error message text and hidden state.\n   *\n   * Note: unlike with other controllers, this method is\n   * called for both default and custom error message.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(errorNode) {\n    const { errorMessage, invalid } = this;\n    const hasError = Boolean(invalid && errorMessage && errorMessage.trim() !== '');\n\n    if (errorNode) {\n      errorNode.textContent = hasError ? errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(errorNode);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,0BAA0B,QAAQ,6DAA6D;;AAExG;AACA;AACA;AACA,OAAO,MAAMC,eAAe,SAASD,0BAA0B,CAAC;EAC9DE,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAACA,IAAI,EAAE,eAAe,EAAE,KAAK,CAAC;EACrC;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CAACC,YAAY,EAAE;IAC5B,IAAI,CAACA,YAAY,GAAGA,YAAY;IAEhC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,IAAI,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAUA,CAACC,OAAO,EAAE;IAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACH,iBAAiB,CAAC,IAAI,CAACC,IAAI,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,aAAaA,CAACH,IAAI,EAAE;IAClB,IAAIA,IAAI,KAAK,IAAI,CAACI,WAAW,EAAE;MAC7B;MACA,IAAI,CAACC,cAAc,CAACL,IAAI,CAAC;IAC3B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEM,QAAQA,CAACC,SAAS,EAAE;IAClB,IAAI,CAACR,iBAAiB,CAACQ,SAAS,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEF,cAAcA,CAACE,SAAS,EAAE;IACxB;IACA,IAAIA,SAAS,CAACC,WAAW,IAAI,CAAC,IAAI,CAACV,YAAY,EAAE;MAC/C,IAAI,CAACA,YAAY,GAAGS,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,CAAC;IAClD;;IAEA;IACA,KAAK,CAACJ,cAAc,CAACE,SAAS,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEZ,iBAAiBA,CAACQ,SAAS,EAAE;IAC3B,MAAM;MAAET,YAAY;MAAEI;IAAQ,CAAC,GAAG,IAAI;IACtC,MAAMU,QAAQ,GAAGC,OAAO,CAACX,OAAO,IAAIJ,YAAY,IAAIA,YAAY,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAE/E,IAAIF,SAAS,EAAE;MACbA,SAAS,CAACC,WAAW,GAAGI,QAAQ,GAAGd,YAAY,GAAG,EAAE;MACpDS,SAAS,CAACO,MAAM,GAAG,CAACF,QAAQ;;MAE5B;MACA;MACA,IAAIA,QAAQ,EAAE;QACZL,SAAS,CAACQ,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;MACzC,CAAC,MAAM;QACLR,SAAS,CAACS,eAAe,CAAC,MAAM,CAAC;MACnC;IACF;;IAEA;IACA,KAAK,CAACjB,iBAAiB,CAACQ,SAAS,CAAC;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}