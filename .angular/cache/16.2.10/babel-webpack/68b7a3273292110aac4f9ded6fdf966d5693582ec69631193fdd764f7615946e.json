{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { iterateChildren, iterateRowCells } from './vaadin-grid-helpers.js';\n\n/**\n * @polymerMixin\n */\nexport const A11yMixin = superClass => class A11yMixin extends superClass {\n  static get observers() {\n    return ['_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'];\n  }\n\n  /** @private */\n  _a11yGetHeaderRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col.headerRenderer || col.path || col.header)).length;\n  }\n\n  /** @private */\n  _a11yGetFooterRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col.headerRenderer)).length;\n  }\n\n  /** @private */\n  _a11yUpdateGridSize(size, _columnTree) {\n    if (size === undefined || _columnTree === undefined) {\n      return;\n    }\n    const bodyColumns = _columnTree[_columnTree.length - 1];\n    this.$.table.setAttribute('aria-rowcount', size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree));\n    this.$.table.setAttribute('aria-colcount', bodyColumns && bodyColumns.length || 0);\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n  }\n\n  /** @protected */\n  _a11yUpdateHeaderRows() {\n    iterateChildren(this.$.header, (headerRow, index) => {\n      headerRow.setAttribute('aria-rowindex', index + 1);\n    });\n  }\n\n  /** @protected */\n  _a11yUpdateFooterRows() {\n    iterateChildren(this.$.footer, (footerRow, index) => {\n      footerRow.setAttribute('aria-rowindex', this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1);\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} index\n   * @protected\n   */\n  _a11yUpdateRowRowindex(row, index) {\n    row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {boolean} selected\n   * @protected\n   */\n  _a11yUpdateRowSelected(row, selected) {\n    // Jaws reads selection only for rows, NVDA only for cells\n    row.setAttribute('aria-selected', Boolean(selected));\n    iterateRowCells(row, cell => {\n      cell.setAttribute('aria-selected', Boolean(selected));\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @protected\n   */\n  _a11yUpdateRowExpanded(row) {\n    if (this.__isRowExpandable(row)) {\n      row.setAttribute('aria-expanded', 'false');\n    } else if (this.__isRowCollapsible(row)) {\n      row.setAttribute('aria-expanded', 'true');\n    } else {\n      row.removeAttribute('aria-expanded');\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} level\n   * @protected\n   */\n  _a11yUpdateRowLevel(row, level) {\n    // Set level for the expandable rows itself, and all the nested rows.\n    if (level > 0 || this.__isRowCollapsible(row) || this.__isRowExpandable(row)) {\n      row.setAttribute('aria-level', level + 1);\n    } else {\n      row.removeAttribute('aria-level');\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {!HTMLElement} detailsCell\n   * @protected\n   */\n  _a11ySetRowDetailsCell(row, detailsCell) {\n    iterateRowCells(row, cell => {\n      if (cell !== detailsCell) {\n        cell.setAttribute('aria-controls', detailsCell.id);\n      }\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} colspan\n   * @protected\n   */\n  _a11yUpdateCellColspan(cell, colspan) {\n    cell.setAttribute('aria-colspan', Number(colspan));\n  }\n\n  /** @protected */\n  _a11yUpdateSorters() {\n    Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach(sorter => {\n      let cellContent = sorter.parentNode;\n      while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n        cellContent = cellContent.parentNode;\n      }\n      if (cellContent && cellContent.assignedSlot) {\n        const cell = cellContent.assignedSlot.parentNode;\n        cell.setAttribute('aria-sort', {\n          asc: 'ascending',\n          desc: 'descending'\n        }[String(sorter.direction)] || 'none');\n      }\n    });\n  }\n};","map":{"version":3,"names":["iterateChildren","iterateRowCells","A11yMixin","superClass","observers","_a11yGetHeaderRowCount","_columnTree","filter","level","some","col","headerRenderer","path","header","length","_a11yGetFooterRowCount","_a11yUpdateGridSize","size","undefined","bodyColumns","$","table","setAttribute","_a11yUpdateHeaderRows","_a11yUpdateFooterRows","headerRow","index","footer","footerRow","_a11yUpdateRowRowindex","row","_a11yUpdateRowSelected","selected","Boolean","cell","_a11yUpdateRowExpanded","__isRowExpandable","__isRowCollapsible","removeAttribute","_a11yUpdateRowLevel","_a11ySetRowDetailsCell","detailsCell","id","_a11yUpdateCellColspan","colspan","Number","_a11yUpdateSorters","Array","from","querySelectorAll","forEach","sorter","cellContent","parentNode","localName","assignedSlot","asc","desc","String","direction"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/grid/src/vaadin-grid-a11y-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2016 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { iterateChildren, iterateRowCells } from './vaadin-grid-helpers.js';\n\n/**\n * @polymerMixin\n */\nexport const A11yMixin = (superClass) =>\n  class A11yMixin extends superClass {\n    static get observers() {\n      return ['_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'];\n    }\n\n    /** @private */\n    _a11yGetHeaderRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col.headerRenderer || col.path || col.header)).length;\n    }\n\n    /** @private */\n    _a11yGetFooterRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col.headerRenderer)).length;\n    }\n\n    /** @private */\n    _a11yUpdateGridSize(size, _columnTree) {\n      if (size === undefined || _columnTree === undefined) {\n        return;\n      }\n\n      const bodyColumns = _columnTree[_columnTree.length - 1];\n      this.$.table.setAttribute(\n        'aria-rowcount',\n        size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree),\n      );\n      this.$.table.setAttribute('aria-colcount', (bodyColumns && bodyColumns.length) || 0);\n\n      this._a11yUpdateHeaderRows();\n      this._a11yUpdateFooterRows();\n    }\n\n    /** @protected */\n    _a11yUpdateHeaderRows() {\n      iterateChildren(this.$.header, (headerRow, index) => {\n        headerRow.setAttribute('aria-rowindex', index + 1);\n      });\n    }\n\n    /** @protected */\n    _a11yUpdateFooterRows() {\n      iterateChildren(this.$.footer, (footerRow, index) => {\n        footerRow.setAttribute('aria-rowindex', this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1);\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} index\n     * @protected\n     */\n    _a11yUpdateRowRowindex(row, index) {\n      row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} selected\n     * @protected\n     */\n    _a11yUpdateRowSelected(row, selected) {\n      // Jaws reads selection only for rows, NVDA only for cells\n      row.setAttribute('aria-selected', Boolean(selected));\n      iterateRowCells(row, (cell) => {\n        cell.setAttribute('aria-selected', Boolean(selected));\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _a11yUpdateRowExpanded(row) {\n      if (this.__isRowExpandable(row)) {\n        row.setAttribute('aria-expanded', 'false');\n      } else if (this.__isRowCollapsible(row)) {\n        row.setAttribute('aria-expanded', 'true');\n      } else {\n        row.removeAttribute('aria-expanded');\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} level\n     * @protected\n     */\n    _a11yUpdateRowLevel(row, level) {\n      // Set level for the expandable rows itself, and all the nested rows.\n      if (level > 0 || this.__isRowCollapsible(row) || this.__isRowExpandable(row)) {\n        row.setAttribute('aria-level', level + 1);\n      } else {\n        row.removeAttribute('aria-level');\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!HTMLElement} detailsCell\n     * @protected\n     */\n    _a11ySetRowDetailsCell(row, detailsCell) {\n      iterateRowCells(row, (cell) => {\n        if (cell !== detailsCell) {\n          cell.setAttribute('aria-controls', detailsCell.id);\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} colspan\n     * @protected\n     */\n    _a11yUpdateCellColspan(cell, colspan) {\n      cell.setAttribute('aria-colspan', Number(colspan));\n    }\n\n    /** @protected */\n    _a11yUpdateSorters() {\n      Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach((sorter) => {\n        let cellContent = sorter.parentNode;\n        while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n          cellContent = cellContent.parentNode;\n        }\n        if (cellContent && cellContent.assignedSlot) {\n          const cell = cellContent.assignedSlot.parentNode;\n          cell.setAttribute(\n            'aria-sort',\n            {\n              asc: 'ascending',\n              desc: 'descending',\n            }[String(sorter.direction)] || 'none',\n          );\n        }\n      });\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}