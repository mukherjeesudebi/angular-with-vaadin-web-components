{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    });\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */style['__appliedElement'] || style;\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    }\n  }\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};","map":{"version":3,"names":["documentWait","CustomStyleProvider","SEEN_MARKER","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","constructor","window","enqueueDocumentValidation","addCustomStyle","style","push","getStyleForCustomStyle","customStyle","processStyles","cs","i","length","styleToTransform","prototype","Object","defineProperties","get","set","fn","needsEnqueue","CustomStyleInterfaceInterface"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@webcomponents/shadycss/src/custom-style-interface.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    })\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}