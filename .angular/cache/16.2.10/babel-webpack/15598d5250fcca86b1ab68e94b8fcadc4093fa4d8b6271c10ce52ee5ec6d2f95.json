{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\nimport { getComputedStyleValue, updateNativeProperties } from '../src/common-utils.js';\nimport { nativeCssVariables, nativeShadow, cssBuild, disableRuntime } from '../src/style-settings.js';\nconst customStyleInterface = new CustomStyleInterface();\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {},\n    // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {},\n    // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {},\n    // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n    /**\n     * @param {Element} element\n     */\n    styleElement(element) {\n      // eslint-disable-line no-unused-vars\n      customStyleInterface.processStyles();\n    },\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime\n  };\n}\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;","map":{"version":3,"names":["CustomStyleInterface","getComputedStyleValue","updateNativeProperties","nativeCssVariables","nativeShadow","cssBuild","disableRuntime","customStyleInterface","window","ShadyCSS","prepareTemplate","template","elementName","elementExtends","prepareTemplateDom","prepareTemplateStyles","styleSubtree","element","properties","processStyles","styleElement","styleDocument","document","body","property","flushCustomStyles","nativeCss"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@webcomponents/shadycss/entrypoints/custom-style-interface.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\nconst customStyleInterface = new CustomStyleInterface();\n\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {}, // eslint-disable-line no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n\n    /**\n     * @param {Element} element\n     */\n    styleElement(element) { // eslint-disable-line no-unused-vars\n      customStyleInterface.processStyles();\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  }\n}\n\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,OAAOA,oBAAoB,MAAM,kCAAkC;AACnE,SAAQC,qBAAqB,EAAEC,sBAAsB,QAAO,wBAAwB;AACpF,SAAQC,kBAAkB,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,cAAc,QAAO,0BAA0B;AAEnG,MAAMC,oBAAoB,GAAG,IAAIP,oBAAoB,CAAC,CAAC;AAEvD,IAAI,CAACQ,MAAM,CAACC,QAAQ,EAAE;EACpBD,MAAM,CAACC,QAAQ,GAAG;IAChB;AACJ;AACA;AACA;AACA;IACIC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,cAAc,EAAE,CAAC,CAAC;IAAE;;IAE3D;AACJ;AACA;AACA;IACIC,kBAAkBA,CAACH,QAAQ,EAAEC,WAAW,EAAE,CAAC,CAAC;IAAE;;IAE9C;AACJ;AACA;AACA;AACA;IACIG,qBAAqBA,CAACJ,QAAQ,EAAEC,WAAW,EAAEC,cAAc,EAAE,CAAC,CAAC;IAAE;;IAEjE;AACJ;AACA;AACA;IACIG,YAAYA,CAACC,OAAO,EAAEC,UAAU,EAAE;MAChCX,oBAAoB,CAACY,aAAa,CAAC,CAAC;MACpCjB,sBAAsB,CAACe,OAAO,EAAEC,UAAU,CAAC;IAC7C,CAAC;IAED;AACJ;AACA;IACIE,YAAYA,CAACH,OAAO,EAAE;MAAE;MACtBV,oBAAoB,CAACY,aAAa,CAAC,CAAC;IACtC,CAAC;IAED;AACJ;AACA;IACIE,aAAaA,CAACH,UAAU,EAAE;MACxBX,oBAAoB,CAACY,aAAa,CAAC,CAAC;MACpCjB,sBAAsB,CAACoB,QAAQ,CAACC,IAAI,EAAEL,UAAU,CAAC;IACnD,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIjB,qBAAqBA,CAACgB,OAAO,EAAEO,QAAQ,EAAE;MACvC,OAAOvB,qBAAqB,CAACgB,OAAO,EAAEO,QAAQ,CAAC;IACjD,CAAC;IAEDC,iBAAiBA,CAAA,EAAG,CAAC,CAAC;IACtBC,SAAS,EAAEvB,kBAAkB;IAC7BC,YAAY,EAAEA,YAAY;IAC1BC,QAAQ,EAAEA,QAAQ;IAClBC,cAAc,EAAEA;EAClB,CAAC;AACH;AAEAE,MAAM,CAACC,QAAQ,CAACT,oBAAoB,GAAGO,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}