{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nexport const DisabledMixin = dedupingMixin(superclass => class DisabledMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _disabledChanged(disabled) {\n    this._setAriaDisabled(disabled);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _setAriaDisabled(disabled) {\n    if (disabled) {\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * Overrides the default element `click` method in order to prevent\n   * firing the `click` event when the element is disabled.\n   * @protected\n   * @override\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n});","map":{"version":3,"names":["dedupingMixin","DisabledMixin","superclass","DisabledMixinClass","properties","disabled","type","Boolean","value","observer","reflectToAttribute","_disabledChanged","_setAriaDisabled","setAttribute","removeAttribute","click"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/a11y-base/src/disabled-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nexport const DisabledMixin = dedupingMixin(\n  (superclass) =>\n    class DisabledMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * If true, the user cannot interact with this element.\n           */\n          disabled: {\n            type: Boolean,\n            value: false,\n            observer: '_disabledChanged',\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _disabledChanged(disabled) {\n        this._setAriaDisabled(disabled);\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @protected\n       */\n      _setAriaDisabled(disabled) {\n        if (disabled) {\n          this.setAttribute('aria-disabled', 'true');\n        } else {\n          this.removeAttribute('aria-disabled');\n        }\n      }\n\n      /**\n       * Overrides the default element `click` method in order to prevent\n       * firing the `click` event when the element is disabled.\n       * @protected\n       * @override\n       */\n      click() {\n        if (!this.disabled) {\n          super.click();\n        }\n      }\n    },\n);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,qCAAqC;;AAEnE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGD,aAAa,CACvCE,UAAU,IACT,MAAMC,kBAAkB,SAASD,UAAU,CAAC;EAC1C,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACV;AACA;MACUC,QAAQ,EAAE;QACRC,IAAI,EAAEC,OAAO;QACbC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE,kBAAkB;QAC5BC,kBAAkB,EAAE;MACtB;IACF,CAAC;EACH;;EAEA;AACN;AACA;AACA;EACMC,gBAAgBA,CAACN,QAAQ,EAAE;IACzB,IAAI,CAACO,gBAAgB,CAACP,QAAQ,CAAC;EACjC;;EAEA;AACN;AACA;AACA;EACMO,gBAAgBA,CAACP,QAAQ,EAAE;IACzB,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACQ,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;IAC5C,CAAC,MAAM;MACL,IAAI,CAACC,eAAe,CAAC,eAAe,CAAC;IACvC;EACF;;EAEA;AACN;AACA;AACA;AACA;AACA;EACMC,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACV,QAAQ,EAAE;MAClB,KAAK,CAACU,KAAK,CAAC,CAAC;IACf;EACF;AACF,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}