{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = superClass => class SortMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n       */\n      multiSort: {\n        type: Boolean,\n        value: false\n      },\n      _sorters: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n      _previousSorters: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      }\n    };\n  }\n  ready() {\n    super.ready();\n    this.addEventListener('sorter-changed', this._onSorterChanged);\n\n    // With Polymer 2 & shady the 'sorter-changed' listener isn't guaranteed to be registered\n    // before child <vaadin-grid-sorter>'s upgrade and fire the events. The following\n    // makes sure that 'sorter-changed' is fired for all <vaadin-grid-sorter> elements\n    // after this (<vaadin-grid>) is ready (and the listeners are active).\n    if (window.ShadyDOM) {\n      microTask.run(() => {\n        const sorters = this.querySelectorAll('vaadin-grid-sorter');\n        Array.from(sorters).forEach(sorter => {\n          // Don't try to fire if the sorter hasn't been upgraded yet\n          if (sorter instanceof PolymerElement) {\n            sorter.dispatchEvent(new CustomEvent('sorter-changed', {\n              bubbles: true,\n              composed: true\n            }));\n          }\n        });\n      });\n    }\n  }\n  _onSorterChanged(e) {\n    const sorter = e.target;\n    this._removeArrayItem(this._sorters, sorter);\n    sorter._order = null;\n    if (this.multiSort) {\n      if (sorter.direction) {\n        this._sorters.unshift(sorter);\n      }\n      this._sorters.forEach((sorter, index) => sorter._order = this._sorters.length > 1 ? index : null, this);\n    } else {\n      if (sorter.direction) {\n        this._sorters.forEach(sorter => {\n          sorter._order = null;\n          sorter.direction = null;\n        });\n        this._sorters = [sorter];\n      }\n    }\n    e.stopPropagation();\n    if (this.dataProvider &&\n    // No need to clear cache if sorters didn't change\n    JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())) {\n      this.clearCache();\n    }\n    this._a11yUpdateSorters();\n    this._previousSorters = this._mapSorters();\n  }\n  _mapSorters() {\n    return this._sorters.map(sorter => {\n      return {\n        path: sorter.path,\n        direction: sorter.direction\n      };\n    });\n  }\n  _removeArrayItem(array, item) {\n    const index = array.indexOf(item);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["microTask","PolymerElement","SortMixin","superClass","properties","multiSort","type","Boolean","value","_sorters","Array","_previousSorters","ready","addEventListener","_onSorterChanged","window","ShadyDOM","run","sorters","querySelectorAll","from","forEach","sorter","dispatchEvent","CustomEvent","bubbles","composed","e","target","_removeArrayItem","_order","direction","unshift","index","length","stopPropagation","dataProvider","JSON","stringify","_mapSorters","clearCache","_a11yUpdateSorters","map","path","array","item","indexOf","splice"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-mixin.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\n\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = superClass => class SortMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n       */\n      multiSort: {\n        type: Boolean,\n        value: false\n      },\n\n      _sorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _previousSorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('sorter-changed', this._onSorterChanged);\n\n    // With Polymer 2 & shady the 'sorter-changed' listener isn't guaranteed to be registered\n    // before child <vaadin-grid-sorter>'s upgrade and fire the events. The following\n    // makes sure that 'sorter-changed' is fired for all <vaadin-grid-sorter> elements\n    // after this (<vaadin-grid>) is ready (and the listeners are active).\n    if (window.ShadyDOM) {\n      microTask.run(() => {\n        const sorters = this.querySelectorAll('vaadin-grid-sorter');\n        Array.from(sorters).forEach((sorter) => {\n          // Don't try to fire if the sorter hasn't been upgraded yet\n          if (sorter instanceof PolymerElement) {\n            sorter.dispatchEvent(new CustomEvent('sorter-changed', {bubbles: true, composed: true}));\n          }\n        });\n      });\n    }\n  }\n\n  _onSorterChanged(e) {\n    const sorter = e.target;\n\n    this._removeArrayItem(this._sorters, sorter);\n    sorter._order = null;\n\n    if (this.multiSort) {\n      if (sorter.direction) {\n        this._sorters.unshift(sorter);\n      }\n\n      this._sorters.forEach((sorter, index) => sorter._order = this._sorters.length > 1 ? index : null, this);\n    } else {\n      if (sorter.direction) {\n        this._sorters.forEach(sorter => {\n          sorter._order = null;\n          sorter.direction = null;\n        });\n        this._sorters = [sorter];\n      }\n    }\n\n    e.stopPropagation();\n\n    if (this.dataProvider &&\n      // No need to clear cache if sorters didn't change\n      JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())) {\n      this.clearCache();\n    }\n\n    this._a11yUpdateSorters();\n\n    this._previousSorters = this._mapSorters();\n  }\n\n  _mapSorters() {\n    return this._sorters.map(sorter => {\n      return {\n        path: sorter.path,\n        direction: sorter.direction\n      };\n    });\n  }\n\n  _removeArrayItem(array, item) {\n    const index = array.indexOf(item);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}