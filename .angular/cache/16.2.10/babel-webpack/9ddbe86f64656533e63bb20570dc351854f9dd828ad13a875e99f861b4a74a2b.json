{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = regexp => regexp.test(navigator.userAgent);\nconst testPlatform = regexp => regexp.test(navigator.platform);\nconst testVendor = regexp => regexp.test(navigator.vendor);\nexport const isAndroid = testUserAgent(/Android/u);\nexport const isChrome = testUserAgent(/Chrome/u) && testVendor(/Google Inc/u);\nexport const isFirefox = testUserAgent(/Firefox/u);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nexport const isIPad = testPlatform(/^iPad/u) || testPlatform(/^Mac/u) && navigator.maxTouchPoints > 1;\nexport const isIPhone = testPlatform(/^iPhone/u);\nexport const isIOS = isIPhone || isIPad;\nexport const isSafari = testUserAgent(/^((?!chrome|android).)*safari/iu);\nexport const isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();","map":{"version":3,"names":["testUserAgent","regexp","test","navigator","userAgent","testPlatform","platform","testVendor","vendor","isAndroid","isChrome","isFirefox","isIPad","maxTouchPoints","isIPhone","isIOS","isSafari","isTouch","document","createEvent","e"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/component-base/src/browser-utils.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = (regexp) => regexp.test(navigator.userAgent);\n\nconst testPlatform = (regexp) => regexp.test(navigator.platform);\n\nconst testVendor = (regexp) => regexp.test(navigator.vendor);\n\nexport const isAndroid = testUserAgent(/Android/u);\n\nexport const isChrome = testUserAgent(/Chrome/u) && testVendor(/Google Inc/u);\n\nexport const isFirefox = testUserAgent(/Firefox/u);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nexport const isIPad = testPlatform(/^iPad/u) || (testPlatform(/^Mac/u) && navigator.maxTouchPoints > 1);\n\nexport const isIPhone = testPlatform(/^iPhone/u);\n\nexport const isIOS = isIPhone || isIPad;\n\nexport const isSafari = testUserAgent(/^((?!chrome|android).)*safari/iu);\n\nexport const isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAIC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAElE,MAAMC,YAAY,GAAIJ,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACG,QAAQ,CAAC;AAEhE,MAAMC,UAAU,GAAIN,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,SAAS,CAACK,MAAM,CAAC;AAE5D,OAAO,MAAMC,SAAS,GAAGT,aAAa,CAAC,UAAU,CAAC;AAElD,OAAO,MAAMU,QAAQ,GAAGV,aAAa,CAAC,SAAS,CAAC,IAAIO,UAAU,CAAC,aAAa,CAAC;AAE7E,OAAO,MAAMI,SAAS,GAAGX,aAAa,CAAC,UAAU,CAAC;;AAElD;AACA,OAAO,MAAMY,MAAM,GAAGP,YAAY,CAAC,QAAQ,CAAC,IAAKA,YAAY,CAAC,OAAO,CAAC,IAAIF,SAAS,CAACU,cAAc,GAAG,CAAE;AAEvG,OAAO,MAAMC,QAAQ,GAAGT,YAAY,CAAC,UAAU,CAAC;AAEhD,OAAO,MAAMU,KAAK,GAAGD,QAAQ,IAAIF,MAAM;AAEvC,OAAO,MAAMI,QAAQ,GAAGhB,aAAa,CAAC,iCAAiC,CAAC;AAExE,OAAO,MAAMiB,OAAO,GAAG,CAAC,MAAM;EAC5B,IAAI;IACFC,QAAQ,CAACC,WAAW,CAAC,YAAY,CAAC;IAClC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}