{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\n\n/**\n * A mixin providing common text field functionality.\n *\n * @polymerMixin\n * @mixes InputFieldMixin\n */\nexport const TextFieldMixin = superClass => class TextFieldMixinClass extends InputFieldMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Maximum number of characters (in Unicode code points) that the user can enter.\n       */\n      maxlength: {\n        type: Number\n      },\n      /**\n       * Minimum number of characters (in Unicode code points) that the user can enter.\n       */\n      minlength: {\n        type: Number\n      },\n      /**\n       * A regular expression that the value is checked against.\n       * The pattern must match the entire value, not just some subset.\n       */\n      pattern: {\n        type: String\n      }\n    };\n  }\n  static get delegateAttrs() {\n    return [...super.delegateAttrs, 'maxlength', 'minlength', 'pattern'];\n  }\n  static get constraints() {\n    return [...super.constraints, 'maxlength', 'minlength', 'pattern'];\n  }\n  constructor() {\n    super();\n    this._setType('text');\n  }\n\n  /** @protected */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addController(new InputController(this, input => {\n      this._setInputElement(input);\n      this._setFocusElement(input);\n      this.stateTarget = input;\n      this.ariaTarget = input;\n    }));\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n  }\n};","map":{"version":3,"names":["InputController","InputFieldMixin","LabelledInputController","TextFieldMixin","superClass","TextFieldMixinClass","properties","maxlength","type","Number","minlength","pattern","String","delegateAttrs","constraints","constructor","_setType","clearElement","$","clearButton","ready","addController","input","_setInputElement","_setFocusElement","stateTarget","ariaTarget","inputElement","_labelController"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/text-field/src/vaadin-text-field-mixin.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\n\n/**\n * A mixin providing common text field functionality.\n *\n * @polymerMixin\n * @mixes InputFieldMixin\n */\nexport const TextFieldMixin = (superClass) =>\n  class TextFieldMixinClass extends InputFieldMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Maximum number of characters (in Unicode code points) that the user can enter.\n         */\n        maxlength: {\n          type: Number,\n        },\n\n        /**\n         * Minimum number of characters (in Unicode code points) that the user can enter.\n         */\n        minlength: {\n          type: Number,\n        },\n\n        /**\n         * A regular expression that the value is checked against.\n         * The pattern must match the entire value, not just some subset.\n         */\n        pattern: {\n          type: String,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'maxlength', 'minlength', 'pattern'];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'maxlength', 'minlength', 'pattern'];\n    }\n\n    constructor() {\n      super();\n      this._setType('text');\n    }\n\n    /** @protected */\n    get clearElement() {\n      return this.$.clearButton;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(\n        new InputController(this, (input) => {\n          this._setInputElement(input);\n          this._setFocusElement(input);\n          this.stateTarget = input;\n          this.ariaTarget = input;\n        }),\n      );\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n    }\n  };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,4CAA4C;AAC5E,SAASC,eAAe,QAAQ,6CAA6C;AAC7E,SAASC,uBAAuB,QAAQ,qDAAqD;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAIC,UAAU,IACvC,MAAMC,mBAAmB,SAASJ,eAAe,CAACG,UAAU,CAAC,CAAC;EAC5D,WAAWE,UAAUA,CAAA,EAAG;IACtB,OAAO;MACL;AACR;AACA;MACQC,SAAS,EAAE;QACTC,IAAI,EAAEC;MACR,CAAC;MAED;AACR;AACA;MACQC,SAAS,EAAE;QACTF,IAAI,EAAEC;MACR,CAAC;MAED;AACR;AACA;AACA;MACQE,OAAO,EAAE;QACPH,IAAI,EAAEI;MACR;IACF,CAAC;EACH;EAEA,WAAWC,aAAaA,CAAA,EAAG;IACzB,OAAO,CAAC,GAAG,KAAK,CAACA,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC;EACtE;EAEA,WAAWC,WAAWA,CAAA,EAAG;IACvB,OAAO,CAAC,GAAG,KAAK,CAACA,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC;EACpE;EAEAC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC;EACvB;;EAEA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,CAAC,CAACC,WAAW;EAC3B;;EAEA;EACAC,KAAKA,CAAA,EAAG;IACN,KAAK,CAACA,KAAK,CAAC,CAAC;IAEb,IAAI,CAACC,aAAa,CAChB,IAAIrB,eAAe,CAAC,IAAI,EAAGsB,KAAK,IAAK;MACnC,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAAC;MAC5B,IAAI,CAACE,gBAAgB,CAACF,KAAK,CAAC;MAC5B,IAAI,CAACG,WAAW,GAAGH,KAAK;MACxB,IAAI,CAACI,UAAU,GAAGJ,KAAK;IACzB,CAAC,CACH,CAAC;IACD,IAAI,CAACD,aAAa,CAAC,IAAInB,uBAAuB,CAAC,IAAI,CAACyB,YAAY,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3F;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}