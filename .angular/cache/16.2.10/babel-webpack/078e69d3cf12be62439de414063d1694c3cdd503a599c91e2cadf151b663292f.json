{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { nothing, render, svg } from 'lit';\nimport { isTemplateResult, TemplateResultType } from 'lit/directive-helpers.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\n\n/**\n * Clone given node and return its content as SVG literal.\n *\n * @param {Element} source\n */\nexport function cloneSvgNode(source) {\n  let result = nothing;\n  if (source) {\n    const content = source.cloneNode(true);\n    content.removeAttribute('id');\n    result = svg`${unsafeSVG(content.outerHTML)}`;\n  }\n  return result;\n}\n\n/**\n * Test if the given argument is a valid SVG literal.\n *\n * @param {unknown} source\n */\nexport function isValidSvg(source) {\n  return isTemplateResult(source, TemplateResultType.SVG) || source === nothing;\n}\n\n/**\n * Create a valid SVG literal based on the argument.\n *\n * @param {unknown} svg\n */\nexport function ensureSvgLiteral(source) {\n  let result = source == null || source === '' ? nothing : source;\n  if (!isValidSvg(result)) {\n    console.error('[vaadin-icon] Invalid svg passed, please use Lit svg literal.');\n    result = nothing;\n  }\n  return result;\n}\n\n/**\n * Render a given SVG literal to the container.\n *\n * @param {unknown} source\n * @param {SVGElement} container\n */\nexport function renderSvg(source, container) {\n  const result = ensureSvgLiteral(source);\n  render(result, container);\n}\n\n/**\n * Create an SVG literal from source string.\n *\n * @param {string} source\n */\nexport function unsafeSvgLiteral(source) {\n  return svg`${unsafeSVG(source)}`;\n}","map":{"version":3,"names":["nothing","render","svg","isTemplateResult","TemplateResultType","unsafeSVG","cloneSvgNode","source","result","content","cloneNode","removeAttribute","outerHTML","isValidSvg","SVG","ensureSvgLiteral","console","error","renderSvg","container","unsafeSvgLiteral"],"sources":["C:/Users/Sudebi/Vaadin/Workspace/Angular/AngluarVaadin/using-web-components-in-angular/node_modules/@vaadin/icon/src/vaadin-icon-svg.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { nothing, render, svg } from 'lit';\nimport { isTemplateResult, TemplateResultType } from 'lit/directive-helpers.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\n\n/**\n * Clone given node and return its content as SVG literal.\n *\n * @param {Element} source\n */\nexport function cloneSvgNode(source) {\n  let result = nothing;\n  if (source) {\n    const content = source.cloneNode(true);\n    content.removeAttribute('id');\n    result = svg`${unsafeSVG(content.outerHTML)}`;\n  }\n\n  return result;\n}\n\n/**\n * Test if the given argument is a valid SVG literal.\n *\n * @param {unknown} source\n */\nexport function isValidSvg(source) {\n  return isTemplateResult(source, TemplateResultType.SVG) || source === nothing;\n}\n\n/**\n * Create a valid SVG literal based on the argument.\n *\n * @param {unknown} svg\n */\nexport function ensureSvgLiteral(source) {\n  let result = source == null || source === '' ? nothing : source;\n\n  if (!isValidSvg(result)) {\n    console.error('[vaadin-icon] Invalid svg passed, please use Lit svg literal.');\n    result = nothing;\n  }\n\n  return result;\n}\n\n/**\n * Render a given SVG literal to the container.\n *\n * @param {unknown} source\n * @param {SVGElement} container\n */\nexport function renderSvg(source, container) {\n  const result = ensureSvgLiteral(source);\n  render(result, container);\n}\n\n/**\n * Create an SVG literal from source string.\n *\n * @param {string} source\n */\nexport function unsafeSvgLiteral(source) {\n  return svg`${unsafeSVG(source)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,MAAM,EAAEC,GAAG,QAAQ,KAAK;AAC1C,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,0BAA0B;AAC/E,SAASC,SAAS,QAAQ,8BAA8B;;AAExD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAE;EACnC,IAAIC,MAAM,GAAGR,OAAO;EACpB,IAAIO,MAAM,EAAE;IACV,MAAME,OAAO,GAAGF,MAAM,CAACG,SAAS,CAAC,IAAI,CAAC;IACtCD,OAAO,CAACE,eAAe,CAAC,IAAI,CAAC;IAC7BH,MAAM,GAAGN,GAAI,GAAEG,SAAS,CAACI,OAAO,CAACG,SAAS,CAAE,EAAC;EAC/C;EAEA,OAAOJ,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,UAAUA,CAACN,MAAM,EAAE;EACjC,OAAOJ,gBAAgB,CAACI,MAAM,EAAEH,kBAAkB,CAACU,GAAG,CAAC,IAAIP,MAAM,KAAKP,OAAO;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASe,gBAAgBA,CAACR,MAAM,EAAE;EACvC,IAAIC,MAAM,GAAGD,MAAM,IAAI,IAAI,IAAIA,MAAM,KAAK,EAAE,GAAGP,OAAO,GAAGO,MAAM;EAE/D,IAAI,CAACM,UAAU,CAACL,MAAM,CAAC,EAAE;IACvBQ,OAAO,CAACC,KAAK,CAAC,+DAA+D,CAAC;IAC9ET,MAAM,GAAGR,OAAO;EAClB;EAEA,OAAOQ,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,SAASA,CAACX,MAAM,EAAEY,SAAS,EAAE;EAC3C,MAAMX,MAAM,GAAGO,gBAAgB,CAACR,MAAM,CAAC;EACvCN,MAAM,CAACO,MAAM,EAAEW,SAAS,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACb,MAAM,EAAE;EACvC,OAAOL,GAAI,GAAEG,SAAS,CAACE,MAAM,CAAE,EAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}